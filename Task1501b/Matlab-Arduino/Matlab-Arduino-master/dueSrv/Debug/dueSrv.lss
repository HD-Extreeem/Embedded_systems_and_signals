
dueSrv.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005bc8  00080000  00080000  00008000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00085bc8  00085bc8  0000dbc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009ec  20070000  00085bd0  00010000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          000000f0  200709ec  000865bc  000109ec  2**2
                  ALLOC
  4 .stack        00002004  20070adc  000866ac  000109ec  2**0
                  ALLOC
  5 .ARM.attributes 00000029  00000000  00000000  000109ec  2**0
                  CONTENTS, READONLY
  6 .comment      0000005b  00000000  00000000  00010a15  2**0
                  CONTENTS, READONLY
  7 .debug_info   0000a32b  00000000  00000000  00010a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00001d79  00000000  00000000  0001ad9b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003ec7  00000000  00000000  0001cb14  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000008f8  00000000  00000000  000209db  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000007d8  00000000  00000000  000212d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00017eb4  00000000  00000000  00021aab  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000e8d1  00000000  00000000  0003995f  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00061109  00000000  00000000  00048230  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001a30  00000000  00000000  000a933c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00080000 <_sfixed>:
   80000:	20072ae0 	.word	0x20072ae0
   80004:	00080cb5 	.word	0x00080cb5
   80008:	00080cb1 	.word	0x00080cb1
   8000c:	00080cb1 	.word	0x00080cb1
   80010:	00080cb1 	.word	0x00080cb1
   80014:	00080cb1 	.word	0x00080cb1
   80018:	00080cb1 	.word	0x00080cb1
	...
   8002c:	00080cb1 	.word	0x00080cb1
   80030:	00080cb1 	.word	0x00080cb1
   80034:	00000000 	.word	0x00000000
   80038:	00080cb1 	.word	0x00080cb1
   8003c:	00080cb1 	.word	0x00080cb1
   80040:	00080cb1 	.word	0x00080cb1
   80044:	00080cb1 	.word	0x00080cb1
   80048:	00080cb1 	.word	0x00080cb1
   8004c:	00080cb1 	.word	0x00080cb1
   80050:	00080cb1 	.word	0x00080cb1
   80054:	00080cb1 	.word	0x00080cb1
   80058:	00080cb1 	.word	0x00080cb1
   8005c:	00080cb1 	.word	0x00080cb1
   80060:	00080cb1 	.word	0x00080cb1
   80064:	00080cb1 	.word	0x00080cb1
   80068:	00000000 	.word	0x00000000
   8006c:	00080b21 	.word	0x00080b21
   80070:	00080b35 	.word	0x00080b35
   80074:	00080b49 	.word	0x00080b49
   80078:	00080b5d 	.word	0x00080b5d
	...
   80084:	00080cb1 	.word	0x00080cb1
   80088:	00080cb1 	.word	0x00080cb1
   8008c:	00080cb1 	.word	0x00080cb1
   80090:	00080cb1 	.word	0x00080cb1
   80094:	00080cb1 	.word	0x00080cb1
   80098:	00080cb1 	.word	0x00080cb1
   8009c:	00080cb1 	.word	0x00080cb1
   800a0:	00080cb1 	.word	0x00080cb1
   800a4:	00000000 	.word	0x00000000
   800a8:	00080cb1 	.word	0x00080cb1
   800ac:	00080cb1 	.word	0x00080cb1
   800b0:	00080cb1 	.word	0x00080cb1
   800b4:	00080cb1 	.word	0x00080cb1
   800b8:	00080cb1 	.word	0x00080cb1
   800bc:	00080cb1 	.word	0x00080cb1
   800c0:	00080cb1 	.word	0x00080cb1
   800c4:	00080cb1 	.word	0x00080cb1
   800c8:	00080cb1 	.word	0x00080cb1
   800cc:	00080cb1 	.word	0x00080cb1
   800d0:	00080cb1 	.word	0x00080cb1
   800d4:	00080cb1 	.word	0x00080cb1
   800d8:	00080cb1 	.word	0x00080cb1
   800dc:	00080cb1 	.word	0x00080cb1
   800e0:	00080cb1 	.word	0x00080cb1
   800e4:	00080cb1 	.word	0x00080cb1
   800e8:	00080cb1 	.word	0x00080cb1
   800ec:	00080cb1 	.word	0x00080cb1
   800f0:	00080cb1 	.word	0x00080cb1

000800f4 <__do_global_dtors_aux>:
   800f4:	b510      	push	{r4, lr}
   800f6:	4c05      	ldr	r4, [pc, #20]	; (8010c <__do_global_dtors_aux+0x18>)
   800f8:	7823      	ldrb	r3, [r4, #0]
   800fa:	b933      	cbnz	r3, 8010a <__do_global_dtors_aux+0x16>
   800fc:	4b04      	ldr	r3, [pc, #16]	; (80110 <__do_global_dtors_aux+0x1c>)
   800fe:	b113      	cbz	r3, 80106 <__do_global_dtors_aux+0x12>
   80100:	4804      	ldr	r0, [pc, #16]	; (80114 <__do_global_dtors_aux+0x20>)
   80102:	f3af 8000 	nop.w
   80106:	2301      	movs	r3, #1
   80108:	7023      	strb	r3, [r4, #0]
   8010a:	bd10      	pop	{r4, pc}
   8010c:	200709ec 	.word	0x200709ec
   80110:	00000000 	.word	0x00000000
   80114:	00085bd0 	.word	0x00085bd0

00080118 <frame_dummy>:
   80118:	b508      	push	{r3, lr}
   8011a:	4b06      	ldr	r3, [pc, #24]	; (80134 <frame_dummy+0x1c>)
   8011c:	b11b      	cbz	r3, 80126 <frame_dummy+0xe>
   8011e:	4806      	ldr	r0, [pc, #24]	; (80138 <frame_dummy+0x20>)
   80120:	4906      	ldr	r1, [pc, #24]	; (8013c <frame_dummy+0x24>)
   80122:	f3af 8000 	nop.w
   80126:	4806      	ldr	r0, [pc, #24]	; (80140 <frame_dummy+0x28>)
   80128:	6803      	ldr	r3, [r0, #0]
   8012a:	b113      	cbz	r3, 80132 <frame_dummy+0x1a>
   8012c:	4b05      	ldr	r3, [pc, #20]	; (80144 <frame_dummy+0x2c>)
   8012e:	b103      	cbz	r3, 80132 <frame_dummy+0x1a>
   80130:	4798      	blx	r3
   80132:	bd08      	pop	{r3, pc}
   80134:	00000000 	.word	0x00000000
   80138:	00085bd0 	.word	0x00085bd0
   8013c:	200709f0 	.word	0x200709f0
   80140:	00085bd0 	.word	0x00085bd0
   80144:	00000000 	.word	0x00000000

00080148 <adc_init>:
 *
 * \return 0 on success.
 */
uint32_t adc_init(Adc *p_adc, const uint32_t ul_mck,
		const uint32_t ul_adc_clock, const enum adc_startup_time startup)
{
   80148:	b430      	push	{r4, r5}
	uint32_t ul_prescal;

	/*  Reset the controller. */
	p_adc->ADC_CR = ADC_CR_SWRST;
   8014a:	2401      	movs	r4, #1
   8014c:	6004      	str	r4, [r0, #0]

	/* Reset Mode Register. */
	p_adc->ADC_MR = 0;
   8014e:	2400      	movs	r4, #0
   80150:	6044      	str	r4, [r0, #4]

	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
   80152:	f240 2502 	movw	r5, #514	; 0x202
   80156:	f8c0 5120 	str.w	r5, [r0, #288]	; 0x120
	p_adc->ADC_RCR = 0;
   8015a:	f8c0 4104 	str.w	r4, [r0, #260]	; 0x104
	p_adc->ADC_RNCR = 0;
   8015e:	f8c0 4114 	str.w	r4, [r0, #276]	; 0x114

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   80162:	6845      	ldr	r5, [r0, #4]
   80164:	432b      	orrs	r3, r5
	/* Reset PDC transfer. */
	p_adc->ADC_PTCR = (ADC_PTCR_RXTDIS | ADC_PTCR_TXTDIS);
	p_adc->ADC_RCR = 0;
	p_adc->ADC_RNCR = 0;

	ul_prescal = ul_mck / (2 * ul_adc_clock) - 1;
   80166:	0052      	lsls	r2, r2, #1
   80168:	fbb1 f1f2 	udiv	r1, r1, r2
   8016c:	1e4d      	subs	r5, r1, #1
	p_adc->ADC_MR |= ADC_MR_PRESCAL(ul_prescal) | startup;
   8016e:	022d      	lsls	r5, r5, #8
   80170:	b2ad      	uxth	r5, r5
   80172:	432b      	orrs	r3, r5
   80174:	6043      	str	r3, [r0, #4]
	return 0;
}
   80176:	4620      	mov	r0, r4
   80178:	bc30      	pop	{r4, r5}
   8017a:	4770      	bx	lr

0008017c <adc_set_resolution>:
		p_adc->ADC_MR &= ~ADC_MR_LOWRES;
		p_adc->ADC_EMR |= resolution;
		break;
	}
#else
	p_adc->ADC_MR &= ~ADC_MR_LOWRES;
   8017c:	6843      	ldr	r3, [r0, #4]
   8017e:	f023 0310 	bic.w	r3, r3, #16
   80182:	6043      	str	r3, [r0, #4]
	p_adc->ADC_MR |= resolution;
   80184:	6843      	ldr	r3, [r0, #4]
   80186:	4319      	orrs	r1, r3
   80188:	6041      	str	r1, [r0, #4]
   8018a:	4770      	bx	lr

0008018c <adc_configure_trigger>:
 *
 */
void adc_configure_trigger(Adc *p_adc, const enum adc_trigger_t trigger,
		uint8_t uc_freerun)
{
	p_adc->ADC_MR |= trigger | ((uc_freerun << 7) & ADC_MR_FREERUN);
   8018c:	6843      	ldr	r3, [r0, #4]
   8018e:	4319      	orrs	r1, r3
   80190:	01d2      	lsls	r2, r2, #7
   80192:	b2d3      	uxtb	r3, r2
   80194:	4319      	orrs	r1, r3
   80196:	6041      	str	r1, [r0, #4]
   80198:	4770      	bx	lr
   8019a:	bf00      	nop

0008019c <adc_configure_timing>:
 * \param uc_settling Analog settling time = (uc_settling + 1) / ADC clock.
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
   8019c:	b410      	push	{r4}
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   8019e:	6844      	ldr	r4, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
   801a0:	4322      	orrs	r2, r4
   801a2:	0609      	lsls	r1, r1, #24
   801a4:	f001 6470 	and.w	r4, r1, #251658240	; 0xf000000
   801a8:	4322      	orrs	r2, r4
 * \param uc_transfer Data transfer time = (uc_transfer * 2 + 3) / ADC clock.
 */
void adc_configure_timing(Adc *p_adc, const uint8_t uc_tracking,
		const enum adc_settling_time_t settling,const uint8_t uc_transfer)
{
	p_adc->ADC_MR |= ADC_MR_TRANSFER(uc_transfer)
   801aa:	071b      	lsls	r3, r3, #28
   801ac:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
   801b0:	431a      	orrs	r2, r3
   801b2:	6042      	str	r2, [r0, #4]
			| settling | ADC_MR_TRACKTIM(uc_tracking);
}
   801b4:	f85d 4b04 	ldr.w	r4, [sp], #4
   801b8:	4770      	bx	lr
   801ba:	bf00      	nop

000801bc <adc_start>:
 * \param p_adc Pointer to an ADC instance.
 */

void adc_start(Adc *p_adc)
{
	p_adc->ADC_CR = ADC_CR_START;
   801bc:	2302      	movs	r3, #2
   801be:	6003      	str	r3, [r0, #0]
   801c0:	4770      	bx	lr
   801c2:	bf00      	nop

000801c4 <adc_enable_channel>:
 * \param p_adc Pointer to an ADC instance.
 * \param adc_ch ADC channel number.
 */
void adc_enable_channel(Adc *p_adc, const enum adc_channel_num_t adc_ch)
{
	p_adc->ADC_CHER = 1 << adc_ch;
   801c4:	2301      	movs	r3, #1
   801c6:	fa03 f101 	lsl.w	r1, r3, r1
   801ca:	6101      	str	r1, [r0, #16]
   801cc:	4770      	bx	lr
   801ce:	bf00      	nop

000801d0 <adc_enable_all_channel>:
 * \param p_adc Pointer to an ADC instance.
 */
void adc_enable_all_channel(Adc *p_adc)
{
#if SAM3S || SAM4S || SAM3N || SAM3XA
	p_adc->ADC_CHER = 0xFFFF;
   801d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
   801d4:	6103      	str	r3, [r0, #16]
   801d6:	4770      	bx	lr

000801d8 <pin_mapper>:
					PIO_PA22_IDX,PIO_PA6_IDX,PIO_PA4_IDX,PIO_PA3_IDX,PIO_PA2_IDX,PIO_PB17_IDX,
					PIO_PB18_IDX,PIO_PB19_IDX,PIO_PB20_IDX};
					
uint8_t pin_mapper(uint8_t pin){
	return pin_table[pin];
   801d8:	4b01      	ldr	r3, [pc, #4]	; (801e0 <pin_mapper+0x8>)
   801da:	5c18      	ldrb	r0, [r3, r0]
   801dc:	4770      	bx	lr
   801de:	bf00      	nop
   801e0:	2007012c 	.word	0x2007012c

000801e4 <pwm_set_duty>:
		pwm_set_duty(0);
	}
}


void pwm_set_duty(uint32_t duty_cycle){
   801e4:	b508      	push	{r3, lr}
   801e6:	4602      	mov	r2, r0
	/*Set duty cycle*/
	pwm_channel_update_duty(PWM,&pwm_channel_instance,duty_cycle);
   801e8:	4802      	ldr	r0, [pc, #8]	; (801f4 <pwm_set_duty+0x10>)
   801ea:	4903      	ldr	r1, [pc, #12]	; (801f8 <pwm_set_duty+0x14>)
   801ec:	4b03      	ldr	r3, [pc, #12]	; (801fc <pwm_set_duty+0x18>)
   801ee:	4798      	blx	r3
   801f0:	bd08      	pop	{r3, pc}
   801f2:	bf00      	nop
   801f4:	40094000 	.word	0x40094000
   801f8:	20070a08 	.word	0x20070a08
   801fc:	000806f5 	.word	0x000806f5

00080200 <pwm_setup>:
#include <pwm.h>
#include "analog_output.h"

static pwm_channel_t pwm_channel_instance;

void pwm_setup(){
   80200:	b530      	push	{r4, r5, lr}
   80202:	b085      	sub	sp, #20
	/* Enable the specified peripheral clock (PWM clock).
	   If function returns 0, then we can proceed... */
	if (pmc_enable_periph_clk(ID_PWM) == 0) {
   80204:	2024      	movs	r0, #36	; 0x24
   80206:	4b17      	ldr	r3, [pc, #92]	; (80264 <pwm_setup+0x64>)
   80208:	4798      	blx	r3
   8020a:	2800      	cmp	r0, #0
   8020c:	d128      	bne.n	80260 <pwm_setup+0x60>
		pwm_channel_disable(PWM, PWM_CHANNEL_0);
   8020e:	4d16      	ldr	r5, [pc, #88]	; (80268 <pwm_setup+0x68>)
   80210:	4628      	mov	r0, r5
   80212:	2100      	movs	r1, #0
   80214:	4b15      	ldr	r3, [pc, #84]	; (8026c <pwm_setup+0x6c>)
   80216:	4798      	blx	r3
		pwm_clock_t clock_setting = {
   80218:	4b15      	ldr	r3, [pc, #84]	; (80270 <pwm_setup+0x70>)
   8021a:	9301      	str	r3, [sp, #4]
   8021c:	2400      	movs	r4, #0
   8021e:	9402      	str	r4, [sp, #8]
   80220:	4b14      	ldr	r3, [pc, #80]	; (80274 <pwm_setup+0x74>)
   80222:	9303      	str	r3, [sp, #12]
			.ul_clka = PWM_FREQUENCY * PWM_RESOLUTION,
			.ul_clkb = 0,
			.ul_mck = sysclk_get_cpu_hz()
		};
		pwm_init(PWM, &clock_setting);
   80224:	4628      	mov	r0, r5
   80226:	a901      	add	r1, sp, #4
   80228:	4b13      	ldr	r3, [pc, #76]	; (80278 <pwm_setup+0x78>)
   8022a:	4798      	blx	r3
		pwm_channel_instance.alignment = PWM_ALIGN_LEFT;
   8022c:	4913      	ldr	r1, [pc, #76]	; (8027c <pwm_setup+0x7c>)
   8022e:	810c      	strh	r4, [r1, #8]
		pwm_channel_instance.polarity = PWM_POLARITY;
   80230:	728c      	strb	r4, [r1, #10]
		pwm_channel_instance.ul_prescaler = PWM_CMR_CPRE_CLKA;
   80232:	230b      	movs	r3, #11
   80234:	604b      	str	r3, [r1, #4]
		pwm_channel_instance.ul_period = PWM_RESOLUTION;
   80236:	23ff      	movs	r3, #255	; 0xff
   80238:	610b      	str	r3, [r1, #16]
		pwm_channel_instance.ul_duty = 0;
   8023a:	60cc      	str	r4, [r1, #12]
		pwm_channel_instance.channel = PWM_CHANNEL_0;
   8023c:	600c      	str	r4, [r1, #0]
		pwm_channel_init(PWM, &pwm_channel_instance);
   8023e:	4628      	mov	r0, r5
   80240:	4b0f      	ldr	r3, [pc, #60]	; (80280 <pwm_setup+0x80>)
   80242:	4798      	blx	r3
		/* setup PWM for pin */
		pio_set_peripheral(PWM_PIO, PWM_PERIPHERAL, PWM_PIN);
   80244:	480f      	ldr	r0, [pc, #60]	; (80284 <pwm_setup+0x84>)
   80246:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   8024a:	f44f 3280 	mov.w	r2, #65536	; 0x10000
   8024e:	4b0e      	ldr	r3, [pc, #56]	; (80288 <pwm_setup+0x88>)
   80250:	4798      	blx	r3
		/* enable PWM channel */
		pwm_channel_enable(PWM, PWM_CHANNEL_0);	
   80252:	4628      	mov	r0, r5
   80254:	4621      	mov	r1, r4
   80256:	4b0d      	ldr	r3, [pc, #52]	; (8028c <pwm_setup+0x8c>)
   80258:	4798      	blx	r3
		pwm_set_duty(0);
   8025a:	4620      	mov	r0, r4
   8025c:	4b0c      	ldr	r3, [pc, #48]	; (80290 <pwm_setup+0x90>)
   8025e:	4798      	blx	r3
	}
}
   80260:	b005      	add	sp, #20
   80262:	bd30      	pop	{r4, r5, pc}
   80264:	00080c59 	.word	0x00080c59
   80268:	40094000 	.word	0x40094000
   8026c:	00080725 	.word	0x00080725
   80270:	0003e418 	.word	0x0003e418
   80274:	0501bd00 	.word	0x0501bd00
   80278:	000805b1 	.word	0x000805b1
   8027c:	20070a08 	.word	0x20070a08
   80280:	000805f1 	.word	0x000805f1
   80284:	400e1000 	.word	0x400e1000
   80288:	000808b1 	.word	0x000808b1
   8028c:	00080719 	.word	0x00080719
   80290:	000801e5 	.word	0x000801e5

00080294 <uart_config>:
void uart_config(uint32_t baud)
{
	/* reset and disable receiver & transmitter */
	UART_CR = UART_CR_RSTRX | UART_CR_RSTTX	| UART_CR_RXDIS | UART_CR_TXDIS;
	/* configure baud rate */
	UART_BRGR = (MCK >> 4) / baud;
   80294:	4b0c      	ldr	r3, [pc, #48]	; (802c8 <uart_config+0x34>)
   80296:	fbb3 f0f0 	udiv	r0, r3, r0
   8029a:	4a0c      	ldr	r2, [pc, #48]	; (802cc <uart_config+0x38>)
   8029c:	6010      	str	r0, [r2, #0]
	/* configure mode */
	UART_MR = UART_MR_PAR_NO | UART_MR_CHMODE_NORMAL;
   8029e:	f44f 6200 	mov.w	r2, #2048	; 0x800
   802a2:	4b0b      	ldr	r3, [pc, #44]	; (802d0 <uart_config+0x3c>)
   802a4:	601a      	str	r2, [r3, #0]
	/* enable receiver and transmitter */
	UART_CR = UART_CR_RXEN | UART_CR_TXEN;
   802a6:	2250      	movs	r2, #80	; 0x50
   802a8:	3b04      	subs	r3, #4
   802aa:	601a      	str	r2, [r3, #0]
		ioport_port_mask_t mask, ioport_mode_t mode)
{
	Pio *base = arch_ioport_port_to_base(port);

	if (mode & IOPORT_MODE_PULLUP) {
		base->PIO_PUER = mask;
   802ac:	f503 63c0 	add.w	r3, r3, #1536	; 0x600
   802b0:	f44f 7280 	mov.w	r2, #256	; 0x100
   802b4:	665a      	str	r2, [r3, #100]	; 0x64
#endif

	if (mode & IOPORT_MODE_OPEN_DRAIN) {
		base->PIO_MDER = mask;
	} else {
		base->PIO_MDDR = mask;
   802b6:	655a      	str	r2, [r3, #84]	; 0x54
	}

	if (mode & (IOPORT_MODE_GLITCH_FILTER | IOPORT_MODE_DEBOUNCE)) {
		base->PIO_IFER = mask;
	} else {
		base->PIO_IFDR = mask;
   802b8:	625a      	str	r2, [r3, #36]	; 0x24
#else
		base->PIO_IFSCER = mask;
#endif
	} else {
#if SAM3U || SAM3XA
		base->PIO_SCIFSR = mask;
   802ba:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

#if !defined(IOPORT_MODE_MUX_BIT1)
	if (mode & IOPORT_MODE_MUX_BIT0) {
		base->PIO_ABSR |= mask;
	} else {
		base->PIO_ABSR &= ~mask;
   802be:	6f1a      	ldr	r2, [r3, #112]	; 0x70
   802c0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
   802c4:	671a      	str	r2, [r3, #112]	; 0x70
   802c6:	4770      	bx	lr
   802c8:	00501bd0 	.word	0x00501bd0
   802cc:	400e0820 	.word	0x400e0820
   802d0:	400e0804 	.word	0x400e0804

000802d4 <uart_transmitter_ready>:
 * Transmitter Ready?
 * Return 1 if "Transmitter Ready" flag is set, otherwise 0.
 */
int uart_transmitter_ready(void)
{
	return (UART_SR & UART_SR_TXRDY);
   802d4:	4b02      	ldr	r3, [pc, #8]	; (802e0 <uart_transmitter_ready+0xc>)
   802d6:	6818      	ldr	r0, [r3, #0]
}
   802d8:	f000 0002 	and.w	r0, r0, #2
   802dc:	4770      	bx	lr
   802de:	bf00      	nop
   802e0:	400e0814 	.word	0x400e0814

000802e4 <uart_receiver_ready>:
 * Receiver Ready?
 * Return 1 if "Receiver Ready" flag is set, otherwise 0.
 */
int uart_receiver_ready(void)
{
	return (UART_SR & UART_SR_RXRDY);
   802e4:	4b02      	ldr	r3, [pc, #8]	; (802f0 <uart_receiver_ready+0xc>)
   802e6:	6818      	ldr	r0, [r3, #0]
}
   802e8:	f000 0001 	and.w	r0, r0, #1
   802ec:	4770      	bx	lr
   802ee:	bf00      	nop
   802f0:	400e0814 	.word	0x400e0814

000802f4 <uart_send_char>:
 * Send character
 * Write character to Transmit Holding Register.
 */
void uart_send_char(uint8_t chr)
{
	UART_THR = chr;
   802f4:	4b01      	ldr	r3, [pc, #4]	; (802fc <uart_send_char+0x8>)
   802f6:	6018      	str	r0, [r3, #0]
   802f8:	4770      	bx	lr
   802fa:	bf00      	nop
   802fc:	400e081c 	.word	0x400e081c

00080300 <uart_receive_char>:
 */
char uart_receive_char(void)
{
	char chr = UART_RHR;
	return chr;
   80300:	4b01      	ldr	r3, [pc, #4]	; (80308 <uart_receive_char+0x8>)
   80302:	7818      	ldrb	r0, [r3, #0]
   80304:	4770      	bx	lr
   80306:	bf00      	nop
   80308:	400e0818 	.word	0x400e0818

0008030c <io_pin_dir>:
#include "matlab_coms/matlab_functions.h"
#include "common/pin_mapper.h"
#include "io_control/analog_output.h"
#include "io_control/adc.h"

void io_pin_dir(uint8_t pin,int8_t dir){
   8030c:	b510      	push	{r4, lr}
   8030e:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80310:	4b0f      	ldr	r3, [pc, #60]	; (80350 <io_pin_dir+0x44>)
   80312:	4798      	blx	r3
	ioport_set_pin_dir(mapp_pin,dir);
   80314:	b2e1      	uxtb	r1, r4
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   80316:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80318:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8031c:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80320:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
   80322:	2901      	cmp	r1, #1
   80324:	d105      	bne.n	80332 <io_pin_dir+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80326:	f000 021f 	and.w	r2, r0, #31
   8032a:	fa01 f202 	lsl.w	r2, r1, r2
		enum ioport_direction dir)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
   8032e:	611a      	str	r2, [r3, #16]
   80330:	e006      	b.n	80340 <io_pin_dir+0x34>
	} else if (dir == IOPORT_DIR_INPUT) {
   80332:	b929      	cbnz	r1, 80340 <io_pin_dir+0x34>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80334:	f000 021f 	and.w	r2, r0, #31
   80338:	2101      	movs	r1, #1
   8033a:	fa01 f202 	lsl.w	r2, r1, r2
	Pio *base = arch_ioport_pin_to_base(pin);

	if (dir == IOPORT_DIR_OUTPUT) {
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
   8033e:	615a      	str	r2, [r3, #20]
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   80340:	f000 001f 	and.w	r0, r0, #31
   80344:	2201      	movs	r2, #1
   80346:	fa02 f000 	lsl.w	r0, r2, r0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
	} else if (dir == IOPORT_DIR_INPUT) {
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
	}

	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
   8034a:	f8c3 00a0 	str.w	r0, [r3, #160]	; 0xa0
   8034e:	bd10      	pop	{r4, pc}
   80350:	000801d9 	.word	0x000801d9

00080354 <io_pin_level>:
}

void io_pin_level(int8_t pin,int8_t level){
   80354:	b510      	push	{r4, lr}
   80356:	460c      	mov	r4, r1
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   80358:	b2c0      	uxtb	r0, r0
   8035a:	4b0b      	ldr	r3, [pc, #44]	; (80388 <io_pin_level+0x34>)
   8035c:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   8035e:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80360:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   80364:	f203 7307 	addw	r3, r3, #1799	; 0x707
   80368:	025b      	lsls	r3, r3, #9
__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
   8036a:	b134      	cbz	r4, 8037a <io_pin_level+0x26>
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   8036c:	f000 001f 	and.w	r0, r0, #31
   80370:	2201      	movs	r2, #1
   80372:	fa02 f000 	lsl.w	r0, r2, r0
		bool level)
{
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
   80376:	6318      	str	r0, [r3, #48]	; 0x30
   80378:	bd10      	pop	{r4, pc}
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   8037a:	f000 001f 	and.w	r0, r0, #31
   8037e:	2201      	movs	r2, #1
   80380:	fa02 f000 	lsl.w	r0, r2, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
   80384:	6358      	str	r0, [r3, #52]	; 0x34
   80386:	bd10      	pop	{r4, pc}
   80388:	000801d9 	.word	0x000801d9

0008038c <io_pin_status>:
	ioport_set_pin_level(mapp_pin,level);
}

int8_t io_pin_status(int8_t pin){
   8038c:	b508      	push	{r3, lr}
	/* Map to arduino due pin */
	uint8_t mapp_pin = pin_mapper(pin);
   8038e:	b2c0      	uxtb	r0, r0
   80390:	4b09      	ldr	r3, [pc, #36]	; (803b8 <io_pin_status+0x2c>)
   80392:	4798      	blx	r3
typedef uint32_t ioport_port_t;
typedef uint32_t ioport_port_mask_t;

__always_inline static ioport_port_t arch_ioport_pin_to_port_id(ioport_pin_t pin)
{
	return pin >> 5;
   80394:	0943      	lsrs	r3, r0, #5
	} else {
		return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
		       (IOPORT_PIO_OFFSET * port));
	}
#else
	return (Pio *)((uintptr_t)IOPORT_BASE_ADDRESS +
   80396:	f503 1300 	add.w	r3, r3, #2097152	; 0x200000
   8039a:	f203 7307 	addw	r3, r3, #1799	; 0x707
   8039e:	025b      	lsls	r3, r3, #9
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   803a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
	return arch_ioport_port_to_base(arch_ioport_pin_to_port_id(pin));
}

__always_inline static ioport_port_mask_t arch_ioport_pin_to_mask(ioport_pin_t pin)
{
	return 1U << (pin & 0x1F);
   803a2:	f000 001f 	and.w	r0, r0, #31
   803a6:	2201      	movs	r2, #1
   803a8:	fa02 f000 	lsl.w	r0, r2, r0
	base->PIO_CODR = mask & ~level;
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->PIO_PDSR & arch_ioport_pin_to_mask(pin);
   803ac:	4218      	tst	r0, r3
	return ioport_get_pin_level(mapp_pin);
}
   803ae:	bf0c      	ite	eq
   803b0:	2000      	moveq	r0, #0
   803b2:	2001      	movne	r0, #1
   803b4:	bd08      	pop	{r3, pc}
   803b6:	bf00      	nop
   803b8:	000801d9 	.word	0x000801d9

000803bc <io_pwm_duty>:

void io_pwm_duty(uint8_t duty){
   803bc:	b508      	push	{r3, lr}
	pwm_set_duty(duty);
   803be:	4b01      	ldr	r3, [pc, #4]	; (803c4 <io_pwm_duty+0x8>)
   803c0:	4798      	blx	r3
   803c2:	bd08      	pop	{r3, pc}
   803c4:	000801e5 	.word	0x000801e5

000803c8 <io_adc_value>:
}

uint16_t io_adc_value(uint32_t channel){
   803c8:	b508      	push	{r3, lr}
	return read_adc_value(channel);
   803ca:	4b01      	ldr	r3, [pc, #4]	; (803d0 <io_adc_value+0x8>)
   803cc:	4798      	blx	r3
}
   803ce:	bd08      	pop	{r3, pc}
   803d0:	000807ad 	.word	0x000807ad

000803d4 <send_char_term>:

void send_char_term(uint8_t chr){
   803d4:	b538      	push	{r3, r4, r5, lr}
   803d6:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   803d8:	4c07      	ldr	r4, [pc, #28]	; (803f8 <send_char_term+0x24>)
   803da:	47a0      	blx	r4
   803dc:	2800      	cmp	r0, #0
   803de:	d0fc      	beq.n	803da <send_char_term+0x6>
	uart_send_char(chr);
   803e0:	4628      	mov	r0, r5
   803e2:	4b06      	ldr	r3, [pc, #24]	; (803fc <send_char_term+0x28>)
   803e4:	4798      	blx	r3
	/*Line terminator*/
	while (!uart_transmitter_ready());
   803e6:	4c04      	ldr	r4, [pc, #16]	; (803f8 <send_char_term+0x24>)
   803e8:	47a0      	blx	r4
   803ea:	2800      	cmp	r0, #0
   803ec:	d0fc      	beq.n	803e8 <send_char_term+0x14>
	uart_send_char(10);
   803ee:	200a      	movs	r0, #10
   803f0:	4b02      	ldr	r3, [pc, #8]	; (803fc <send_char_term+0x28>)
   803f2:	4798      	blx	r3
   803f4:	bd38      	pop	{r3, r4, r5, pc}
   803f6:	bf00      	nop
   803f8:	000802d5 	.word	0x000802d5
   803fc:	000802f5 	.word	0x000802f5

00080400 <send_char_no_term>:
}

void send_char_no_term(uint8_t chr){
   80400:	b538      	push	{r3, r4, r5, lr}
   80402:	4605      	mov	r5, r0
	/*Wait for uart transmitter*/
	while (!uart_transmitter_ready());
   80404:	4c03      	ldr	r4, [pc, #12]	; (80414 <send_char_no_term+0x14>)
   80406:	47a0      	blx	r4
   80408:	2800      	cmp	r0, #0
   8040a:	d0fc      	beq.n	80406 <send_char_no_term+0x6>
	uart_send_char(chr);
   8040c:	4628      	mov	r0, r5
   8040e:	4b02      	ldr	r3, [pc, #8]	; (80418 <send_char_no_term+0x18>)
   80410:	4798      	blx	r3
   80412:	bd38      	pop	{r3, r4, r5, pc}
   80414:	000802d5 	.word	0x000802d5
   80418:	000802f5 	.word	0x000802f5

0008041c <read_char>:
}

uint8_t read_char(void){
   8041c:	b508      	push	{r3, lr}
	/*Read char if receiver is ready*/
	if (uart_receiver_ready())
   8041e:	4b04      	ldr	r3, [pc, #16]	; (80430 <read_char+0x14>)
   80420:	4798      	blx	r3
   80422:	b110      	cbz	r0, 8042a <read_char+0xe>
	{
		return uart_receive_char();
   80424:	4b03      	ldr	r3, [pc, #12]	; (80434 <read_char+0x18>)
   80426:	4798      	blx	r3
   80428:	bd08      	pop	{r3, pc}
	}
	/*failed to read char*/
	return 0;
   8042a:	2000      	movs	r0, #0
}
   8042c:	bd08      	pop	{r3, pc}
   8042e:	bf00      	nop
   80430:	000802e5 	.word	0x000802e5
   80434:	00080301 	.word	0x00080301

00080438 <read_when_ready>:

uint8_t read_when_ready(void){
   80438:	b510      	push	{r4, lr}
	while (!uart_receiver_ready());
   8043a:	4c03      	ldr	r4, [pc, #12]	; (80448 <read_when_ready+0x10>)
   8043c:	47a0      	blx	r4
   8043e:	2800      	cmp	r0, #0
   80440:	d0fc      	beq.n	8043c <read_when_ready+0x4>
	return read_char();
   80442:	4b02      	ldr	r3, [pc, #8]	; (8044c <read_when_ready+0x14>)
   80444:	4798      	blx	r3
}
   80446:	bd10      	pop	{r4, pc}
   80448:	000802e5 	.word	0x000802e5
   8044c:	0008041d 	.word	0x0008041d

00080450 <send_number>:

void send_number(uint16_t nbr){
   80450:	b530      	push	{r4, r5, lr}
   80452:	b085      	sub	sp, #20
   80454:	4602      	mov	r2, r0
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
   80456:	a801      	add	r0, sp, #4
   80458:	4908      	ldr	r1, [pc, #32]	; (8047c <send_number+0x2c>)
   8045a:	4b09      	ldr	r3, [pc, #36]	; (80480 <send_number+0x30>)
   8045c:	4798      	blx	r3
	
	while (string[i] != '\0')
   8045e:	f89d 0004 	ldrb.w	r0, [sp, #4]
   80462:	b130      	cbz	r0, 80472 <send_number+0x22>
   80464:	ac01      	add	r4, sp, #4
	{
		send_char_no_term(string[i]);
   80466:	4d07      	ldr	r5, [pc, #28]	; (80484 <send_number+0x34>)
   80468:	47a8      	blx	r5
void send_number(uint16_t nbr){
	int i = 0;
	char string[10];
	sprintf(string,"%d",nbr);
	
	while (string[i] != '\0')
   8046a:	f814 0f01 	ldrb.w	r0, [r4, #1]!
   8046e:	2800      	cmp	r0, #0
   80470:	d1fa      	bne.n	80468 <send_number+0x18>
	{
		send_char_no_term(string[i]);
		i++;
	}
	
	send_char_term(13); //Carriage Return and terminator;
   80472:	200d      	movs	r0, #13
   80474:	4b04      	ldr	r3, [pc, #16]	; (80488 <send_number+0x38>)
   80476:	4798      	blx	r3
   80478:	b005      	add	sp, #20
   8047a:	bd30      	pop	{r4, r5, pc}
   8047c:	000859ec 	.word	0x000859ec
   80480:	00080fd5 	.word	0x00080fd5
   80484:	00080401 	.word	0x00080401
   80488:	000803d5 	.word	0x000803d5

0008048c <start_coms>:
#include "io_control/io_uart.h"
#include "matlab_coms/matlab_functions.h"
#include "matlab_coms/matlab_state.h"


void start_coms(){
   8048c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	uint16_t adc_val;
	pin = 0;
	val = 0;
	adc_val = 0;
	
	state next_state = STANDBY;
   8048e:	2400      	movs	r4, #0
			val = 0;
			next_state = STANDBY;
			break;
			
			case A_READ:
			pin = read_when_ready();
   80490:	4d28      	ldr	r5, [pc, #160]	; (80534 <start_coms+0xa8>)
			adc_val = io_adc_value(pin);
   80492:	4f29      	ldr	r7, [pc, #164]	; (80538 <start_coms+0xac>)
			send_number(adc_val);
   80494:	4e29      	ldr	r6, [pc, #164]	; (8053c <start_coms+0xb0>)
   80496:	e000      	b.n	8049a <start_coms+0xe>
		switch(current_state){
			case STANDBY:
			switch (read_char())
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
   80498:	2401      	movs	r4, #1
	state next_state = STANDBY;
	state current_state = STANDBY;
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
   8049a:	2c06      	cmp	r4, #6
   8049c:	d8fd      	bhi.n	8049a <start_coms+0xe>
   8049e:	e8df f004 	tbb	[pc, r4]
   804a2:	1c04      	.short	0x1c04
   804a4:	3f372c21 	.word	0x3f372c21
   804a8:	44          	.byte	0x44
   804a9:	00          	.byte	0x00
			case STANDBY:
			switch (read_char())
   804aa:	4b25      	ldr	r3, [pc, #148]	; (80540 <start_coms+0xb4>)
   804ac:	4798      	blx	r3
   804ae:	2857      	cmp	r0, #87	; 0x57
   804b0:	d00d      	beq.n	804ce <start_coms+0x42>
   804b2:	d805      	bhi.n	804c0 <start_coms+0x34>
   804b4:	2805      	cmp	r0, #5
   804b6:	d0ef      	beq.n	80498 <start_coms+0xc>
			{
				case ENQUIRY:
				next_state = HANDSHAKE;
				break;
				case PIN_MODE:
				next_state = P_MODE;
   804b8:	2856      	cmp	r0, #86	; 0x56
   804ba:	bf08      	it	eq
   804bc:	2402      	moveq	r4, #2
   804be:	e7ec      	b.n	8049a <start_coms+0xe>
	/*Run state machine*/
	while (1)
	{
		switch(current_state){
			case STANDBY:
			switch (read_char())
   804c0:	2859      	cmp	r0, #89	; 0x59
   804c2:	d008      	beq.n	804d6 <start_coms+0x4a>
   804c4:	d305      	bcc.n	804d2 <start_coms+0x46>
				break;
				case ANALOG_WRITE:
				next_state = A_WRITE;
				break;
				case ANALOG_READ:
				next_state = A_READ;
   804c6:	285a      	cmp	r0, #90	; 0x5a
   804c8:	bf08      	it	eq
   804ca:	2406      	moveq	r4, #6
   804cc:	e7e5      	b.n	8049a <start_coms+0xe>
				break;
				case PIN_MODE:
				next_state = P_MODE;
				break;
				case DIGITAL_WRITE:
				next_state = D_WRITE;
   804ce:	2403      	movs	r4, #3
				break;
   804d0:	e7e3      	b.n	8049a <start_coms+0xe>
				case DIGITAL_READ:
				next_state = D_READ;
   804d2:	2404      	movs	r4, #4
				break;
   804d4:	e7e1      	b.n	8049a <start_coms+0xe>
				case ANALOG_WRITE:
				next_state = A_WRITE;
   804d6:	2405      	movs	r4, #5
				break;
   804d8:	e7df      	b.n	8049a <start_coms+0xe>
				break;
			}
			break;
			
			case HANDSHAKE: /*Handshake with matlab*/
			send_char_term(ACK);
   804da:	2006      	movs	r0, #6
   804dc:	4b19      	ldr	r3, [pc, #100]	; (80544 <start_coms+0xb8>)
   804de:	4798      	blx	r3
			next_state = STANDBY;
   804e0:	2400      	movs	r4, #0
			break;
   804e2:	e7da      	b.n	8049a <start_coms+0xe>
			
			case P_MODE: 
			pin = read_when_ready();
   804e4:	47a8      	blx	r5
   804e6:	4604      	mov	r4, r0
			val = read_when_ready();
   804e8:	47a8      	blx	r5
			io_pin_dir(pin,(val-10));	//calculate value
   804ea:	f1a0 010a 	sub.w	r1, r0, #10
   804ee:	4620      	mov	r0, r4
   804f0:	b249      	sxtb	r1, r1
   804f2:	4b15      	ldr	r3, [pc, #84]	; (80548 <start_coms+0xbc>)
   804f4:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   804f6:	2400      	movs	r4, #0
			break;
   804f8:	e7cf      	b.n	8049a <start_coms+0xe>
			
			case D_WRITE:
			pin = read_when_ready();
   804fa:	47a8      	blx	r5
   804fc:	4604      	mov	r4, r0
			val = read_when_ready();
   804fe:	47a8      	blx	r5
			io_pin_level(pin,(val-10));	//calculate value
   80500:	f1a0 010a 	sub.w	r1, r0, #10
   80504:	b260      	sxtb	r0, r4
   80506:	b249      	sxtb	r1, r1
   80508:	4b10      	ldr	r3, [pc, #64]	; (8054c <start_coms+0xc0>)
   8050a:	4798      	blx	r3
			pin = 0;
			val = 0;
			next_state = STANDBY;
   8050c:	2400      	movs	r4, #0
			break;
   8050e:	e7c4      	b.n	8049a <start_coms+0xe>
			
			case D_READ:
			pin = read_when_ready();
   80510:	47a8      	blx	r5
			val = io_pin_status(pin);
   80512:	b240      	sxtb	r0, r0
   80514:	4b0e      	ldr	r3, [pc, #56]	; (80550 <start_coms+0xc4>)
   80516:	4798      	blx	r3
			send_number(val);
   80518:	b2c0      	uxtb	r0, r0
   8051a:	47b0      	blx	r6
			pin = 0;
			val = 0;
			next_state = STANDBY;
   8051c:	2400      	movs	r4, #0
			break;
   8051e:	e7bc      	b.n	8049a <start_coms+0xe>
			
			case A_WRITE:
			val = read_when_ready();
   80520:	47a8      	blx	r5
			io_pwm_duty(val);
   80522:	4b0c      	ldr	r3, [pc, #48]	; (80554 <start_coms+0xc8>)
   80524:	4798      	blx	r3
			val = 0;
			next_state = STANDBY;
   80526:	2400      	movs	r4, #0
			break;
   80528:	e7b7      	b.n	8049a <start_coms+0xe>
			
			case A_READ:
			pin = read_when_ready();
   8052a:	47a8      	blx	r5
			adc_val = io_adc_value(pin);
   8052c:	47b8      	blx	r7
			send_number(adc_val);
   8052e:	47b0      	blx	r6
			pin = 0;
			adc_val = 0;
			next_state = STANDBY;
   80530:	2400      	movs	r4, #0
			break;
   80532:	e7b2      	b.n	8049a <start_coms+0xe>
   80534:	00080439 	.word	0x00080439
   80538:	000803c9 	.word	0x000803c9
   8053c:	00080451 	.word	0x00080451
   80540:	0008041d 	.word	0x0008041d
   80544:	000803d5 	.word	0x000803d5
   80548:	0008030d 	.word	0x0008030d
   8054c:	00080355 	.word	0x00080355
   80550:	0008038d 	.word	0x0008038d
   80554:	000803bd 	.word	0x000803bd

00080558 <pwm_clocks_generate>:
 *
 * \retval Return the value to be set in the PWM Clock Register (PWM Mode Register for
 * SAM3N/SAM4N/SAM4C/SAM4CP/SAM4CM) or PWM_INVALID_ARGUMENT if the configuration cannot be met.
 */
static uint32_t pwm_clocks_generate(uint32_t ul_frequency, uint32_t ul_mck)
{
   80558:	b4f0      	push	{r4, r5, r6, r7}
   8055a:	b08c      	sub	sp, #48	; 0x30
   8055c:	4607      	mov	r7, r0
   8055e:	460e      	mov	r6, r1
	uint32_t ul_divisors[PWM_CLOCK_PRE_MAX] =
   80560:	ac01      	add	r4, sp, #4
   80562:	4d12      	ldr	r5, [pc, #72]	; (805ac <pwm_clocks_generate+0x54>)
   80564:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   80566:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   80568:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
   8056a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
   8056c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
   80570:	e884 0007 	stmia.w	r4, {r0, r1, r2}
   80574:	466a      	mov	r2, sp
			{1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024 };
	uint32_t ul_pre = 0;
   80576:	2300      	movs	r3, #0
	uint32_t ul_div;

	/* Find prescaler and divisor values */
	do {
		ul_div = (ul_mck / ul_divisors[ul_pre]) / ul_frequency;
   80578:	f852 4f04 	ldr.w	r4, [r2, #4]!
   8057c:	fbb6 f4f4 	udiv	r4, r6, r4
   80580:	fbb4 f4f7 	udiv	r4, r4, r7
		if (ul_div <= PWM_CLOCK_DIV_MAX) {
   80584:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
   80588:	d903      	bls.n	80592 <pwm_clocks_generate+0x3a>
			break;
		}
		ul_pre++;
   8058a:	3301      	adds	r3, #1
	} while (ul_pre < PWM_CLOCK_PRE_MAX);
   8058c:	2b0b      	cmp	r3, #11
   8058e:	d1f3      	bne.n	80578 <pwm_clocks_generate+0x20>
   80590:	e004      	b.n	8059c <pwm_clocks_generate+0x44>

	/* Return result */
	if (ul_pre < PWM_CLOCK_PRE_MAX) {
   80592:	2b0a      	cmp	r3, #10
   80594:	d805      	bhi.n	805a2 <pwm_clocks_generate+0x4a>
		return ul_div | (ul_pre << 8);
   80596:	ea44 2003 	orr.w	r0, r4, r3, lsl #8
   8059a:	e004      	b.n	805a6 <pwm_clocks_generate+0x4e>
	} else {
		return PWM_INVALID_ARGUMENT;
   8059c:	f64f 70ff 	movw	r0, #65535	; 0xffff
   805a0:	e001      	b.n	805a6 <pwm_clocks_generate+0x4e>
   805a2:	f64f 70ff 	movw	r0, #65535	; 0xffff
	}
}
   805a6:	b00c      	add	sp, #48	; 0x30
   805a8:	bcf0      	pop	{r4, r5, r6, r7}
   805aa:	4770      	bx	lr
   805ac:	000859f0 	.word	0x000859f0

000805b0 <pwm_init>:
 * \param clock_config PWM clock configuration.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
   805b0:	b570      	push	{r4, r5, r6, lr}
   805b2:	4606      	mov	r6, r0
   805b4:	460c      	mov	r4, r1
	uint32_t clock = 0;
	uint32_t result;

	/* Clock A */
	if (clock_config->ul_clka != 0) {
   805b6:	6808      	ldr	r0, [r1, #0]
   805b8:	b140      	cbz	r0, 805cc <pwm_init+0x1c>
		result = pwm_clocks_generate(clock_config->ul_clka, clock_config->ul_mck);
   805ba:	6889      	ldr	r1, [r1, #8]
   805bc:	4b0b      	ldr	r3, [pc, #44]	; (805ec <pwm_init+0x3c>)
   805be:	4798      	blx	r3
   805c0:	4605      	mov	r5, r0
		if (result == PWM_INVALID_ARGUMENT) {
   805c2:	f64f 73ff 	movw	r3, #65535	; 0xffff
   805c6:	4298      	cmp	r0, r3
   805c8:	d101      	bne.n	805ce <pwm_init+0x1e>
   805ca:	e00e      	b.n	805ea <pwm_init+0x3a>
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_init(Pwm *p_pwm, pwm_clock_t *clock_config)
{
	uint32_t clock = 0;
   805cc:	2500      	movs	r5, #0

		clock = result;
	}

	/* Clock B */
	if (clock_config->ul_clkb != 0) {
   805ce:	6860      	ldr	r0, [r4, #4]
   805d0:	b140      	cbz	r0, 805e4 <pwm_init+0x34>
		result = pwm_clocks_generate(clock_config->ul_clkb, clock_config->ul_mck);
   805d2:	68a1      	ldr	r1, [r4, #8]
   805d4:	4b05      	ldr	r3, [pc, #20]	; (805ec <pwm_init+0x3c>)
   805d6:	4798      	blx	r3

		if (result == PWM_INVALID_ARGUMENT) {
   805d8:	f64f 73ff 	movw	r3, #65535	; 0xffff
   805dc:	4298      	cmp	r0, r3
   805de:	d004      	beq.n	805ea <pwm_init+0x3a>
			return result;
		}

		clock |= (result << 16);
   805e0:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
	}
#if (SAM3N || SAM4N || SAM4C || SAM4CP || SAM4CM)
	p_pwm->PWM_MR = clock;
#else
	p_pwm->PWM_CLK = clock;
   805e4:	6035      	str	r5, [r6, #0]
#endif
	return 0;
   805e6:	2000      	movs	r0, #0
   805e8:	bd70      	pop	{r4, r5, r6, pc}
}
   805ea:	bd70      	pop	{r4, r5, r6, pc}
   805ec:	00080559 	.word	0x00080559

000805f0 <pwm_channel_init>:
 * \param p_channel Configurations of the specified PWM channel.
 *
 * \retval 0 if initialization succeeds, otherwise fails.
 */
uint32_t pwm_channel_init(Pwm *p_pwm, pwm_channel_t *p_channel)
{
   805f0:	b470      	push	{r4, r5, r6}
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;
   805f2:	680b      	ldr	r3, [r1, #0]

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   805f4:	8a8c      	ldrh	r4, [r1, #20]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   805f6:	684a      	ldr	r2, [r1, #4]
   805f8:	f002 020f 	and.w	r2, r2, #15
   805fc:	4314      	orrs	r4, r2
			(p_channel->polarity << 9) |
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
   805fe:	890d      	ldrh	r5, [r1, #8]
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
			(p_channel->polarity << 9) |
   80600:	432c      	orrs	r4, r5
   80602:	7a8a      	ldrb	r2, [r1, #10]
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
			(p_channel->counter_event) |
   80604:	ea44 2442 	orr.w	r4, r4, r2, lsl #9
			(p_channel->b_deadtime_generator << 16) |
   80608:	7d8a      	ldrb	r2, [r1, #22]
   8060a:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
			(p_channel->b_pwmh_output_inverted << 17) |
   8060e:	7dca      	ldrb	r2, [r1, #23]
   80610:	ea44 4442 	orr.w	r4, r4, r2, lsl #17
			(p_channel->b_pwml_output_inverted << 18) |
   80614:	7e0a      	ldrb	r2, [r1, #24]
{
	uint32_t tmp_reg = 0;
	uint32_t ch_num = p_channel->channel;

	/* Channel Mode/Clock Register */
	tmp_reg = (p_channel->ul_prescaler & 0xF) |
   80616:	ea44 4482 	orr.w	r4, r4, r2, lsl #18
   8061a:	eb00 1243 	add.w	r2, r0, r3, lsl #5
			(p_channel->b_deadtime_generator << 16) |
			(p_channel->b_pwmh_output_inverted << 17) |
			(p_channel->b_pwml_output_inverted << 18) |
#endif
			(p_channel->alignment);
	p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = tmp_reg;
   8061e:	f8c2 4200 	str.w	r4, [r2, #512]	; 0x200

	/* Channel Duty Cycle Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CDTY = p_channel->ul_duty;
   80622:	68cc      	ldr	r4, [r1, #12]
   80624:	f8c2 4204 	str.w	r4, [r2, #516]	; 0x204

	/* Channel Period Register */
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
   80628:	690c      	ldr	r4, [r1, #16]
   8062a:	f8c2 420c 	str.w	r4, [r2, #524]	; 0x20c
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
   8062e:	7d8a      	ldrb	r2, [r1, #22]
   80630:	b13a      	cbz	r2, 80642 <pwm_channel_init+0x52>
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
				PWM_DT_DTL(p_channel->
   80632:	8b8c      	ldrh	r4, [r1, #28]
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
   80634:	8b4a      	ldrh	r2, [r1, #26]
   80636:	ea42 4404 	orr.w	r4, r2, r4, lsl #16
	p_pwm->PWM_CH_NUM[ch_num].PWM_CPRD = p_channel->ul_period;
	
#if (SAM3U || SAM3S || SAM3XA || SAM4S || SAM4E)
	/* Channel Dead Time Register */
	if (p_channel->b_deadtime_generator) {
		p_pwm->PWM_CH_NUM[ch_num].PWM_DT =
   8063a:	eb00 1243 	add.w	r2, r0, r3, lsl #5
   8063e:	f8c2 4218 	str.w	r4, [r2, #536]	; 0x218
				us_deadtime_pwml) | PWM_DT_DTH(p_channel->
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
   80642:	6c85      	ldr	r5, [r0, #72]	; 0x48
   80644:	f04f 1201 	mov.w	r2, #65537	; 0x10001
   80648:	409a      	lsls	r2, r3
   8064a:	43d2      	mvns	r2, r2
   8064c:	4015      	ands	r5, r2
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
			(((p_channel->output_selection.b_override_pwml) << ch_num)
   8064e:	7fce      	ldrb	r6, [r1, #31]
   80650:	409e      	lsls	r6, r3
				us_deadtime_pwmh);
	}

	/* Output Selection Register */
	tmp_reg  = p_pwm->PWM_OS & (~((PWM_OS_OSH0 | PWM_OS_OSL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.b_override_pwmh) << ch_num) |
   80652:	7f8c      	ldrb	r4, [r1, #30]
   80654:	409c      	lsls	r4, r3
   80656:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
   8065a:	432c      	orrs	r4, r5
			(((p_channel->output_selection.b_override_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OS = tmp_reg;
   8065c:	6484      	str	r4, [r0, #72]	; 0x48

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
   8065e:	6c44      	ldr	r4, [r0, #68]	; 0x44
   80660:	4022      	ands	r2, r4
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
			(((p_channel->output_selection.override_level_pwml) << ch_num)
   80662:	f891 5021 	ldrb.w	r5, [r1, #33]	; 0x21
   80666:	409d      	lsls	r5, r3
					<< 16);
	p_pwm->PWM_OS = tmp_reg;

	/* Output Override Value Register */
	tmp_reg  = p_pwm->PWM_OOV & (~((PWM_OOV_OOVH0 | PWM_OOV_OOVL0) << ch_num));
	tmp_reg |= ((p_channel->output_selection.override_level_pwmh) << ch_num) |
   80668:	f891 4020 	ldrb.w	r4, [r1, #32]
   8066c:	409c      	lsls	r4, r3
   8066e:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
   80672:	4322      	orrs	r2, r4
			(((p_channel->output_selection.override_level_pwml) << ch_num)
					<< 16);
	p_pwm->PWM_OOV = tmp_reg;
   80674:	6442      	str	r2, [r0, #68]	; 0x44

	/* Sync Channels Mode Register */
	uint32_t channel = (1 << ch_num);
   80676:	2201      	movs	r2, #1
   80678:	409a      	lsls	r2, r3
	if (p_channel->b_sync_ch) {
   8067a:	f891 4022 	ldrb.w	r4, [r1, #34]	; 0x22
   8067e:	b11c      	cbz	r4, 80688 <pwm_channel_init+0x98>
		p_pwm->PWM_SCM |= channel;
   80680:	6a04      	ldr	r4, [r0, #32]
   80682:	4314      	orrs	r4, r2
   80684:	6204      	str	r4, [r0, #32]
   80686:	e003      	b.n	80690 <pwm_channel_init+0xa0>
	} else {
		p_pwm->PWM_SCM &= ~((uint32_t) channel);
   80688:	6a04      	ldr	r4, [r0, #32]
   8068a:	ea24 0402 	bic.w	r4, r4, r2
   8068e:	6204      	str	r4, [r0, #32]
		} else {
			p_pwm->PWM_FPV1 &= (~((0x01 << ch_num) << 16));
		}
	}
#else
	if (p_channel->ul_fault_output_pwmh == PWM_HIGH) {
   80690:	f891 4024 	ldrb.w	r4, [r1, #36]	; 0x24
   80694:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= (0x01 << ch_num);
   80696:	6e84      	ldr	r4, [r0, #104]	; 0x68
   80698:	bf0c      	ite	eq
   8069a:	4314      	orreq	r4, r2
	} else {
		p_pwm->PWM_FPV &= (~(0x01 << ch_num));
   8069c:	4394      	bicne	r4, r2
   8069e:	6684      	str	r4, [r0, #104]	; 0x68
	}
	if (p_channel->ul_fault_output_pwml == PWM_HIGH) {
   806a0:	f891 4025 	ldrb.w	r4, [r1, #37]	; 0x25
   806a4:	2c01      	cmp	r4, #1
		p_pwm->PWM_FPV |= ((0x01 << ch_num) << 16);
   806a6:	6e84      	ldr	r4, [r0, #104]	; 0x68
   806a8:	bf0c      	ite	eq
   806aa:	ea44 4202 	orreq.w	r2, r4, r2, lsl #16
	} else {
		p_pwm->PWM_FPV &= (~((0x01 << ch_num) << 16));
   806ae:	ea24 4202 	bicne.w	r2, r4, r2, lsl #16
   806b2:	6682      	str	r2, [r0, #104]	; 0x68
	}
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
   806b4:	2b03      	cmp	r3, #3
   806b6:	d80c      	bhi.n	806d2 <pwm_channel_init+0xe2>
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE1;
   806b8:	6ec4      	ldr	r4, [r0, #108]	; 0x6c
#endif
	/* Fault Protection Enable Register */
	uint32_t fault_enable_reg = 0;
#if (SAM3XA)
	if (ch_num < 4) {
		ch_num *= 8;
   806ba:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE1;
		fault_enable_reg &= ~(0xFF << ch_num);
   806bc:	22ff      	movs	r2, #255	; 0xff
   806be:	409a      	lsls	r2, r3
   806c0:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   806c4:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   806c8:	fa01 f303 	lsl.w	r3, r1, r3
   806cc:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE1 = fault_enable_reg;
   806ce:	66c3      	str	r3, [r0, #108]	; 0x6c
   806d0:	e00c      	b.n	806ec <pwm_channel_init+0xfc>
	} else {
		ch_num -= 4;
   806d2:	3b04      	subs	r3, #4
		ch_num *= 8;
		fault_enable_reg = p_pwm->PWM_FPE2;
   806d4:	6f04      	ldr	r4, [r0, #112]	; 0x70
		fault_enable_reg &= ~(0xFF << ch_num);
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
		p_pwm->PWM_FPE1 = fault_enable_reg;
	} else {
		ch_num -= 4;
		ch_num *= 8;
   806d6:	00db      	lsls	r3, r3, #3
		fault_enable_reg = p_pwm->PWM_FPE2;
		fault_enable_reg &= ~(0xFF << ch_num);
   806d8:	22ff      	movs	r2, #255	; 0xff
   806da:	409a      	lsls	r2, r3
   806dc:	ea24 0202 	bic.w	r2, r4, r2
		fault_enable_reg |= ((p_channel->fault_id) << ch_num);
   806e0:	f891 1023 	ldrb.w	r1, [r1, #35]	; 0x23
   806e4:	fa01 f303 	lsl.w	r3, r1, r3
   806e8:	4313      	orrs	r3, r2
		p_pwm->PWM_FPE2 = fault_enable_reg;
   806ea:	6703      	str	r3, [r0, #112]	; 0x70
			PWM_CAE_ADEDGV(p_channel->ul_additional_edge) |
			p_channel->additional_edge_mode;
#endif

	return 0;
}
   806ec:	2000      	movs	r0, #0
   806ee:	bc70      	pop	{r4, r5, r6}
   806f0:	4770      	bx	lr
   806f2:	bf00      	nop

000806f4 <pwm_channel_update_duty>:
 *
 * \retval 0 if changing succeeds, otherwise fails.
 */
uint32_t pwm_channel_update_duty(Pwm *p_pwm, pwm_channel_t *p_channel,
		uint32_t ul_duty)
{
   806f4:	b410      	push	{r4}
	uint32_t ch_num = p_channel->channel;
   806f6:	680c      	ldr	r4, [r1, #0]

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
   806f8:	690b      	ldr	r3, [r1, #16]
   806fa:	4293      	cmp	r3, r2
   806fc:	d306      	bcc.n	8070c <pwm_channel_update_duty+0x18>
		return PWM_INVALID_ARGUMENT;
	} else {
		/* Save new duty cycle value */
		p_channel->ul_duty = ul_duty;
   806fe:	60ca      	str	r2, [r1, #12]
		mode &= ~PWM_CMR_CPD;
		p_pwm->PWM_CH_NUM[ch_num].PWM_CMR = mode;

		p_pwm->PWM_CH_NUM[ch_num].PWM_CUPD = ul_duty;
#else
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
   80700:	eb00 1044 	add.w	r0, r0, r4, lsl #5
   80704:	f8c0 2208 	str.w	r2, [r0, #520]	; 0x208
#endif
	}

	return 0;
   80708:	2000      	movs	r0, #0
   8070a:	e001      	b.n	80710 <pwm_channel_update_duty+0x1c>
{
	uint32_t ch_num = p_channel->channel;

		/** Check parameter */
	if (p_channel->ul_period < ul_duty) {
		return PWM_INVALID_ARGUMENT;
   8070c:	f64f 70ff 	movw	r0, #65535	; 0xffff
		p_pwm->PWM_CH_NUM[ch_num].PWM_CDTYUPD = ul_duty;
#endif
	}

	return 0;
}
   80710:	f85d 4b04 	ldr.w	r4, [sp], #4
   80714:	4770      	bx	lr
   80716:	bf00      	nop

00080718 <pwm_channel_enable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to enable.
 */
void pwm_channel_enable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_ENA = (1 << ul_channel);
   80718:	2301      	movs	r3, #1
   8071a:	fa03 f101 	lsl.w	r1, r3, r1
   8071e:	6041      	str	r1, [r0, #4]
   80720:	4770      	bx	lr
   80722:	bf00      	nop

00080724 <pwm_channel_disable>:
 * \param p_pwm Pointer to a PWM instance.
 * \param ul_channel PWM channel number to disable.
 */
void pwm_channel_disable(Pwm *p_pwm, uint32_t ul_channel)
{
	p_pwm->PWM_DIS = (1 << ul_channel);
   80724:	2301      	movs	r3, #1
   80726:	fa03 f101 	lsl.w	r1, r3, r1
   8072a:	6081      	str	r1, [r0, #8]
   8072c:	4770      	bx	lr
   8072e:	bf00      	nop

00080730 <init_adc>:
 */ 
#include <adc.h>
#include <asf.h>
#include "io_control/adc.h"

void init_adc(){
   80730:	b538      	push	{r3, r4, r5, lr}
	pmc_enable_periph_clk(ID_ADC);
   80732:	2025      	movs	r0, #37	; 0x25
   80734:	4b13      	ldr	r3, [pc, #76]	; (80784 <init_adc+0x54>)
   80736:	4798      	blx	r3
	adc_init(ADC, sysclk_get_main_hz()/2, ADC_CLOCK, 8);
   80738:	4c13      	ldr	r4, [pc, #76]	; (80788 <init_adc+0x58>)
   8073a:	4620      	mov	r0, r4
   8073c:	4913      	ldr	r1, [pc, #76]	; (8078c <init_adc+0x5c>)
   8073e:	4a14      	ldr	r2, [pc, #80]	; (80790 <init_adc+0x60>)
   80740:	2308      	movs	r3, #8
   80742:	4d14      	ldr	r5, [pc, #80]	; (80794 <init_adc+0x64>)
   80744:	47a8      	blx	r5
	adc_configure_timing(ADC, 0, ADC_SETTLING_TIME_3, 1);
   80746:	4620      	mov	r0, r4
   80748:	2100      	movs	r1, #0
   8074a:	f44f 1240 	mov.w	r2, #3145728	; 0x300000
   8074e:	2301      	movs	r3, #1
   80750:	4d11      	ldr	r5, [pc, #68]	; (80798 <init_adc+0x68>)
   80752:	47a8      	blx	r5
	adc_set_resolution(ADC, ADC_MR_LOWRES_BITS_10);
   80754:	4620      	mov	r0, r4
   80756:	2110      	movs	r1, #16
   80758:	4b10      	ldr	r3, [pc, #64]	; (8079c <init_adc+0x6c>)
   8075a:	4798      	blx	r3
	adc_enable_channel(ADC, ADC_CHANNEL_7);	//A0
   8075c:	4620      	mov	r0, r4
   8075e:	2107      	movs	r1, #7
   80760:	4d0f      	ldr	r5, [pc, #60]	; (807a0 <init_adc+0x70>)
   80762:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_6);	//A1
   80764:	4620      	mov	r0, r4
   80766:	2106      	movs	r1, #6
   80768:	47a8      	blx	r5
	adc_enable_channel(ADC, ADC_CHANNEL_5);	//A2
   8076a:	4620      	mov	r0, r4
   8076c:	2105      	movs	r1, #5
   8076e:	47a8      	blx	r5
	adc_enable_all_channel(ADC);
   80770:	4620      	mov	r0, r4
   80772:	4b0c      	ldr	r3, [pc, #48]	; (807a4 <init_adc+0x74>)
   80774:	4798      	blx	r3
	adc_configure_trigger(ADC, ADC_TRIG_SW, 0);
   80776:	4620      	mov	r0, r4
   80778:	2100      	movs	r1, #0
   8077a:	460a      	mov	r2, r1
   8077c:	4b0a      	ldr	r3, [pc, #40]	; (807a8 <init_adc+0x78>)
   8077e:	4798      	blx	r3
   80780:	bd38      	pop	{r3, r4, r5, pc}
   80782:	bf00      	nop
   80784:	00080c59 	.word	0x00080c59
   80788:	400c0000 	.word	0x400c0000
   8078c:	0501bd00 	.word	0x0501bd00
   80790:	000f4240 	.word	0x000f4240
   80794:	00080149 	.word	0x00080149
   80798:	0008019d 	.word	0x0008019d
   8079c:	0008017d 	.word	0x0008017d
   807a0:	000801c5 	.word	0x000801c5
   807a4:	000801d1 	.word	0x000801d1
   807a8:	0008018d 	.word	0x0008018d

000807ac <read_adc_value>:
}

uint16_t read_adc_value(uint32_t channel){
   807ac:	b538      	push	{r3, r4, r5, lr}
   807ae:	4605      	mov	r5, r0
	adc_start(ADC);
   807b0:	4c04      	ldr	r4, [pc, #16]	; (807c4 <read_adc_value+0x18>)
   807b2:	4620      	mov	r0, r4
   807b4:	4b04      	ldr	r3, [pc, #16]	; (807c8 <read_adc_value+0x1c>)
   807b6:	4798      	blx	r3
	return ADC->ADC_CDR[channel];
   807b8:	3514      	adds	r5, #20
   807ba:	f854 0025 	ldr.w	r0, [r4, r5, lsl #2]
   807be:	b280      	uxth	r0, r0
   807c0:	bd38      	pop	{r3, r4, r5, pc}
   807c2:	bf00      	nop
   807c4:	400c0000 	.word	0x400c0000
   807c8:	000801bd 	.word	0x000801bd

000807cc <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
   807cc:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
   807ce:	480e      	ldr	r0, [pc, #56]	; (80808 <sysclk_init+0x3c>)
   807d0:	4b0e      	ldr	r3, [pc, #56]	; (8080c <sysclk_init+0x40>)
   807d2:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
   807d4:	2000      	movs	r0, #0
   807d6:	213e      	movs	r1, #62	; 0x3e
   807d8:	4b0d      	ldr	r3, [pc, #52]	; (80810 <sysclk_init+0x44>)
   807da:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
   807dc:	4c0d      	ldr	r4, [pc, #52]	; (80814 <sysclk_init+0x48>)
   807de:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
   807e0:	2800      	cmp	r0, #0
   807e2:	d0fc      	beq.n	807de <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
   807e4:	4b0c      	ldr	r3, [pc, #48]	; (80818 <sysclk_init+0x4c>)
   807e6:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
   807e8:	4a0c      	ldr	r2, [pc, #48]	; (8081c <sysclk_init+0x50>)
   807ea:	4b0d      	ldr	r3, [pc, #52]	; (80820 <sysclk_init+0x54>)
   807ec:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		return pmc_is_locked_pllack();
   807ee:	4c0d      	ldr	r4, [pc, #52]	; (80824 <sysclk_init+0x58>)
   807f0:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
   807f2:	2800      	cmp	r0, #0
   807f4:	d0fc      	beq.n	807f0 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
   807f6:	2010      	movs	r0, #16
   807f8:	4b0b      	ldr	r3, [pc, #44]	; (80828 <sysclk_init+0x5c>)
   807fa:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}

	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
   807fc:	4b0b      	ldr	r3, [pc, #44]	; (8082c <sysclk_init+0x60>)
   807fe:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
   80800:	4801      	ldr	r0, [pc, #4]	; (80808 <sysclk_init+0x3c>)
   80802:	4b02      	ldr	r3, [pc, #8]	; (8080c <sysclk_init+0x40>)
   80804:	4798      	blx	r3
   80806:	bd10      	pop	{r4, pc}
   80808:	0501bd00 	.word	0x0501bd00
   8080c:	200700a5 	.word	0x200700a5
   80810:	00080bd5 	.word	0x00080bd5
   80814:	00080c29 	.word	0x00080c29
   80818:	00080c39 	.word	0x00080c39
   8081c:	200d3f01 	.word	0x200d3f01
   80820:	400e0600 	.word	0x400e0600
   80824:	00080c49 	.word	0x00080c49
   80828:	00080b71 	.word	0x00080b71
   8082c:	00080d65 	.word	0x00080d65

00080830 <board_init>:
#include "conf_board.h"
#include "gpio.h"
#include "ioport.h"

void board_init(void)
{
   80830:	b510      	push	{r4, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
   80832:	f44f 4200 	mov.w	r2, #32768	; 0x8000
   80836:	4b16      	ldr	r3, [pc, #88]	; (80890 <board_init+0x60>)
   80838:	605a      	str	r2, [r3, #4]
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
   8083a:	200b      	movs	r0, #11
   8083c:	4c15      	ldr	r4, [pc, #84]	; (80894 <board_init+0x64>)
   8083e:	47a0      	blx	r4
   80840:	200c      	movs	r0, #12
   80842:	47a0      	blx	r4
   80844:	200d      	movs	r0, #13
   80846:	47a0      	blx	r4
   80848:	200e      	movs	r0, #14
   8084a:	47a0      	blx	r4
	 * In new designs IOPORT is used instead.
	 * Here IOPORT must be initialized for others to use before setting up IO.
	 */
	ioport_init();
	/* Configure LED pins */
	gpio_configure_pin(LED0_GPIO, LED0_FLAGS);
   8084c:	203b      	movs	r0, #59	; 0x3b
   8084e:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80852:	4c11      	ldr	r4, [pc, #68]	; (80898 <board_init+0x68>)
   80854:	47a0      	blx	r4
	gpio_configure_pin(LED1_GPIO, LED1_FLAGS);
   80856:	2055      	movs	r0, #85	; 0x55
   80858:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   8085c:	47a0      	blx	r4
	gpio_configure_pin(LED2_GPIO, LED2_FLAGS);
   8085e:	2056      	movs	r0, #86	; 0x56
   80860:	f04f 5160 	mov.w	r1, #939524096	; 0x38000000
   80864:	47a0      	blx	r4

	/* Configure Push Button pins */
	gpio_configure_pin(GPIO_PUSH_BUTTON_1, GPIO_PUSH_BUTTON_1_FLAGS);
   80866:	2068      	movs	r0, #104	; 0x68
   80868:	490c      	ldr	r1, [pc, #48]	; (8089c <board_init+0x6c>)
   8086a:	47a0      	blx	r4
	gpio_configure_pin(GPIO_PUSH_BUTTON_2, GPIO_PUSH_BUTTON_2_FLAGS);
   8086c:	205c      	movs	r0, #92	; 0x5c
   8086e:	490c      	ldr	r1, [pc, #48]	; (808a0 <board_init+0x70>)
   80870:	47a0      	blx	r4

#ifdef CONF_BOARD_UART_CONSOLE
	/* Configure UART pins */
	gpio_configure_group(PINS_UART_PIO, PINS_UART, PINS_UART_FLAGS);
   80872:	480c      	ldr	r0, [pc, #48]	; (808a4 <board_init+0x74>)
   80874:	f44f 7140 	mov.w	r1, #768	; 0x300
   80878:	4a0b      	ldr	r2, [pc, #44]	; (808a8 <board_init+0x78>)
   8087a:	4b0c      	ldr	r3, [pc, #48]	; (808ac <board_init+0x7c>)
   8087c:	4798      	blx	r3
	gpio_configure_pin(PIN_USART0_TXD_IDX, PIN_USART0_TXD_FLAGS);
#endif

#ifdef CONF_BOARD_USB_PORT
	/* Configure USB_ID (UOTGID) pin */
	gpio_configure_pin(USB_ID_GPIO, USB_ID_FLAGS);
   8087e:	202b      	movs	r0, #43	; 0x2b
   80880:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80884:	47a0      	blx	r4
	/* Configure USB_VBOF (UOTGVBOF) pin */
	gpio_configure_pin(USB_VBOF_GPIO, USB_VBOF_FLAGS);
   80886:	202a      	movs	r0, #42	; 0x2a
   80888:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8088c:	47a0      	blx	r4
   8088e:	bd10      	pop	{r4, pc}
   80890:	400e1a50 	.word	0x400e1a50
   80894:	00080c59 	.word	0x00080c59
   80898:	00080955 	.word	0x00080955
   8089c:	28000079 	.word	0x28000079
   808a0:	28000001 	.word	0x28000001
   808a4:	400e0e00 	.word	0x400e0e00
   808a8:	08000001 	.word	0x08000001
   808ac:	00080a29 	.word	0x00080a29

000808b0 <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
   808b0:	6442      	str	r2, [r0, #68]	; 0x44
	case PIO_OUTPUT_1:
	case PIO_NOT_A_PIN:
		return;
	}
#elif (SAM3XA|| SAM3U)
	switch (ul_type) {
   808b2:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
   808b6:	d016      	beq.n	808e6 <pio_set_peripheral+0x36>
   808b8:	d804      	bhi.n	808c4 <pio_set_peripheral+0x14>
   808ba:	b1c1      	cbz	r1, 808ee <pio_set_peripheral+0x3e>
   808bc:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
   808c0:	d00a      	beq.n	808d8 <pio_set_peripheral+0x28>
   808c2:	e013      	b.n	808ec <pio_set_peripheral+0x3c>
   808c4:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
   808c8:	d011      	beq.n	808ee <pio_set_peripheral+0x3e>
   808ca:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
   808ce:	d00e      	beq.n	808ee <pio_set_peripheral+0x3e>
   808d0:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
   808d4:	d10a      	bne.n	808ec <pio_set_peripheral+0x3c>
   808d6:	4770      	bx	lr
	case PIO_PERIPH_A:
		ul_sr = p_pio->PIO_ABSR;
   808d8:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR &= (~ul_mask & ul_sr);
   808da:	6f01      	ldr	r1, [r0, #112]	; 0x70
   808dc:	400b      	ands	r3, r1
   808de:	ea23 0302 	bic.w	r3, r3, r2
   808e2:	6703      	str	r3, [r0, #112]	; 0x70
		break;
   808e4:	e002      	b.n	808ec <pio_set_peripheral+0x3c>

	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABSR;
   808e6:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABSR = (ul_mask | ul_sr);
   808e8:	4313      	orrs	r3, r2
   808ea:	6703      	str	r3, [r0, #112]	; 0x70
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
   808ec:	6042      	str	r2, [r0, #4]
   808ee:	4770      	bx	lr

000808f0 <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   808f0:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   808f2:	f012 0f01 	tst.w	r2, #1
		p_pio->PIO_PUER = ul_mask;
   808f6:	bf14      	ite	ne
   808f8:	6641      	strne	r1, [r0, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   808fa:	6601      	streq	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_attribute & PIO_PULLUP);

	/* Enable Input Filter if necessary */
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
   808fc:	f012 0f0a 	tst.w	r2, #10
		p_pio->PIO_IFER = ul_mask;
   80900:	bf14      	ite	ne
   80902:	6201      	strne	r1, [r0, #32]
	} else {
		p_pio->PIO_IFDR = ul_mask;
   80904:	6241      	streq	r1, [r0, #36]	; 0x24
			p_pio->PIO_IFSCER = ul_mask;
		}
	}
#elif (SAM3XA|| SAM3U)
	/* Enable de-glitch or de-bounce if necessary */
	if (ul_attribute & PIO_DEGLITCH) {
   80906:	f012 0f02 	tst.w	r2, #2
   8090a:	d002      	beq.n	80912 <pio_set_input+0x22>
		p_pio->PIO_SCIFSR = ul_mask;
   8090c:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
   80910:	e004      	b.n	8091c <pio_set_input+0x2c>
	} else {
		if (ul_attribute & PIO_DEBOUNCE) {
   80912:	f012 0f08 	tst.w	r2, #8
			p_pio->PIO_DIFSR = ul_mask;
   80916:	bf18      	it	ne
   80918:	f8c0 1084 	strne.w	r1, [r0, #132]	; 0x84
#else
#error "Unsupported device"
#endif

	/* Configure pin as input */
	p_pio->PIO_ODR = ul_mask;
   8091c:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
   8091e:	6001      	str	r1, [r0, #0]
   80920:	4770      	bx	lr
   80922:	bf00      	nop

00080924 <pio_set_output>:
 */
void pio_set_output(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_default_level,
		const uint32_t ul_multidrive_enable,
		const uint32_t ul_pull_up_enable)
{
   80924:	b410      	push	{r4}
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
   80926:	6441      	str	r1, [r0, #68]	; 0x44
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80928:	9c01      	ldr	r4, [sp, #4]
   8092a:	b10c      	cbz	r4, 80930 <pio_set_output+0xc>
		p_pio->PIO_PUER = ul_mask;
   8092c:	6641      	str	r1, [r0, #100]	; 0x64
   8092e:	e000      	b.n	80932 <pio_set_output+0xe>
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80930:	6601      	str	r1, [r0, #96]	; 0x60
{
	pio_disable_interrupt(p_pio, ul_mask);
	pio_pull_up(p_pio, ul_mask, ul_pull_up_enable);

	/* Enable multi-drive if necessary */
	if (ul_multidrive_enable) {
   80932:	b10b      	cbz	r3, 80938 <pio_set_output+0x14>
		p_pio->PIO_MDER = ul_mask;
   80934:	6501      	str	r1, [r0, #80]	; 0x50
   80936:	e000      	b.n	8093a <pio_set_output+0x16>
	} else {
		p_pio->PIO_MDDR = ul_mask;
   80938:	6541      	str	r1, [r0, #84]	; 0x54
	}

	/* Set default value */
	if (ul_default_level) {
   8093a:	b10a      	cbz	r2, 80940 <pio_set_output+0x1c>
		p_pio->PIO_SODR = ul_mask;
   8093c:	6301      	str	r1, [r0, #48]	; 0x30
   8093e:	e000      	b.n	80942 <pio_set_output+0x1e>
	} else {
		p_pio->PIO_CODR = ul_mask;
   80940:	6341      	str	r1, [r0, #52]	; 0x34
	}

	/* Configure pin(s) as output(s) */
	p_pio->PIO_OER = ul_mask;
   80942:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
   80944:	6001      	str	r1, [r0, #0]
}
   80946:	f85d 4b04 	ldr.w	r4, [sp], #4
   8094a:	4770      	bx	lr

0008094c <pio_get_interrupt_status>:
 *
 * \return The interrupt status mask value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
   8094c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
   8094e:	4770      	bx	lr

00080950 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
   80950:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
   80952:	4770      	bx	lr

00080954 <pio_configure_pin>:
 * \param ul_flags Pins attributes.
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
   80954:	b570      	push	{r4, r5, r6, lr}
   80956:	b082      	sub	sp, #8
   80958:	460d      	mov	r5, r1
		p_pio = PIOC;
	} else {
		p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
	}
#else
	p_pio = (Pio *)((uint32_t)PIOA + (PIO_DELTA * (ul_pin >> 5)));
   8095a:	0944      	lsrs	r4, r0, #5
   8095c:	f504 1400 	add.w	r4, r4, #2097152	; 0x200000
   80960:	f204 7407 	addw	r4, r4, #1799	; 0x707
   80964:	0266      	lsls	r6, r4, #9
uint32_t pio_configure_pin(uint32_t ul_pin, const uint32_t ul_flags)
{
	Pio *p_pio = pio_get_pin_group(ul_pin);

	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80966:	f001 44f0 	and.w	r4, r1, #2013265920	; 0x78000000
   8096a:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   8096e:	d030      	beq.n	809d2 <pio_configure_pin+0x7e>
   80970:	d806      	bhi.n	80980 <pio_configure_pin+0x2c>
   80972:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80976:	d00a      	beq.n	8098e <pio_configure_pin+0x3a>
   80978:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   8097c:	d018      	beq.n	809b0 <pio_configure_pin+0x5c>
   8097e:	e049      	b.n	80a14 <pio_configure_pin+0xc0>
   80980:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80984:	d030      	beq.n	809e8 <pio_configure_pin+0x94>
   80986:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   8098a:	d02d      	beq.n	809e8 <pio_configure_pin+0x94>
   8098c:	e042      	b.n	80a14 <pio_configure_pin+0xc0>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
   8098e:	f000 001f 	and.w	r0, r0, #31
   80992:	2401      	movs	r4, #1
   80994:	4084      	lsls	r4, r0
   80996:	4630      	mov	r0, r6
   80998:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   8099c:	4622      	mov	r2, r4
   8099e:	4b1f      	ldr	r3, [pc, #124]	; (80a1c <pio_configure_pin+0xc8>)
   809a0:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809a2:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809a6:	bf14      	ite	ne
   809a8:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809aa:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809ac:	2001      	movs	r0, #1
   809ae:	e032      	b.n	80a16 <pio_configure_pin+0xc2>
		pio_set_peripheral(p_pio, PIO_PERIPH_A, (1 << (ul_pin & 0x1F)));
		pio_pull_up(p_pio, (1 << (ul_pin & 0x1F)),
				(ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, (1 << (ul_pin & 0x1F)));
   809b0:	f000 001f 	and.w	r0, r0, #31
   809b4:	2401      	movs	r4, #1
   809b6:	4084      	lsls	r4, r0
   809b8:	4630      	mov	r0, r6
   809ba:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   809be:	4622      	mov	r2, r4
   809c0:	4b16      	ldr	r3, [pc, #88]	; (80a1c <pio_configure_pin+0xc8>)
   809c2:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   809c4:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   809c8:	bf14      	ite	ne
   809ca:	6674      	strne	r4, [r6, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   809cc:	6634      	streq	r4, [r6, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   809ce:	2001      	movs	r0, #1
   809d0:	e021      	b.n	80a16 <pio_configure_pin+0xc2>
				(ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
   809d2:	f000 011f 	and.w	r1, r0, #31
   809d6:	2401      	movs	r4, #1
   809d8:	4630      	mov	r0, r6
   809da:	fa04 f101 	lsl.w	r1, r4, r1
   809de:	462a      	mov	r2, r5
   809e0:	4b0f      	ldr	r3, [pc, #60]	; (80a20 <pio_configure_pin+0xcc>)
   809e2:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   809e4:	4620      	mov	r0, r4
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;
   809e6:	e016      	b.n	80a16 <pio_configure_pin+0xc2>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809e8:	f000 011f 	and.w	r1, r0, #31
   809ec:	2401      	movs	r4, #1
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   809ee:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, (1 << (ul_pin & 0x1F)), ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
   809f2:	ea05 0304 	and.w	r3, r5, r4
   809f6:	9300      	str	r3, [sp, #0]
   809f8:	4630      	mov	r0, r6
   809fa:	fa04 f101 	lsl.w	r1, r4, r1
   809fe:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80a02:	bf14      	ite	ne
   80a04:	2200      	movne	r2, #0
   80a06:	2201      	moveq	r2, #1
   80a08:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80a0c:	4d05      	ldr	r5, [pc, #20]	; (80a24 <pio_configure_pin+0xd0>)
   80a0e:	47a8      	blx	r5

	default:
		return 0;
	}

	return 1;
   80a10:	4620      	mov	r0, r4
		pio_set_output(p_pio, (1 << (ul_pin & 0x1F)),
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80a12:	e000      	b.n	80a16 <pio_configure_pin+0xc2>

	default:
		return 0;
   80a14:	2000      	movs	r0, #0
	}

	return 1;
}
   80a16:	b002      	add	sp, #8
   80a18:	bd70      	pop	{r4, r5, r6, pc}
   80a1a:	bf00      	nop
   80a1c:	000808b1 	.word	0x000808b1
   80a20:	000808f1 	.word	0x000808f1
   80a24:	00080925 	.word	0x00080925

00080a28 <pio_configure_pin_group>:
 *
 * \return Whether the pin(s) have been configured properly.
 */
uint32_t pio_configure_pin_group(Pio *p_pio,
		uint32_t ul_mask, const uint32_t ul_flags)
{
   80a28:	b5f0      	push	{r4, r5, r6, r7, lr}
   80a2a:	b083      	sub	sp, #12
   80a2c:	4607      	mov	r7, r0
   80a2e:	460e      	mov	r6, r1
   80a30:	4615      	mov	r5, r2
	/* Configure pins */
	switch (ul_flags & PIO_TYPE_Msk) {
   80a32:	f002 44f0 	and.w	r4, r2, #2013265920	; 0x78000000
   80a36:	f1b4 5f20 	cmp.w	r4, #671088640	; 0x28000000
   80a3a:	d026      	beq.n	80a8a <pio_configure_pin_group+0x62>
   80a3c:	d806      	bhi.n	80a4c <pio_configure_pin_group+0x24>
   80a3e:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
   80a42:	d00a      	beq.n	80a5a <pio_configure_pin_group+0x32>
   80a44:	f1b4 5f80 	cmp.w	r4, #268435456	; 0x10000000
   80a48:	d013      	beq.n	80a72 <pio_configure_pin_group+0x4a>
   80a4a:	e034      	b.n	80ab6 <pio_configure_pin_group+0x8e>
   80a4c:	f1b4 5f40 	cmp.w	r4, #805306368	; 0x30000000
   80a50:	d01f      	beq.n	80a92 <pio_configure_pin_group+0x6a>
   80a52:	f1b4 5f60 	cmp.w	r4, #939524096	; 0x38000000
   80a56:	d01c      	beq.n	80a92 <pio_configure_pin_group+0x6a>
   80a58:	e02d      	b.n	80ab6 <pio_configure_pin_group+0x8e>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
   80a5a:	f04f 6100 	mov.w	r1, #134217728	; 0x8000000
   80a5e:	4632      	mov	r2, r6
   80a60:	4b16      	ldr	r3, [pc, #88]	; (80abc <pio_configure_pin_group+0x94>)
   80a62:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a64:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a68:	bf14      	ite	ne
   80a6a:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a6c:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a6e:	2001      	movs	r0, #1
   80a70:	e022      	b.n	80ab8 <pio_configure_pin_group+0x90>
	case PIO_TYPE_PIO_PERIPH_A:
		pio_set_peripheral(p_pio, PIO_PERIPH_A, ul_mask);
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
	case PIO_TYPE_PIO_PERIPH_B:
		pio_set_peripheral(p_pio, PIO_PERIPH_B, ul_mask);
   80a72:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
   80a76:	4632      	mov	r2, r6
   80a78:	4b10      	ldr	r3, [pc, #64]	; (80abc <pio_configure_pin_group+0x94>)
   80a7a:	4798      	blx	r3
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
   80a7c:	f015 0f01 	tst.w	r5, #1
		p_pio->PIO_PUER = ul_mask;
   80a80:	bf14      	ite	ne
   80a82:	667e      	strne	r6, [r7, #100]	; 0x64
	} else {
		p_pio->PIO_PUDR = ul_mask;
   80a84:	663e      	streq	r6, [r7, #96]	; 0x60

	default:
		return 0;
	}

	return 1;
   80a86:	2001      	movs	r0, #1
   80a88:	e016      	b.n	80ab8 <pio_configure_pin_group+0x90>
		pio_pull_up(p_pio, ul_mask, (ul_flags & PIO_PULLUP));
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
   80a8a:	4b0d      	ldr	r3, [pc, #52]	; (80ac0 <pio_configure_pin_group+0x98>)
   80a8c:	4798      	blx	r3

	default:
		return 0;
	}

	return 1;
   80a8e:	2001      	movs	r0, #1
		break;
#endif

	case PIO_TYPE_PIO_INPUT:
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;
   80a90:	e012      	b.n	80ab8 <pio_configure_pin_group+0x90>

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
   80a92:	f005 5260 	and.w	r2, r5, #939524096	; 0x38000000
		pio_set_input(p_pio, ul_mask, ul_flags);
		break;

	case PIO_TYPE_PIO_OUTPUT_0:
	case PIO_TYPE_PIO_OUTPUT_1:
		pio_set_output(p_pio, ul_mask,
   80a96:	f005 0301 	and.w	r3, r5, #1
   80a9a:	9300      	str	r3, [sp, #0]
   80a9c:	4638      	mov	r0, r7
   80a9e:	4631      	mov	r1, r6
   80aa0:	f1b2 5f60 	cmp.w	r2, #939524096	; 0x38000000
   80aa4:	bf14      	ite	ne
   80aa6:	2200      	movne	r2, #0
   80aa8:	2201      	moveq	r2, #1
   80aaa:	f3c5 0380 	ubfx	r3, r5, #2, #1
   80aae:	4c05      	ldr	r4, [pc, #20]	; (80ac4 <pio_configure_pin_group+0x9c>)
   80ab0:	47a0      	blx	r4

	default:
		return 0;
	}

	return 1;
   80ab2:	2001      	movs	r0, #1
		pio_set_output(p_pio, ul_mask,
				((ul_flags & PIO_TYPE_PIO_OUTPUT_1)
				== PIO_TYPE_PIO_OUTPUT_1) ? 1 : 0,
				(ul_flags & PIO_OPENDRAIN) ? 1 : 0,
				(ul_flags & PIO_PULLUP) ? 1 : 0);
		break;
   80ab4:	e000      	b.n	80ab8 <pio_configure_pin_group+0x90>

	default:
		return 0;
   80ab6:	2000      	movs	r0, #0
	}

	return 1;
}
   80ab8:	b003      	add	sp, #12
   80aba:	bdf0      	pop	{r4, r5, r6, r7, pc}
   80abc:	000808b1 	.word	0x000808b1
   80ac0:	000808f1 	.word	0x000808f1
   80ac4:	00080925 	.word	0x00080925

00080ac8 <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
   80ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   80acc:	4604      	mov	r4, r0
   80ace:	460e      	mov	r6, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
   80ad0:	4b10      	ldr	r3, [pc, #64]	; (80b14 <pio_handler_process+0x4c>)
   80ad2:	4798      	blx	r3
   80ad4:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
   80ad6:	4620      	mov	r0, r4
   80ad8:	4b0f      	ldr	r3, [pc, #60]	; (80b18 <pio_handler_process+0x50>)
   80ada:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
   80adc:	4005      	ands	r5, r0
   80ade:	d017      	beq.n	80b10 <pio_handler_process+0x48>
   80ae0:	4f0e      	ldr	r7, [pc, #56]	; (80b1c <pio_handler_process+0x54>)
   80ae2:	f107 040c 	add.w	r4, r7, #12
   80ae6:	376c      	adds	r7, #108	; 0x6c
		/* Find triggering source */
		i = 0;
		while (status != 0) {
			/* Source is configured on the same controller */
			if (gs_interrupt_sources[i].id == ul_id) {
   80ae8:	f854 3c0c 	ldr.w	r3, [r4, #-12]
   80aec:	42b3      	cmp	r3, r6
   80aee:	d10a      	bne.n	80b06 <pio_handler_process+0x3e>
				/* Source has PIOs whose statuses have changed */
				if ((status & gs_interrupt_sources[i].mask) != 0) {
   80af0:	f854 1c08 	ldr.w	r1, [r4, #-8]
   80af4:	4229      	tst	r1, r5
   80af6:	d006      	beq.n	80b06 <pio_handler_process+0x3e>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
   80af8:	6823      	ldr	r3, [r4, #0]
   80afa:	4630      	mov	r0, r6
   80afc:	4798      	blx	r3
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
   80afe:	f854 3c08 	ldr.w	r3, [r4, #-8]
   80b02:	ea25 0503 	bic.w	r5, r5, r3
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
   80b06:	42bc      	cmp	r4, r7
   80b08:	d002      	beq.n	80b10 <pio_handler_process+0x48>
   80b0a:	3410      	adds	r4, #16

	/* Check pending events */
	if (status != 0) {
		/* Find triggering source */
		i = 0;
		while (status != 0) {
   80b0c:	2d00      	cmp	r5, #0
   80b0e:	d1eb      	bne.n	80ae8 <pio_handler_process+0x20>
   80b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   80b14:	0008094d 	.word	0x0008094d
   80b18:	00080951 	.word	0x00080951
   80b1c:	20070a30 	.word	0x20070a30

00080b20 <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
   80b20:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
   80b22:	4802      	ldr	r0, [pc, #8]	; (80b2c <PIOA_Handler+0xc>)
   80b24:	210b      	movs	r1, #11
   80b26:	4b02      	ldr	r3, [pc, #8]	; (80b30 <PIOA_Handler+0x10>)
   80b28:	4798      	blx	r3
   80b2a:	bd08      	pop	{r3, pc}
   80b2c:	400e0e00 	.word	0x400e0e00
   80b30:	00080ac9 	.word	0x00080ac9

00080b34 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
   80b34:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
   80b36:	4802      	ldr	r0, [pc, #8]	; (80b40 <PIOB_Handler+0xc>)
   80b38:	210c      	movs	r1, #12
   80b3a:	4b02      	ldr	r3, [pc, #8]	; (80b44 <PIOB_Handler+0x10>)
   80b3c:	4798      	blx	r3
   80b3e:	bd08      	pop	{r3, pc}
   80b40:	400e1000 	.word	0x400e1000
   80b44:	00080ac9 	.word	0x00080ac9

00080b48 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
   80b48:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
   80b4a:	4802      	ldr	r0, [pc, #8]	; (80b54 <PIOC_Handler+0xc>)
   80b4c:	210d      	movs	r1, #13
   80b4e:	4b02      	ldr	r3, [pc, #8]	; (80b58 <PIOC_Handler+0x10>)
   80b50:	4798      	blx	r3
   80b52:	bd08      	pop	{r3, pc}
   80b54:	400e1200 	.word	0x400e1200
   80b58:	00080ac9 	.word	0x00080ac9

00080b5c <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
   80b5c:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
   80b5e:	4802      	ldr	r0, [pc, #8]	; (80b68 <PIOD_Handler+0xc>)
   80b60:	210e      	movs	r1, #14
   80b62:	4b02      	ldr	r3, [pc, #8]	; (80b6c <PIOD_Handler+0x10>)
   80b64:	4798      	blx	r3
   80b66:	bd08      	pop	{r3, pc}
   80b68:	400e1400 	.word	0x400e1400
   80b6c:	00080ac9 	.word	0x00080ac9

00080b70 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
   80b70:	4b17      	ldr	r3, [pc, #92]	; (80bd0 <pmc_switch_mck_to_pllack+0x60>)
   80b72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b74:	f022 0270 	bic.w	r2, r2, #112	; 0x70
   80b78:	4310      	orrs	r0, r2
   80b7a:	6318      	str	r0, [r3, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b7c:	6e9b      	ldr	r3, [r3, #104]	; 0x68
   80b7e:	f013 0f08 	tst.w	r3, #8
   80b82:	d109      	bne.n	80b98 <pmc_switch_mck_to_pllack+0x28>
   80b84:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80b88:	4911      	ldr	r1, [pc, #68]	; (80bd0 <pmc_switch_mck_to_pllack+0x60>)
   80b8a:	e001      	b.n	80b90 <pmc_switch_mck_to_pllack+0x20>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80b8c:	3b01      	subs	r3, #1
   80b8e:	d019      	beq.n	80bc4 <pmc_switch_mck_to_pllack+0x54>
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80b90:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80b92:	f012 0f08 	tst.w	r2, #8
   80b96:	d0f9      	beq.n	80b8c <pmc_switch_mck_to_pllack+0x1c>
		if (ul_timeout == 0) {
			return 1;
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
   80b98:	4b0d      	ldr	r3, [pc, #52]	; (80bd0 <pmc_switch_mck_to_pllack+0x60>)
   80b9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
   80b9c:	f022 0203 	bic.w	r2, r2, #3
   80ba0:	f042 0202 	orr.w	r2, r2, #2
   80ba4:	631a      	str	r2, [r3, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80ba6:	6e98      	ldr	r0, [r3, #104]	; 0x68
   80ba8:	f010 0008 	ands.w	r0, r0, #8
   80bac:	d10c      	bne.n	80bc8 <pmc_switch_mck_to_pllack+0x58>
   80bae:	f44f 6300 	mov.w	r3, #2048	; 0x800
   80bb2:	4907      	ldr	r1, [pc, #28]	; (80bd0 <pmc_switch_mck_to_pllack+0x60>)
   80bb4:	e001      	b.n	80bba <pmc_switch_mck_to_pllack+0x4a>
			--ul_timeout) {
		if (ul_timeout == 0) {
   80bb6:	3b01      	subs	r3, #1
   80bb8:	d008      	beq.n	80bcc <pmc_switch_mck_to_pllack+0x5c>
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
   80bba:	6e8a      	ldr	r2, [r1, #104]	; 0x68
   80bbc:	f012 0f08 	tst.w	r2, #8
   80bc0:	d0f9      	beq.n	80bb6 <pmc_switch_mck_to_pllack+0x46>
   80bc2:	4770      	bx	lr

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80bc4:	2001      	movs	r0, #1
   80bc6:	4770      	bx	lr
		if (ul_timeout == 0) {
			return 1;
		}
	}

	return 0;
   80bc8:	2000      	movs	r0, #0
   80bca:	4770      	bx	lr
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
			--ul_timeout) {
		if (ul_timeout == 0) {
			return 1;
   80bcc:	2001      	movs	r0, #1
		}
	}

	return 0;
}
   80bce:	4770      	bx	lr
   80bd0:	400e0600 	.word	0x400e0600

00080bd4 <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
   80bd4:	b138      	cbz	r0, 80be6 <pmc_switch_mainck_to_xtal+0x12>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80bd6:	4911      	ldr	r1, [pc, #68]	; (80c1c <pmc_switch_mainck_to_xtal+0x48>)
   80bd8:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
   80bda:	4a11      	ldr	r2, [pc, #68]	; (80c20 <pmc_switch_mainck_to_xtal+0x4c>)
   80bdc:	401a      	ands	r2, r3
   80bde:	4b11      	ldr	r3, [pc, #68]	; (80c24 <pmc_switch_mainck_to_xtal+0x50>)
   80be0:	4313      	orrs	r3, r2
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
   80be2:	620b      	str	r3, [r1, #32]
   80be4:	4770      	bx	lr
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80be6:	4a0d      	ldr	r2, [pc, #52]	; (80c1c <pmc_switch_mainck_to_xtal+0x48>)
   80be8:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bea:	f423 135c 	bic.w	r3, r3, #3604480	; 0x370000
   80bee:	f023 0303 	bic.w	r3, r3, #3
   80bf2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
   80bf6:	f043 0301 	orr.w	r3, r3, #1
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
   80bfa:	0209      	lsls	r1, r1, #8
   80bfc:	b289      	uxth	r1, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
   80bfe:	430b      	orrs	r3, r1
	if (ul_bypass) {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
   80c00:	6213      	str	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
   80c02:	6e93      	ldr	r3, [r2, #104]	; 0x68
   80c04:	f013 0f01 	tst.w	r3, #1
   80c08:	d0fb      	beq.n	80c02 <pmc_switch_mainck_to_xtal+0x2e>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
   80c0a:	4a04      	ldr	r2, [pc, #16]	; (80c1c <pmc_switch_mainck_to_xtal+0x48>)
   80c0c:	6a13      	ldr	r3, [r2, #32]
   80c0e:	f043 739b 	orr.w	r3, r3, #20316160	; 0x1360000
   80c12:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
   80c16:	6213      	str	r3, [r2, #32]
   80c18:	4770      	bx	lr
   80c1a:	bf00      	nop
   80c1c:	400e0600 	.word	0x400e0600
   80c20:	fec8fffc 	.word	0xfec8fffc
   80c24:	01370002 	.word	0x01370002

00080c28 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
   80c28:	4b02      	ldr	r3, [pc, #8]	; (80c34 <pmc_osc_is_ready_mainck+0xc>)
   80c2a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c2c:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
   80c30:	4770      	bx	lr
   80c32:	bf00      	nop
   80c34:	400e0600 	.word	0x400e0600

00080c38 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
   80c38:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
   80c3c:	4b01      	ldr	r3, [pc, #4]	; (80c44 <pmc_disable_pllack+0xc>)
   80c3e:	629a      	str	r2, [r3, #40]	; 0x28
   80c40:	4770      	bx	lr
   80c42:	bf00      	nop
   80c44:	400e0600 	.word	0x400e0600

00080c48 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
   80c48:	4b02      	ldr	r3, [pc, #8]	; (80c54 <pmc_is_locked_pllack+0xc>)
   80c4a:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
   80c4c:	f000 0002 	and.w	r0, r0, #2
   80c50:	4770      	bx	lr
   80c52:	bf00      	nop
   80c54:	400e0600 	.word	0x400e0600

00080c58 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
   80c58:	282c      	cmp	r0, #44	; 0x2c
   80c5a:	d820      	bhi.n	80c9e <pmc_enable_periph_clk+0x46>
		return 1;
	}

	if (ul_id < 32) {
   80c5c:	281f      	cmp	r0, #31
   80c5e:	d80d      	bhi.n	80c7c <pmc_enable_periph_clk+0x24>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
   80c60:	4b12      	ldr	r3, [pc, #72]	; (80cac <pmc_enable_periph_clk+0x54>)
   80c62:	699a      	ldr	r2, [r3, #24]
   80c64:	2301      	movs	r3, #1
   80c66:	4083      	lsls	r3, r0
   80c68:	401a      	ands	r2, r3
   80c6a:	4293      	cmp	r3, r2
   80c6c:	d019      	beq.n	80ca2 <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER0 = 1 << ul_id;
   80c6e:	2301      	movs	r3, #1
   80c70:	fa03 f000 	lsl.w	r0, r3, r0
   80c74:	4b0d      	ldr	r3, [pc, #52]	; (80cac <pmc_enable_periph_clk+0x54>)
   80c76:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80c78:	2000      	movs	r0, #0
   80c7a:	4770      	bx	lr
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c7c:	4b0b      	ldr	r3, [pc, #44]	; (80cac <pmc_enable_periph_clk+0x54>)
   80c7e:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
			PMC->PMC_PCER0 = 1 << ul_id;
		}
#if (SAM3S || SAM3XA || SAM4S || SAM4E || SAM4C || SAM4CM || SAM4CP || SAMG55)
	} else {
		ul_id -= 32;
   80c82:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
   80c84:	2301      	movs	r3, #1
   80c86:	4083      	lsls	r3, r0
   80c88:	401a      	ands	r2, r3
   80c8a:	4293      	cmp	r3, r2
   80c8c:	d00b      	beq.n	80ca6 <pmc_enable_periph_clk+0x4e>
			PMC->PMC_PCER1 = 1 << ul_id;
   80c8e:	2301      	movs	r3, #1
   80c90:	fa03 f000 	lsl.w	r0, r3, r0
   80c94:	4b05      	ldr	r3, [pc, #20]	; (80cac <pmc_enable_periph_clk+0x54>)
   80c96:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
		}
#endif
	}

	return 0;
   80c9a:	2000      	movs	r0, #0
   80c9c:	4770      	bx	lr
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
		return 1;
   80c9e:	2001      	movs	r0, #1
   80ca0:	4770      	bx	lr
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
   80ca2:	2000      	movs	r0, #0
   80ca4:	4770      	bx	lr
   80ca6:	2000      	movs	r0, #0
}
   80ca8:	4770      	bx	lr
   80caa:	bf00      	nop
   80cac:	400e0600 	.word	0x400e0600

00080cb0 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
   80cb0:	e7fe      	b.n	80cb0 <Dummy_Handler>
   80cb2:	bf00      	nop

00080cb4 <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
   80cb4:	b510      	push	{r4, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
   80cb6:	4b1e      	ldr	r3, [pc, #120]	; (80d30 <Reset_Handler+0x7c>)
   80cb8:	4a1e      	ldr	r2, [pc, #120]	; (80d34 <Reset_Handler+0x80>)
   80cba:	429a      	cmp	r2, r3
   80cbc:	d003      	beq.n	80cc6 <Reset_Handler+0x12>
		for (; pDest < &_erelocate;) {
   80cbe:	4b1e      	ldr	r3, [pc, #120]	; (80d38 <Reset_Handler+0x84>)
   80cc0:	4a1b      	ldr	r2, [pc, #108]	; (80d30 <Reset_Handler+0x7c>)
   80cc2:	429a      	cmp	r2, r3
   80cc4:	d304      	bcc.n	80cd0 <Reset_Handler+0x1c>
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80cc6:	4b1d      	ldr	r3, [pc, #116]	; (80d3c <Reset_Handler+0x88>)
   80cc8:	4a1d      	ldr	r2, [pc, #116]	; (80d40 <Reset_Handler+0x8c>)
   80cca:	429a      	cmp	r2, r3
   80ccc:	d30f      	bcc.n	80cee <Reset_Handler+0x3a>
   80cce:	e01a      	b.n	80d06 <Reset_Handler+0x52>
   80cd0:	4b1c      	ldr	r3, [pc, #112]	; (80d44 <Reset_Handler+0x90>)
   80cd2:	4c1d      	ldr	r4, [pc, #116]	; (80d48 <Reset_Handler+0x94>)
   80cd4:	1ae4      	subs	r4, r4, r3
   80cd6:	f024 0403 	bic.w	r4, r4, #3
   80cda:	3404      	adds	r4, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80cdc:	2300      	movs	r3, #0
			*pDest++ = *pSrc++;
   80cde:	4814      	ldr	r0, [pc, #80]	; (80d30 <Reset_Handler+0x7c>)
   80ce0:	4914      	ldr	r1, [pc, #80]	; (80d34 <Reset_Handler+0x80>)
   80ce2:	585a      	ldr	r2, [r3, r1]
   80ce4:	501a      	str	r2, [r3, r0]
   80ce6:	3304      	adds	r3, #4
	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
		for (; pDest < &_erelocate;) {
   80ce8:	42a3      	cmp	r3, r4
   80cea:	d1fa      	bne.n	80ce2 <Reset_Handler+0x2e>
   80cec:	e7eb      	b.n	80cc6 <Reset_Handler+0x12>
   80cee:	4b17      	ldr	r3, [pc, #92]	; (80d4c <Reset_Handler+0x98>)
   80cf0:	4917      	ldr	r1, [pc, #92]	; (80d50 <Reset_Handler+0x9c>)
   80cf2:	1ac9      	subs	r1, r1, r3
   80cf4:	f021 0103 	bic.w	r1, r1, #3
   80cf8:	1d1a      	adds	r2, r3, #4
   80cfa:	4411      	add	r1, r2
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
		*pDest++ = 0;
   80cfc:	2200      	movs	r2, #0
   80cfe:	f843 2f04 	str.w	r2, [r3, #4]!
			*pDest++ = *pSrc++;
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
   80d02:	428b      	cmp	r3, r1
   80d04:	d1fb      	bne.n	80cfe <Reset_Handler+0x4a>
		*pDest++ = 0;
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) & _sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
   80d06:	4a13      	ldr	r2, [pc, #76]	; (80d54 <Reset_Handler+0xa0>)
   80d08:	f022 4360 	bic.w	r3, r2, #3758096384	; 0xe0000000
   80d0c:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
   80d10:	4911      	ldr	r1, [pc, #68]	; (80d58 <Reset_Handler+0xa4>)
   80d12:	608b      	str	r3, [r1, #8]

	if (((uint32_t) pSrc >= IRAM0_ADDR) && ((uint32_t) pSrc < NFC_RAM_ADDR)) {
   80d14:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
   80d18:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
   80d1c:	d203      	bcs.n	80d26 <Reset_Handler+0x72>
		SCB->VTOR |= 1 << SCB_VTOR_TBLBASE_Pos;
   80d1e:	688a      	ldr	r2, [r1, #8]
   80d20:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
   80d24:	608a      	str	r2, [r1, #8]
	}

	/* Initialize the C library */
	__libc_init_array();
   80d26:	4b0d      	ldr	r3, [pc, #52]	; (80d5c <Reset_Handler+0xa8>)
   80d28:	4798      	blx	r3

	/* Branch to main function */
	main();
   80d2a:	4b0d      	ldr	r3, [pc, #52]	; (80d60 <Reset_Handler+0xac>)
   80d2c:	4798      	blx	r3
   80d2e:	e7fe      	b.n	80d2e <Reset_Handler+0x7a>
   80d30:	20070000 	.word	0x20070000
   80d34:	00085bd0 	.word	0x00085bd0
   80d38:	200709ec 	.word	0x200709ec
   80d3c:	20070adc 	.word	0x20070adc
   80d40:	200709ec 	.word	0x200709ec
   80d44:	20070004 	.word	0x20070004
   80d48:	200709ef 	.word	0x200709ef
   80d4c:	200709e8 	.word	0x200709e8
   80d50:	20070ad7 	.word	0x20070ad7
   80d54:	00080000 	.word	0x00080000
   80d58:	e000ed00 	.word	0xe000ed00
   80d5c:	00080ef1 	.word	0x00080ef1
   80d60:	00080eb5 	.word	0x00080eb5

00080d64 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate(void)
{
	/* Determine clock frequency according to clock register values */
	switch (PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) {
   80d64:	4b3e      	ldr	r3, [pc, #248]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80d66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80d68:	f003 0303 	and.w	r3, r3, #3
   80d6c:	2b03      	cmp	r3, #3
   80d6e:	d85f      	bhi.n	80e30 <SystemCoreClockUpdate+0xcc>
   80d70:	e8df f003 	tbb	[pc, r3]
   80d74:	2b2b0e02 	.word	0x2b2b0e02
	case PMC_MCKR_CSS_SLOW_CLK:	/* Slow clock */
		if (SUPC->SUPC_SR & SUPC_SR_OSCSEL) {
   80d78:	4b3a      	ldr	r3, [pc, #232]	; (80e64 <SystemCoreClockUpdate+0x100>)
   80d7a:	695b      	ldr	r3, [r3, #20]
   80d7c:	f013 0f80 	tst.w	r3, #128	; 0x80
			SystemCoreClock = CHIP_FREQ_XTAL_32K;
   80d80:	bf14      	ite	ne
   80d82:	f44f 4200 	movne.w	r2, #32768	; 0x8000
		} else {
			SystemCoreClock = CHIP_FREQ_SLCK_RC;
   80d86:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
   80d8a:	4b37      	ldr	r3, [pc, #220]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80d8c:	601a      	str	r2, [r3, #0]
   80d8e:	e04f      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
		}
		break;
	case PMC_MCKR_CSS_MAIN_CLK:	/* Main clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80d90:	4b33      	ldr	r3, [pc, #204]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80d92:	6a1b      	ldr	r3, [r3, #32]
   80d94:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80d98:	d003      	beq.n	80da2 <SystemCoreClockUpdate+0x3e>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80d9a:	4a34      	ldr	r2, [pc, #208]	; (80e6c <SystemCoreClockUpdate+0x108>)
   80d9c:	4b32      	ldr	r3, [pc, #200]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80d9e:	601a      	str	r2, [r3, #0]
   80da0:	e046      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80da2:	4a33      	ldr	r2, [pc, #204]	; (80e70 <SystemCoreClockUpdate+0x10c>)
   80da4:	4b30      	ldr	r3, [pc, #192]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80da6:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80da8:	4b2d      	ldr	r3, [pc, #180]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80daa:	6a1b      	ldr	r3, [r3, #32]
   80dac:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80db0:	2b10      	cmp	r3, #16
   80db2:	d002      	beq.n	80dba <SystemCoreClockUpdate+0x56>
   80db4:	2b20      	cmp	r3, #32
   80db6:	d004      	beq.n	80dc2 <SystemCoreClockUpdate+0x5e>
   80db8:	e03a      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80dba:	4a2e      	ldr	r2, [pc, #184]	; (80e74 <SystemCoreClockUpdate+0x110>)
   80dbc:	4b2a      	ldr	r3, [pc, #168]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80dbe:	601a      	str	r2, [r3, #0]
				break;
   80dc0:	e036      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80dc2:	4a2a      	ldr	r2, [pc, #168]	; (80e6c <SystemCoreClockUpdate+0x108>)
   80dc4:	4b28      	ldr	r3, [pc, #160]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80dc6:	601a      	str	r2, [r3, #0]
				break;
   80dc8:	e032      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
			}
		}
		break;
	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
	case PMC_MCKR_CSS_UPLL_CLK:	/* UPLL clock */
		if (PMC->CKGR_MOR & CKGR_MOR_MOSCSEL) {
   80dca:	4b25      	ldr	r3, [pc, #148]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80dcc:	6a1b      	ldr	r3, [r3, #32]
   80dce:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
   80dd2:	d003      	beq.n	80ddc <SystemCoreClockUpdate+0x78>
			SystemCoreClock = CHIP_FREQ_XTAL_12M;
   80dd4:	4a25      	ldr	r2, [pc, #148]	; (80e6c <SystemCoreClockUpdate+0x108>)
   80dd6:	4b24      	ldr	r3, [pc, #144]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80dd8:	601a      	str	r2, [r3, #0]
   80dda:	e012      	b.n	80e02 <SystemCoreClockUpdate+0x9e>
		} else {
			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
   80ddc:	4a24      	ldr	r2, [pc, #144]	; (80e70 <SystemCoreClockUpdate+0x10c>)
   80dde:	4b22      	ldr	r3, [pc, #136]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80de0:	601a      	str	r2, [r3, #0]

			switch (PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk) {
   80de2:	4b1f      	ldr	r3, [pc, #124]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80de4:	6a1b      	ldr	r3, [r3, #32]
   80de6:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80dea:	2b10      	cmp	r3, #16
   80dec:	d002      	beq.n	80df4 <SystemCoreClockUpdate+0x90>
   80dee:	2b20      	cmp	r3, #32
   80df0:	d004      	beq.n	80dfc <SystemCoreClockUpdate+0x98>
   80df2:	e006      	b.n	80e02 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_4_MHz:
				break;
			case CKGR_MOR_MOSCRCF_8_MHz:
				SystemCoreClock *= 2U;
   80df4:	4a1f      	ldr	r2, [pc, #124]	; (80e74 <SystemCoreClockUpdate+0x110>)
   80df6:	4b1c      	ldr	r3, [pc, #112]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80df8:	601a      	str	r2, [r3, #0]
				break;
   80dfa:	e002      	b.n	80e02 <SystemCoreClockUpdate+0x9e>
			case CKGR_MOR_MOSCRCF_12_MHz:
				SystemCoreClock *= 3U;
   80dfc:	4a1b      	ldr	r2, [pc, #108]	; (80e6c <SystemCoreClockUpdate+0x108>)
   80dfe:	4b1a      	ldr	r3, [pc, #104]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80e00:	601a      	str	r2, [r3, #0]
				break;
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
   80e02:	4b17      	ldr	r3, [pc, #92]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80e04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e06:	f003 0303 	and.w	r3, r3, #3
   80e0a:	2b02      	cmp	r3, #2
   80e0c:	d10d      	bne.n	80e2a <SystemCoreClockUpdate+0xc6>
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e0e:	4b14      	ldr	r3, [pc, #80]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80e10:	6a98      	ldr	r0, [r3, #40]	; 0x28
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e12:	6a99      	ldr	r1, [r3, #40]	; 0x28
   80e14:	4b14      	ldr	r3, [pc, #80]	; (80e68 <SystemCoreClockUpdate+0x104>)
			default:
				break;
			}
		}
		if ((PMC->PMC_MCKR & PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK) {
			SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> 
   80e16:	f3c0 400a 	ubfx	r0, r0, #16, #11
   80e1a:	681a      	ldr	r2, [r3, #0]
   80e1c:	fb00 2202 	mla	r2, r0, r2, r2
				                            CKGR_PLLAR_MULA_Pos) + 1U);
			SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> 
   80e20:	b2c9      	uxtb	r1, r1
   80e22:	fbb2 f2f1 	udiv	r2, r2, r1
   80e26:	601a      	str	r2, [r3, #0]
   80e28:	e002      	b.n	80e30 <SystemCoreClockUpdate+0xcc>
				                             CKGR_PLLAR_DIVA_Pos));
		} else {
			SystemCoreClock = SYS_UTMIPLL / 2U;
   80e2a:	4a13      	ldr	r2, [pc, #76]	; (80e78 <SystemCoreClockUpdate+0x114>)
   80e2c:	4b0e      	ldr	r3, [pc, #56]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80e2e:	601a      	str	r2, [r3, #0]
		}
		break;
	}

	if ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3) {
   80e30:	4b0b      	ldr	r3, [pc, #44]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80e32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
   80e34:	f003 0370 	and.w	r3, r3, #112	; 0x70
   80e38:	2b70      	cmp	r3, #112	; 0x70
   80e3a:	d107      	bne.n	80e4c <SystemCoreClockUpdate+0xe8>
		SystemCoreClock /= 3U;
   80e3c:	4b0a      	ldr	r3, [pc, #40]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80e3e:	681a      	ldr	r2, [r3, #0]
   80e40:	490e      	ldr	r1, [pc, #56]	; (80e7c <SystemCoreClockUpdate+0x118>)
   80e42:	fba1 0202 	umull	r0, r2, r1, r2
   80e46:	0852      	lsrs	r2, r2, #1
   80e48:	601a      	str	r2, [r3, #0]
   80e4a:	4770      	bx	lr
	} else {
		SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> 
   80e4c:	4b04      	ldr	r3, [pc, #16]	; (80e60 <SystemCoreClockUpdate+0xfc>)
   80e4e:	6b19      	ldr	r1, [r3, #48]	; 0x30
   80e50:	4b05      	ldr	r3, [pc, #20]	; (80e68 <SystemCoreClockUpdate+0x104>)
   80e52:	f3c1 1102 	ubfx	r1, r1, #4, #3
   80e56:	681a      	ldr	r2, [r3, #0]
   80e58:	40ca      	lsrs	r2, r1
   80e5a:	601a      	str	r2, [r3, #0]
   80e5c:	4770      	bx	lr
   80e5e:	bf00      	nop
   80e60:	400e0600 	.word	0x400e0600
   80e64:	400e1a10 	.word	0x400e1a10
   80e68:	20070170 	.word	0x20070170
   80e6c:	00b71b00 	.word	0x00b71b00
   80e70:	003d0900 	.word	0x003d0900
   80e74:	007a1200 	.word	0x007a1200
   80e78:	0e4e1c00 	.word	0x0e4e1c00
   80e7c:	aaaaaaab 	.word	0xaaaaaaab

00080e80 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
   80e80:	4b09      	ldr	r3, [pc, #36]	; (80ea8 <_sbrk+0x28>)
   80e82:	681b      	ldr	r3, [r3, #0]
   80e84:	b913      	cbnz	r3, 80e8c <_sbrk+0xc>
		heap = (unsigned char *)&_end;
   80e86:	4a09      	ldr	r2, [pc, #36]	; (80eac <_sbrk+0x2c>)
   80e88:	4b07      	ldr	r3, [pc, #28]	; (80ea8 <_sbrk+0x28>)
   80e8a:	601a      	str	r2, [r3, #0]
	}
	prev_heap = heap;
   80e8c:	4b06      	ldr	r3, [pc, #24]	; (80ea8 <_sbrk+0x28>)
   80e8e:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
   80e90:	181a      	adds	r2, r3, r0
   80e92:	4907      	ldr	r1, [pc, #28]	; (80eb0 <_sbrk+0x30>)
   80e94:	4291      	cmp	r1, r2
   80e96:	db04      	blt.n	80ea2 <_sbrk+0x22>
		return (caddr_t) -1;	
	}

	heap += incr;
   80e98:	4610      	mov	r0, r2
   80e9a:	4a03      	ldr	r2, [pc, #12]	; (80ea8 <_sbrk+0x28>)
   80e9c:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
   80e9e:	4618      	mov	r0, r3
   80ea0:	4770      	bx	lr
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	if (((int)prev_heap + incr) > ramend) {
		return (caddr_t) -1;	
   80ea2:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap += incr;

	return (caddr_t) prev_heap;
}
   80ea6:	4770      	bx	lr
   80ea8:	20070aa0 	.word	0x20070aa0
   80eac:	20072ae0 	.word	0x20072ae0
   80eb0:	20087ffc 	.word	0x20087ffc

00080eb4 <main>:
#include "common/pin_mapper.h"

#define UART_BAUDRATE	115200		//Baud must be the same in Matlab

int main (void)
{
   80eb4:	b508      	push	{r3, lr}
	sysclk_init();
   80eb6:	4b08      	ldr	r3, [pc, #32]	; (80ed8 <main+0x24>)
   80eb8:	4798      	blx	r3
	board_init();
   80eba:	4b08      	ldr	r3, [pc, #32]	; (80edc <main+0x28>)
   80ebc:	4798      	blx	r3
	uart_config((uint32_t)UART_BAUDRATE);
   80ebe:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
   80ec2:	4b07      	ldr	r3, [pc, #28]	; (80ee0 <main+0x2c>)
   80ec4:	4798      	blx	r3
	init_adc();
   80ec6:	4b07      	ldr	r3, [pc, #28]	; (80ee4 <main+0x30>)
   80ec8:	4798      	blx	r3
	pwm_setup();
   80eca:	4b07      	ldr	r3, [pc, #28]	; (80ee8 <main+0x34>)
   80ecc:	4798      	blx	r3
	start_coms();					//Run state machine
   80ece:	4b07      	ldr	r3, [pc, #28]	; (80eec <main+0x38>)
   80ed0:	4798      	blx	r3
	
	
}
   80ed2:	2000      	movs	r0, #0
   80ed4:	bd08      	pop	{r3, pc}
   80ed6:	bf00      	nop
   80ed8:	000807cd 	.word	0x000807cd
   80edc:	00080831 	.word	0x00080831
   80ee0:	00080295 	.word	0x00080295
   80ee4:	00080731 	.word	0x00080731
   80ee8:	00080201 	.word	0x00080201
   80eec:	0008048d 	.word	0x0008048d

00080ef0 <__libc_init_array>:
   80ef0:	b570      	push	{r4, r5, r6, lr}
   80ef2:	4e0f      	ldr	r6, [pc, #60]	; (80f30 <__libc_init_array+0x40>)
   80ef4:	4d0f      	ldr	r5, [pc, #60]	; (80f34 <__libc_init_array+0x44>)
   80ef6:	1b76      	subs	r6, r6, r5
   80ef8:	10b6      	asrs	r6, r6, #2
   80efa:	d007      	beq.n	80f0c <__libc_init_array+0x1c>
   80efc:	3d04      	subs	r5, #4
   80efe:	2400      	movs	r4, #0
   80f00:	3401      	adds	r4, #1
   80f02:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80f06:	4798      	blx	r3
   80f08:	42a6      	cmp	r6, r4
   80f0a:	d1f9      	bne.n	80f00 <__libc_init_array+0x10>
   80f0c:	4e0a      	ldr	r6, [pc, #40]	; (80f38 <__libc_init_array+0x48>)
   80f0e:	4d0b      	ldr	r5, [pc, #44]	; (80f3c <__libc_init_array+0x4c>)
   80f10:	f004 fe48 	bl	85ba4 <_init>
   80f14:	1b76      	subs	r6, r6, r5
   80f16:	10b6      	asrs	r6, r6, #2
   80f18:	d008      	beq.n	80f2c <__libc_init_array+0x3c>
   80f1a:	3d04      	subs	r5, #4
   80f1c:	2400      	movs	r4, #0
   80f1e:	3401      	adds	r4, #1
   80f20:	f855 3f04 	ldr.w	r3, [r5, #4]!
   80f24:	4798      	blx	r3
   80f26:	42a6      	cmp	r6, r4
   80f28:	d1f9      	bne.n	80f1e <__libc_init_array+0x2e>
   80f2a:	bd70      	pop	{r4, r5, r6, pc}
   80f2c:	bd70      	pop	{r4, r5, r6, pc}
   80f2e:	bf00      	nop
   80f30:	00085bb0 	.word	0x00085bb0
   80f34:	00085bb0 	.word	0x00085bb0
   80f38:	00085bb8 	.word	0x00085bb8
   80f3c:	00085bb0 	.word	0x00085bb0

00080f40 <memset>:
   80f40:	b4f0      	push	{r4, r5, r6, r7}
   80f42:	0784      	lsls	r4, r0, #30
   80f44:	d043      	beq.n	80fce <memset+0x8e>
   80f46:	1e54      	subs	r4, r2, #1
   80f48:	2a00      	cmp	r2, #0
   80f4a:	d03e      	beq.n	80fca <memset+0x8a>
   80f4c:	b2cd      	uxtb	r5, r1
   80f4e:	4603      	mov	r3, r0
   80f50:	e003      	b.n	80f5a <memset+0x1a>
   80f52:	1e62      	subs	r2, r4, #1
   80f54:	2c00      	cmp	r4, #0
   80f56:	d038      	beq.n	80fca <memset+0x8a>
   80f58:	4614      	mov	r4, r2
   80f5a:	f803 5b01 	strb.w	r5, [r3], #1
   80f5e:	079a      	lsls	r2, r3, #30
   80f60:	d1f7      	bne.n	80f52 <memset+0x12>
   80f62:	2c03      	cmp	r4, #3
   80f64:	d92a      	bls.n	80fbc <memset+0x7c>
   80f66:	b2cd      	uxtb	r5, r1
   80f68:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
   80f6c:	2c0f      	cmp	r4, #15
   80f6e:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
   80f72:	d915      	bls.n	80fa0 <memset+0x60>
   80f74:	f1a4 0710 	sub.w	r7, r4, #16
   80f78:	093f      	lsrs	r7, r7, #4
   80f7a:	f103 0610 	add.w	r6, r3, #16
   80f7e:	eb06 1607 	add.w	r6, r6, r7, lsl #4
   80f82:	461a      	mov	r2, r3
   80f84:	6015      	str	r5, [r2, #0]
   80f86:	6055      	str	r5, [r2, #4]
   80f88:	6095      	str	r5, [r2, #8]
   80f8a:	60d5      	str	r5, [r2, #12]
   80f8c:	3210      	adds	r2, #16
   80f8e:	42b2      	cmp	r2, r6
   80f90:	d1f8      	bne.n	80f84 <memset+0x44>
   80f92:	f004 040f 	and.w	r4, r4, #15
   80f96:	3701      	adds	r7, #1
   80f98:	2c03      	cmp	r4, #3
   80f9a:	eb03 1307 	add.w	r3, r3, r7, lsl #4
   80f9e:	d90d      	bls.n	80fbc <memset+0x7c>
   80fa0:	461e      	mov	r6, r3
   80fa2:	4622      	mov	r2, r4
   80fa4:	3a04      	subs	r2, #4
   80fa6:	2a03      	cmp	r2, #3
   80fa8:	f846 5b04 	str.w	r5, [r6], #4
   80fac:	d8fa      	bhi.n	80fa4 <memset+0x64>
   80fae:	1f22      	subs	r2, r4, #4
   80fb0:	f022 0203 	bic.w	r2, r2, #3
   80fb4:	3204      	adds	r2, #4
   80fb6:	4413      	add	r3, r2
   80fb8:	f004 0403 	and.w	r4, r4, #3
   80fbc:	b12c      	cbz	r4, 80fca <memset+0x8a>
   80fbe:	b2c9      	uxtb	r1, r1
   80fc0:	441c      	add	r4, r3
   80fc2:	f803 1b01 	strb.w	r1, [r3], #1
   80fc6:	42a3      	cmp	r3, r4
   80fc8:	d1fb      	bne.n	80fc2 <memset+0x82>
   80fca:	bcf0      	pop	{r4, r5, r6, r7}
   80fcc:	4770      	bx	lr
   80fce:	4614      	mov	r4, r2
   80fd0:	4603      	mov	r3, r0
   80fd2:	e7c6      	b.n	80f62 <memset+0x22>

00080fd4 <sprintf>:
   80fd4:	b40e      	push	{r1, r2, r3}
   80fd6:	b5f0      	push	{r4, r5, r6, r7, lr}
   80fd8:	b09c      	sub	sp, #112	; 0x70
   80fda:	ac21      	add	r4, sp, #132	; 0x84
   80fdc:	f854 2b04 	ldr.w	r2, [r4], #4
   80fe0:	490e      	ldr	r1, [pc, #56]	; (8101c <sprintf+0x48>)
   80fe2:	4606      	mov	r6, r0
   80fe4:	4623      	mov	r3, r4
   80fe6:	f44f 7e02 	mov.w	lr, #520	; 0x208
   80fea:	f06f 4500 	mvn.w	r5, #2147483648	; 0x80000000
   80fee:	6808      	ldr	r0, [r1, #0]
   80ff0:	f64f 77ff 	movw	r7, #65535	; 0xffff
   80ff4:	a902      	add	r1, sp, #8
   80ff6:	9602      	str	r6, [sp, #8]
   80ff8:	9606      	str	r6, [sp, #24]
   80ffa:	9401      	str	r4, [sp, #4]
   80ffc:	f8ad e014 	strh.w	lr, [sp, #20]
   81000:	9504      	str	r5, [sp, #16]
   81002:	9507      	str	r5, [sp, #28]
   81004:	f8ad 7016 	strh.w	r7, [sp, #22]
   81008:	f000 f83a 	bl	81080 <_svfprintf_r>
   8100c:	9b02      	ldr	r3, [sp, #8]
   8100e:	2200      	movs	r2, #0
   81010:	701a      	strb	r2, [r3, #0]
   81012:	b01c      	add	sp, #112	; 0x70
   81014:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   81018:	b003      	add	sp, #12
   8101a:	4770      	bx	lr
   8101c:	200705a0 	.word	0x200705a0

00081020 <strlen>:
   81020:	f020 0103 	bic.w	r1, r0, #3
   81024:	f010 0003 	ands.w	r0, r0, #3
   81028:	f1c0 0000 	rsb	r0, r0, #0
   8102c:	f851 3b04 	ldr.w	r3, [r1], #4
   81030:	f100 0c04 	add.w	ip, r0, #4
   81034:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
   81038:	f06f 0200 	mvn.w	r2, #0
   8103c:	bf1c      	itt	ne
   8103e:	fa22 f20c 	lsrne.w	r2, r2, ip
   81042:	4313      	orrne	r3, r2
   81044:	f04f 0c01 	mov.w	ip, #1
   81048:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
   8104c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
   81050:	eba3 020c 	sub.w	r2, r3, ip
   81054:	ea22 0203 	bic.w	r2, r2, r3
   81058:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
   8105c:	bf04      	itt	eq
   8105e:	f851 3b04 	ldreq.w	r3, [r1], #4
   81062:	3004      	addeq	r0, #4
   81064:	d0f4      	beq.n	81050 <strlen+0x30>
   81066:	f013 0fff 	tst.w	r3, #255	; 0xff
   8106a:	bf1f      	itttt	ne
   8106c:	3001      	addne	r0, #1
   8106e:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
   81072:	3001      	addne	r0, #1
   81074:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
   81078:	bf18      	it	ne
   8107a:	3001      	addne	r0, #1
   8107c:	4770      	bx	lr
   8107e:	bf00      	nop

00081080 <_svfprintf_r>:
   81080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   81084:	b0c9      	sub	sp, #292	; 0x124
   81086:	9310      	str	r3, [sp, #64]	; 0x40
   81088:	910c      	str	r1, [sp, #48]	; 0x30
   8108a:	4691      	mov	r9, r2
   8108c:	900d      	str	r0, [sp, #52]	; 0x34
   8108e:	f002 fb61 	bl	83754 <_localeconv_r>
   81092:	6800      	ldr	r0, [r0, #0]
   81094:	9015      	str	r0, [sp, #84]	; 0x54
   81096:	f7ff ffc3 	bl	81020 <strlen>
   8109a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   8109c:	9018      	str	r0, [sp, #96]	; 0x60
   8109e:	89a3      	ldrh	r3, [r4, #12]
   810a0:	061e      	lsls	r6, r3, #24
   810a2:	d503      	bpl.n	810ac <_svfprintf_r+0x2c>
   810a4:	6923      	ldr	r3, [r4, #16]
   810a6:	2b00      	cmp	r3, #0
   810a8:	f001 8081 	beq.w	821ae <_svfprintf_r+0x112e>
   810ac:	ac38      	add	r4, sp, #224	; 0xe0
   810ae:	46a4      	mov	ip, r4
   810b0:	9408      	str	r4, [sp, #32]
   810b2:	942b      	str	r4, [sp, #172]	; 0xac
   810b4:	2500      	movs	r5, #0
   810b6:	2400      	movs	r4, #0
   810b8:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   810bc:	2300      	movs	r3, #0
   810be:	9311      	str	r3, [sp, #68]	; 0x44
   810c0:	932d      	str	r3, [sp, #180]	; 0xb4
   810c2:	932c      	str	r3, [sp, #176]	; 0xb0
   810c4:	931a      	str	r3, [sp, #104]	; 0x68
   810c6:	9319      	str	r3, [sp, #100]	; 0x64
   810c8:	930e      	str	r3, [sp, #56]	; 0x38
   810ca:	4666      	mov	r6, ip
   810cc:	f899 3000 	ldrb.w	r3, [r9]
   810d0:	2b00      	cmp	r3, #0
   810d2:	f000 80f8 	beq.w	812c6 <_svfprintf_r+0x246>
   810d6:	2b25      	cmp	r3, #37	; 0x25
   810d8:	f000 80f5 	beq.w	812c6 <_svfprintf_r+0x246>
   810dc:	f109 0201 	add.w	r2, r9, #1
   810e0:	e001      	b.n	810e6 <_svfprintf_r+0x66>
   810e2:	2b25      	cmp	r3, #37	; 0x25
   810e4:	d004      	beq.n	810f0 <_svfprintf_r+0x70>
   810e6:	7813      	ldrb	r3, [r2, #0]
   810e8:	4614      	mov	r4, r2
   810ea:	3201      	adds	r2, #1
   810ec:	2b00      	cmp	r3, #0
   810ee:	d1f8      	bne.n	810e2 <_svfprintf_r+0x62>
   810f0:	ebc9 0504 	rsb	r5, r9, r4
   810f4:	b17d      	cbz	r5, 81116 <_svfprintf_r+0x96>
   810f6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   810f8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   810fa:	3301      	adds	r3, #1
   810fc:	442a      	add	r2, r5
   810fe:	2b07      	cmp	r3, #7
   81100:	f8c6 9000 	str.w	r9, [r6]
   81104:	6075      	str	r5, [r6, #4]
   81106:	922d      	str	r2, [sp, #180]	; 0xb4
   81108:	932c      	str	r3, [sp, #176]	; 0xb0
   8110a:	f300 80c2 	bgt.w	81292 <_svfprintf_r+0x212>
   8110e:	3608      	adds	r6, #8
   81110:	980e      	ldr	r0, [sp, #56]	; 0x38
   81112:	4428      	add	r0, r5
   81114:	900e      	str	r0, [sp, #56]	; 0x38
   81116:	7823      	ldrb	r3, [r4, #0]
   81118:	2b00      	cmp	r3, #0
   8111a:	f000 80c2 	beq.w	812a2 <_svfprintf_r+0x222>
   8111e:	2300      	movs	r3, #0
   81120:	f894 8001 	ldrb.w	r8, [r4, #1]
   81124:	461a      	mov	r2, r3
   81126:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   8112a:	930f      	str	r3, [sp, #60]	; 0x3c
   8112c:	9309      	str	r3, [sp, #36]	; 0x24
   8112e:	f104 0901 	add.w	r9, r4, #1
   81132:	f04f 34ff 	mov.w	r4, #4294967295
   81136:	940a      	str	r4, [sp, #40]	; 0x28
   81138:	f109 0901 	add.w	r9, r9, #1
   8113c:	f1a8 0320 	sub.w	r3, r8, #32
   81140:	2b58      	cmp	r3, #88	; 0x58
   81142:	f200 83c5 	bhi.w	818d0 <_svfprintf_r+0x850>
   81146:	e8df f013 	tbh	[pc, r3, lsl #1]
   8114a:	026a      	.short	0x026a
   8114c:	03c303c3 	.word	0x03c303c3
   81150:	03c30271 	.word	0x03c30271
   81154:	03c303c3 	.word	0x03c303c3
   81158:	03c303c3 	.word	0x03c303c3
   8115c:	031403c3 	.word	0x031403c3
   81160:	03c30366 	.word	0x03c30366
   81164:	00c0009d 	.word	0x00c0009d
   81168:	027803c3 	.word	0x027803c3
   8116c:	027f027f 	.word	0x027f027f
   81170:	027f027f 	.word	0x027f027f
   81174:	027f027f 	.word	0x027f027f
   81178:	027f027f 	.word	0x027f027f
   8117c:	03c3027f 	.word	0x03c3027f
   81180:	03c303c3 	.word	0x03c303c3
   81184:	03c303c3 	.word	0x03c303c3
   81188:	03c303c3 	.word	0x03c303c3
   8118c:	03c303c3 	.word	0x03c303c3
   81190:	029003c3 	.word	0x029003c3
   81194:	03c30371 	.word	0x03c30371
   81198:	03c30371 	.word	0x03c30371
   8119c:	03c303c3 	.word	0x03c303c3
   811a0:	036a03c3 	.word	0x036a03c3
   811a4:	03c303c3 	.word	0x03c303c3
   811a8:	03c30078 	.word	0x03c30078
   811ac:	03c303c3 	.word	0x03c303c3
   811b0:	03c303c3 	.word	0x03c303c3
   811b4:	03c30059 	.word	0x03c30059
   811b8:	02af03c3 	.word	0x02af03c3
   811bc:	03c303c3 	.word	0x03c303c3
   811c0:	03c303c3 	.word	0x03c303c3
   811c4:	03c303c3 	.word	0x03c303c3
   811c8:	03c303c3 	.word	0x03c303c3
   811cc:	03c303c3 	.word	0x03c303c3
   811d0:	03480337 	.word	0x03480337
   811d4:	03710371 	.word	0x03710371
   811d8:	02ff0371 	.word	0x02ff0371
   811dc:	03c30348 	.word	0x03c30348
   811e0:	030803c3 	.word	0x030803c3
   811e4:	02c503c3 	.word	0x02c503c3
   811e8:	0320007c 	.word	0x0320007c
   811ec:	03c303a3 	.word	0x03c303a3
   811f0:	03c302d9 	.word	0x03c302d9
   811f4:	03c3005f 	.word	0x03c3005f
   811f8:	00de03c3 	.word	0x00de03c3
   811fc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81200:	f04c 0c10 	orr.w	ip, ip, #16
   81204:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81208:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8120a:	06a2      	lsls	r2, r4, #26
   8120c:	f100 8354 	bmi.w	818b8 <_svfprintf_r+0x838>
   81210:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81212:	06e3      	lsls	r3, r4, #27
   81214:	f100 85bd 	bmi.w	81d92 <_svfprintf_r+0xd12>
   81218:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8121c:	f01c 0f40 	tst.w	ip, #64	; 0x40
   81220:	f000 85b7 	beq.w	81d92 <_svfprintf_r+0xd12>
   81224:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81228:	2500      	movs	r5, #0
   8122a:	f8bc 4000 	ldrh.w	r4, [ip]
   8122e:	f10c 0c04 	add.w	ip, ip, #4
   81232:	2301      	movs	r3, #1
   81234:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81238:	e08c      	b.n	81354 <_svfprintf_r+0x2d4>
   8123a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8123c:	f045 0510 	orr.w	r5, r5, #16
   81240:	9509      	str	r5, [sp, #36]	; 0x24
   81242:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81246:	f01c 0320 	ands.w	r3, ip, #32
   8124a:	f040 832a 	bne.w	818a2 <_svfprintf_r+0x822>
   8124e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81252:	f01c 0210 	ands.w	r2, ip, #16
   81256:	f040 85a4 	bne.w	81da2 <_svfprintf_r+0xd22>
   8125a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8125e:	f01c 0340 	ands.w	r3, ip, #64	; 0x40
   81262:	f000 859e 	beq.w	81da2 <_svfprintf_r+0xd22>
   81266:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8126a:	4613      	mov	r3, r2
   8126c:	f8bc 4000 	ldrh.w	r4, [ip]
   81270:	f10c 0c04 	add.w	ip, ip, #4
   81274:	2500      	movs	r5, #0
   81276:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   8127a:	e06b      	b.n	81354 <_svfprintf_r+0x2d4>
   8127c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
   8127e:	9310      	str	r3, [sp, #64]	; 0x40
   81280:	4264      	negs	r4, r4
   81282:	940f      	str	r4, [sp, #60]	; 0x3c
   81284:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81286:	f045 0504 	orr.w	r5, r5, #4
   8128a:	9509      	str	r5, [sp, #36]	; 0x24
   8128c:	f899 8000 	ldrb.w	r8, [r9]
   81290:	e752      	b.n	81138 <_svfprintf_r+0xb8>
   81292:	980d      	ldr	r0, [sp, #52]	; 0x34
   81294:	990c      	ldr	r1, [sp, #48]	; 0x30
   81296:	aa2b      	add	r2, sp, #172	; 0xac
   81298:	f003 fb4a 	bl	84930 <__ssprint_r>
   8129c:	b940      	cbnz	r0, 812b0 <_svfprintf_r+0x230>
   8129e:	ae38      	add	r6, sp, #224	; 0xe0
   812a0:	e736      	b.n	81110 <_svfprintf_r+0x90>
   812a2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   812a4:	b123      	cbz	r3, 812b0 <_svfprintf_r+0x230>
   812a6:	980d      	ldr	r0, [sp, #52]	; 0x34
   812a8:	990c      	ldr	r1, [sp, #48]	; 0x30
   812aa:	aa2b      	add	r2, sp, #172	; 0xac
   812ac:	f003 fb40 	bl	84930 <__ssprint_r>
   812b0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   812b2:	980e      	ldr	r0, [sp, #56]	; 0x38
   812b4:	89a3      	ldrh	r3, [r4, #12]
   812b6:	f013 0f40 	tst.w	r3, #64	; 0x40
   812ba:	bf18      	it	ne
   812bc:	f04f 30ff 	movne.w	r0, #4294967295
   812c0:	b049      	add	sp, #292	; 0x124
   812c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   812c6:	464c      	mov	r4, r9
   812c8:	e725      	b.n	81116 <_svfprintf_r+0x96>
   812ca:	f899 8000 	ldrb.w	r8, [r9]
   812ce:	f109 0001 	add.w	r0, r9, #1
   812d2:	f1b8 0f2a 	cmp.w	r8, #42	; 0x2a
   812d6:	f001 810c 	beq.w	824f2 <_svfprintf_r+0x1472>
   812da:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   812de:	2b09      	cmp	r3, #9
   812e0:	bf98      	it	ls
   812e2:	2100      	movls	r1, #0
   812e4:	f201 806b 	bhi.w	823be <_svfprintf_r+0x133e>
   812e8:	f810 8b01 	ldrb.w	r8, [r0], #1
   812ec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   812f0:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   812f4:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   812f8:	2b09      	cmp	r3, #9
   812fa:	d9f5      	bls.n	812e8 <_svfprintf_r+0x268>
   812fc:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
   81300:	910a      	str	r1, [sp, #40]	; 0x28
   81302:	4681      	mov	r9, r0
   81304:	e71a      	b.n	8113c <_svfprintf_r+0xbc>
   81306:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81308:	4ca1      	ldr	r4, [pc, #644]	; (81590 <_svfprintf_r+0x510>)
   8130a:	06af      	lsls	r7, r5, #26
   8130c:	941a      	str	r4, [sp, #104]	; 0x68
   8130e:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81312:	f140 81d1 	bpl.w	816b8 <_svfprintf_r+0x638>
   81316:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8131a:	f10c 0307 	add.w	r3, ip, #7
   8131e:	f023 0307 	bic.w	r3, r3, #7
   81322:	f103 0408 	add.w	r4, r3, #8
   81326:	9410      	str	r4, [sp, #64]	; 0x40
   81328:	e9d3 4500 	ldrd	r4, r5, [r3]
   8132c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81330:	f01c 0f01 	tst.w	ip, #1
   81334:	f000 8462 	beq.w	81bfc <_svfprintf_r+0xb7c>
   81338:	ea54 0005 	orrs.w	r0, r4, r5
   8133c:	f000 845e 	beq.w	81bfc <_svfprintf_r+0xb7c>
   81340:	2330      	movs	r3, #48	; 0x30
   81342:	f04c 0c02 	orr.w	ip, ip, #2
   81346:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   8134a:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   8134e:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81352:	2302      	movs	r3, #2
   81354:	f04f 0a00 	mov.w	sl, #0
   81358:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   8135c:	990a      	ldr	r1, [sp, #40]	; 0x28
   8135e:	2900      	cmp	r1, #0
   81360:	db05      	blt.n	8136e <_svfprintf_r+0x2ee>
   81362:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81366:	f02c 0c80 	bic.w	ip, ip, #128	; 0x80
   8136a:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8136e:	ea54 0005 	orrs.w	r0, r4, r5
   81372:	f040 82c5 	bne.w	81900 <_svfprintf_r+0x880>
   81376:	990a      	ldr	r1, [sp, #40]	; 0x28
   81378:	2900      	cmp	r1, #0
   8137a:	f040 82c1 	bne.w	81900 <_svfprintf_r+0x880>
   8137e:	2b00      	cmp	r3, #0
   81380:	f040 8438 	bne.w	81bf4 <_svfprintf_r+0xb74>
   81384:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81388:	f01c 0f01 	tst.w	ip, #1
   8138c:	f000 8432 	beq.w	81bf4 <_svfprintf_r+0xb74>
   81390:	af48      	add	r7, sp, #288	; 0x120
   81392:	2330      	movs	r3, #48	; 0x30
   81394:	9d08      	ldr	r5, [sp, #32]
   81396:	f807 3d41 	strb.w	r3, [r7, #-65]!
   8139a:	1bec      	subs	r4, r5, r7
   8139c:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
   813a0:	2500      	movs	r5, #0
   813a2:	4564      	cmp	r4, ip
   813a4:	bfa8      	it	ge
   813a6:	46a4      	movge	ip, r4
   813a8:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   813ac:	9514      	str	r5, [sp, #80]	; 0x50
   813ae:	f1ba 0f00 	cmp.w	sl, #0
   813b2:	d002      	beq.n	813ba <_svfprintf_r+0x33a>
   813b4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   813b6:	3501      	adds	r5, #1
   813b8:	950b      	str	r5, [sp, #44]	; 0x2c
   813ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
   813bc:	f013 0302 	ands.w	r3, r3, #2
   813c0:	9312      	str	r3, [sp, #72]	; 0x48
   813c2:	d002      	beq.n	813ca <_svfprintf_r+0x34a>
   813c4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   813c6:	3502      	adds	r5, #2
   813c8:	950b      	str	r5, [sp, #44]	; 0x2c
   813ca:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   813ce:	f01c 0c84 	ands.w	ip, ip, #132	; 0x84
   813d2:	f8cd c04c 	str.w	ip, [sp, #76]	; 0x4c
   813d6:	f040 8290 	bne.w	818fa <_svfprintf_r+0x87a>
   813da:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   813dc:	f8dd c02c 	ldr.w	ip, [sp, #44]	; 0x2c
   813e0:	ebcc 0b05 	rsb	fp, ip, r5
   813e4:	f1bb 0f00 	cmp.w	fp, #0
   813e8:	f340 8287 	ble.w	818fa <_svfprintf_r+0x87a>
   813ec:	f1bb 0f10 	cmp.w	fp, #16
   813f0:	992d      	ldr	r1, [sp, #180]	; 0xb4
   813f2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   813f4:	f8df a1a0 	ldr.w	sl, [pc, #416]	; 81598 <_svfprintf_r+0x518>
   813f8:	dd2c      	ble.n	81454 <_svfprintf_r+0x3d4>
   813fa:	971b      	str	r7, [sp, #108]	; 0x6c
   813fc:	4630      	mov	r0, r6
   813fe:	4657      	mov	r7, sl
   81400:	2510      	movs	r5, #16
   81402:	46ca      	mov	sl, r9
   81404:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   81406:	46a1      	mov	r9, r4
   81408:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   8140a:	e006      	b.n	8141a <_svfprintf_r+0x39a>
   8140c:	f1ab 0b10 	sub.w	fp, fp, #16
   81410:	f1bb 0f10 	cmp.w	fp, #16
   81414:	f100 0008 	add.w	r0, r0, #8
   81418:	dd17      	ble.n	8144a <_svfprintf_r+0x3ca>
   8141a:	3201      	adds	r2, #1
   8141c:	3110      	adds	r1, #16
   8141e:	2a07      	cmp	r2, #7
   81420:	912d      	str	r1, [sp, #180]	; 0xb4
   81422:	922c      	str	r2, [sp, #176]	; 0xb0
   81424:	6007      	str	r7, [r0, #0]
   81426:	6045      	str	r5, [r0, #4]
   81428:	ddf0      	ble.n	8140c <_svfprintf_r+0x38c>
   8142a:	4620      	mov	r0, r4
   8142c:	4631      	mov	r1, r6
   8142e:	aa2b      	add	r2, sp, #172	; 0xac
   81430:	f003 fa7e 	bl	84930 <__ssprint_r>
   81434:	2800      	cmp	r0, #0
   81436:	f47f af3b 	bne.w	812b0 <_svfprintf_r+0x230>
   8143a:	f1ab 0b10 	sub.w	fp, fp, #16
   8143e:	f1bb 0f10 	cmp.w	fp, #16
   81442:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81444:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81446:	a838      	add	r0, sp, #224	; 0xe0
   81448:	dce7      	bgt.n	8141a <_svfprintf_r+0x39a>
   8144a:	464c      	mov	r4, r9
   8144c:	46d1      	mov	r9, sl
   8144e:	46ba      	mov	sl, r7
   81450:	9f1b      	ldr	r7, [sp, #108]	; 0x6c
   81452:	4606      	mov	r6, r0
   81454:	3201      	adds	r2, #1
   81456:	eb0b 0c01 	add.w	ip, fp, r1
   8145a:	2a07      	cmp	r2, #7
   8145c:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81460:	922c      	str	r2, [sp, #176]	; 0xb0
   81462:	e886 0c00 	stmia.w	r6, {sl, fp}
   81466:	f300 841a 	bgt.w	81c9e <_svfprintf_r+0xc1e>
   8146a:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8146e:	3608      	adds	r6, #8
   81470:	f1ba 0f00 	cmp.w	sl, #0
   81474:	d00f      	beq.n	81496 <_svfprintf_r+0x416>
   81476:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81478:	f10c 0c01 	add.w	ip, ip, #1
   8147c:	3301      	adds	r3, #1
   8147e:	f10d 018f 	add.w	r1, sp, #143	; 0x8f
   81482:	2201      	movs	r2, #1
   81484:	2b07      	cmp	r3, #7
   81486:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8148a:	932c      	str	r3, [sp, #176]	; 0xb0
   8148c:	e886 0006 	stmia.w	r6, {r1, r2}
   81490:	f300 83a4 	bgt.w	81bdc <_svfprintf_r+0xb5c>
   81494:	3608      	adds	r6, #8
   81496:	9b12      	ldr	r3, [sp, #72]	; 0x48
   81498:	b173      	cbz	r3, 814b8 <_svfprintf_r+0x438>
   8149a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8149c:	f10c 0c02 	add.w	ip, ip, #2
   814a0:	3301      	adds	r3, #1
   814a2:	a924      	add	r1, sp, #144	; 0x90
   814a4:	2202      	movs	r2, #2
   814a6:	2b07      	cmp	r3, #7
   814a8:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   814ac:	932c      	str	r3, [sp, #176]	; 0xb0
   814ae:	e886 0006 	stmia.w	r6, {r1, r2}
   814b2:	f300 8387 	bgt.w	81bc4 <_svfprintf_r+0xb44>
   814b6:	3608      	adds	r6, #8
   814b8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
   814ba:	2d80      	cmp	r5, #128	; 0x80
   814bc:	f000 82ca 	beq.w	81a54 <_svfprintf_r+0x9d4>
   814c0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   814c2:	ebc4 0a05 	rsb	sl, r4, r5
   814c6:	f1ba 0f00 	cmp.w	sl, #0
   814ca:	dd3b      	ble.n	81544 <_svfprintf_r+0x4c4>
   814cc:	f1ba 0f10 	cmp.w	sl, #16
   814d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   814d2:	4d30      	ldr	r5, [pc, #192]	; (81594 <_svfprintf_r+0x514>)
   814d4:	dd2b      	ble.n	8152e <_svfprintf_r+0x4ae>
   814d6:	940a      	str	r4, [sp, #40]	; 0x28
   814d8:	4632      	mov	r2, r6
   814da:	f04f 0b10 	mov.w	fp, #16
   814de:	462e      	mov	r6, r5
   814e0:	4661      	mov	r1, ip
   814e2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   814e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   814e6:	e006      	b.n	814f6 <_svfprintf_r+0x476>
   814e8:	f1aa 0a10 	sub.w	sl, sl, #16
   814ec:	f1ba 0f10 	cmp.w	sl, #16
   814f0:	f102 0208 	add.w	r2, r2, #8
   814f4:	dd17      	ble.n	81526 <_svfprintf_r+0x4a6>
   814f6:	3301      	adds	r3, #1
   814f8:	3110      	adds	r1, #16
   814fa:	2b07      	cmp	r3, #7
   814fc:	912d      	str	r1, [sp, #180]	; 0xb4
   814fe:	932c      	str	r3, [sp, #176]	; 0xb0
   81500:	e882 0840 	stmia.w	r2, {r6, fp}
   81504:	ddf0      	ble.n	814e8 <_svfprintf_r+0x468>
   81506:	4620      	mov	r0, r4
   81508:	4629      	mov	r1, r5
   8150a:	aa2b      	add	r2, sp, #172	; 0xac
   8150c:	f003 fa10 	bl	84930 <__ssprint_r>
   81510:	2800      	cmp	r0, #0
   81512:	f47f aecd 	bne.w	812b0 <_svfprintf_r+0x230>
   81516:	f1aa 0a10 	sub.w	sl, sl, #16
   8151a:	f1ba 0f10 	cmp.w	sl, #16
   8151e:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81520:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81522:	aa38      	add	r2, sp, #224	; 0xe0
   81524:	dce7      	bgt.n	814f6 <_svfprintf_r+0x476>
   81526:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81528:	4635      	mov	r5, r6
   8152a:	468c      	mov	ip, r1
   8152c:	4616      	mov	r6, r2
   8152e:	3301      	adds	r3, #1
   81530:	44d4      	add	ip, sl
   81532:	2b07      	cmp	r3, #7
   81534:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81538:	932c      	str	r3, [sp, #176]	; 0xb0
   8153a:	e886 0420 	stmia.w	r6, {r5, sl}
   8153e:	f300 8335 	bgt.w	81bac <_svfprintf_r+0xb2c>
   81542:	3608      	adds	r6, #8
   81544:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81546:	05ed      	lsls	r5, r5, #23
   81548:	f100 8224 	bmi.w	81994 <_svfprintf_r+0x914>
   8154c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8154e:	44a4      	add	ip, r4
   81550:	3301      	adds	r3, #1
   81552:	2b07      	cmp	r3, #7
   81554:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81558:	6037      	str	r7, [r6, #0]
   8155a:	6074      	str	r4, [r6, #4]
   8155c:	932c      	str	r3, [sp, #176]	; 0xb0
   8155e:	f300 830f 	bgt.w	81b80 <_svfprintf_r+0xb00>
   81562:	3608      	adds	r6, #8
   81564:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81566:	0763      	lsls	r3, r4, #29
   81568:	d549      	bpl.n	815fe <_svfprintf_r+0x57e>
   8156a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   8156c:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8156e:	1a2c      	subs	r4, r5, r0
   81570:	2c00      	cmp	r4, #0
   81572:	dd44      	ble.n	815fe <_svfprintf_r+0x57e>
   81574:	2c10      	cmp	r4, #16
   81576:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81578:	f8df a01c 	ldr.w	sl, [pc, #28]	; 81598 <_svfprintf_r+0x518>
   8157c:	dd2b      	ble.n	815d6 <_svfprintf_r+0x556>
   8157e:	4657      	mov	r7, sl
   81580:	2510      	movs	r5, #16
   81582:	4662      	mov	r2, ip
   81584:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
   81588:	f8dd a034 	ldr.w	sl, [sp, #52]	; 0x34
   8158c:	e00b      	b.n	815a6 <_svfprintf_r+0x526>
   8158e:	bf00      	nop
   81590:	00085a58 	.word	0x00085a58
   81594:	00085a24 	.word	0x00085a24
   81598:	00085a78 	.word	0x00085a78
   8159c:	3c10      	subs	r4, #16
   8159e:	2c10      	cmp	r4, #16
   815a0:	f106 0608 	add.w	r6, r6, #8
   815a4:	dd15      	ble.n	815d2 <_svfprintf_r+0x552>
   815a6:	3301      	adds	r3, #1
   815a8:	3210      	adds	r2, #16
   815aa:	2b07      	cmp	r3, #7
   815ac:	922d      	str	r2, [sp, #180]	; 0xb4
   815ae:	932c      	str	r3, [sp, #176]	; 0xb0
   815b0:	6037      	str	r7, [r6, #0]
   815b2:	6075      	str	r5, [r6, #4]
   815b4:	ddf2      	ble.n	8159c <_svfprintf_r+0x51c>
   815b6:	4650      	mov	r0, sl
   815b8:	4641      	mov	r1, r8
   815ba:	aa2b      	add	r2, sp, #172	; 0xac
   815bc:	f003 f9b8 	bl	84930 <__ssprint_r>
   815c0:	2800      	cmp	r0, #0
   815c2:	f47f ae75 	bne.w	812b0 <_svfprintf_r+0x230>
   815c6:	3c10      	subs	r4, #16
   815c8:	2c10      	cmp	r4, #16
   815ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   815cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   815ce:	ae38      	add	r6, sp, #224	; 0xe0
   815d0:	dce9      	bgt.n	815a6 <_svfprintf_r+0x526>
   815d2:	4694      	mov	ip, r2
   815d4:	46ba      	mov	sl, r7
   815d6:	3301      	adds	r3, #1
   815d8:	44a4      	add	ip, r4
   815da:	2b07      	cmp	r3, #7
   815dc:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   815e0:	932c      	str	r3, [sp, #176]	; 0xb0
   815e2:	f8c6 a000 	str.w	sl, [r6]
   815e6:	6074      	str	r4, [r6, #4]
   815e8:	dd09      	ble.n	815fe <_svfprintf_r+0x57e>
   815ea:	980d      	ldr	r0, [sp, #52]	; 0x34
   815ec:	990c      	ldr	r1, [sp, #48]	; 0x30
   815ee:	aa2b      	add	r2, sp, #172	; 0xac
   815f0:	f003 f99e 	bl	84930 <__ssprint_r>
   815f4:	2800      	cmp	r0, #0
   815f6:	f47f ae5b 	bne.w	812b0 <_svfprintf_r+0x230>
   815fa:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   815fe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   81600:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81602:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81604:	42a8      	cmp	r0, r5
   81606:	bfac      	ite	ge
   81608:	1824      	addge	r4, r4, r0
   8160a:	1964      	addlt	r4, r4, r5
   8160c:	940e      	str	r4, [sp, #56]	; 0x38
   8160e:	f1bc 0f00 	cmp.w	ip, #0
   81612:	f040 82c1 	bne.w	81b98 <_svfprintf_r+0xb18>
   81616:	2300      	movs	r3, #0
   81618:	932c      	str	r3, [sp, #176]	; 0xb0
   8161a:	ae38      	add	r6, sp, #224	; 0xe0
   8161c:	e556      	b.n	810cc <_svfprintf_r+0x4c>
   8161e:	f899 8000 	ldrb.w	r8, [r9]
   81622:	2a00      	cmp	r2, #0
   81624:	f47f ad88 	bne.w	81138 <_svfprintf_r+0xb8>
   81628:	2220      	movs	r2, #32
   8162a:	e585      	b.n	81138 <_svfprintf_r+0xb8>
   8162c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8162e:	f045 0501 	orr.w	r5, r5, #1
   81632:	9509      	str	r5, [sp, #36]	; 0x24
   81634:	f899 8000 	ldrb.w	r8, [r9]
   81638:	e57e      	b.n	81138 <_svfprintf_r+0xb8>
   8163a:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8163c:	f045 0580 	orr.w	r5, r5, #128	; 0x80
   81640:	9509      	str	r5, [sp, #36]	; 0x24
   81642:	f899 8000 	ldrb.w	r8, [r9]
   81646:	e577      	b.n	81138 <_svfprintf_r+0xb8>
   81648:	2400      	movs	r4, #0
   8164a:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   8164e:	940f      	str	r4, [sp, #60]	; 0x3c
   81650:	4621      	mov	r1, r4
   81652:	f819 8b01 	ldrb.w	r8, [r9], #1
   81656:	eb01 0181 	add.w	r1, r1, r1, lsl #2
   8165a:	eb03 0141 	add.w	r1, r3, r1, lsl #1
   8165e:	f1a8 0330 	sub.w	r3, r8, #48	; 0x30
   81662:	2b09      	cmp	r3, #9
   81664:	d9f5      	bls.n	81652 <_svfprintf_r+0x5d2>
   81666:	910f      	str	r1, [sp, #60]	; 0x3c
   81668:	e568      	b.n	8113c <_svfprintf_r+0xbc>
   8166a:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8166e:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81672:	f04c 0c10 	orr.w	ip, ip, #16
   81676:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8167a:	9c09      	ldr	r4, [sp, #36]	; 0x24
   8167c:	06a5      	lsls	r5, r4, #26
   8167e:	f140 80b2 	bpl.w	817e6 <_svfprintf_r+0x766>
   81682:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81684:	1de9      	adds	r1, r5, #7
   81686:	f021 0107 	bic.w	r1, r1, #7
   8168a:	e9d1 2300 	ldrd	r2, r3, [r1]
   8168e:	3108      	adds	r1, #8
   81690:	9110      	str	r1, [sp, #64]	; 0x40
   81692:	4614      	mov	r4, r2
   81694:	461d      	mov	r5, r3
   81696:	2a00      	cmp	r2, #0
   81698:	f173 0c00 	sbcs.w	ip, r3, #0
   8169c:	f2c0 8394 	blt.w	81dc8 <_svfprintf_r+0xd48>
   816a0:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   816a4:	2301      	movs	r3, #1
   816a6:	e659      	b.n	8135c <_svfprintf_r+0x2dc>
   816a8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   816aa:	4cb6      	ldr	r4, [pc, #728]	; (81984 <_svfprintf_r+0x904>)
   816ac:	06af      	lsls	r7, r5, #26
   816ae:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   816b2:	941a      	str	r4, [sp, #104]	; 0x68
   816b4:	f53f ae2f 	bmi.w	81316 <_svfprintf_r+0x296>
   816b8:	9d09      	ldr	r5, [sp, #36]	; 0x24
   816ba:	06ed      	lsls	r5, r5, #27
   816bc:	f140 8443 	bpl.w	81f46 <_svfprintf_r+0xec6>
   816c0:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   816c4:	2500      	movs	r5, #0
   816c6:	f8dc 4000 	ldr.w	r4, [ip]
   816ca:	f10c 0c04 	add.w	ip, ip, #4
   816ce:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   816d2:	e62b      	b.n	8132c <_svfprintf_r+0x2ac>
   816d4:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   816d8:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   816dc:	f01c 0f20 	tst.w	ip, #32
   816e0:	f000 8440 	beq.w	81f64 <_svfprintf_r+0xee4>
   816e4:	9c10      	ldr	r4, [sp, #64]	; 0x40
   816e6:	6821      	ldr	r1, [r4, #0]
   816e8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   816ea:	17e5      	asrs	r5, r4, #31
   816ec:	462b      	mov	r3, r5
   816ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
   816f0:	4622      	mov	r2, r4
   816f2:	3504      	adds	r5, #4
   816f4:	9510      	str	r5, [sp, #64]	; 0x40
   816f6:	e9c1 2300 	strd	r2, r3, [r1]
   816fa:	e4e7      	b.n	810cc <_svfprintf_r+0x4c>
   816fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
   816fe:	f04f 0a00 	mov.w	sl, #0
   81702:	6827      	ldr	r7, [r4, #0]
   81704:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81708:	1d25      	adds	r5, r4, #4
   8170a:	2f00      	cmp	r7, #0
   8170c:	f000 85e9 	beq.w	822e2 <_svfprintf_r+0x1262>
   81710:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81712:	4638      	mov	r0, r7
   81714:	2c00      	cmp	r4, #0
   81716:	f2c0 859b 	blt.w	82250 <_svfprintf_r+0x11d0>
   8171a:	4651      	mov	r1, sl
   8171c:	4622      	mov	r2, r4
   8171e:	f002 fab9 	bl	83c94 <memchr>
   81722:	2800      	cmp	r0, #0
   81724:	f000 8613 	beq.w	8234e <_svfprintf_r+0x12ce>
   81728:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   8172a:	1bc0      	subs	r0, r0, r7
   8172c:	42a0      	cmp	r0, r4
   8172e:	bfb8      	it	lt
   81730:	4604      	movlt	r4, r0
   81732:	9510      	str	r5, [sp, #64]	; 0x40
   81734:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
   81738:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   8173c:	f8cd a050 	str.w	sl, [sp, #80]	; 0x50
   81740:	950b      	str	r5, [sp, #44]	; 0x2c
   81742:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81746:	e632      	b.n	813ae <_svfprintf_r+0x32e>
   81748:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8174c:	f04c 0c40 	orr.w	ip, ip, #64	; 0x40
   81750:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   81754:	f899 8000 	ldrb.w	r8, [r9]
   81758:	e4ee      	b.n	81138 <_svfprintf_r+0xb8>
   8175a:	f899 8000 	ldrb.w	r8, [r9]
   8175e:	464b      	mov	r3, r9
   81760:	f1b8 0f6c 	cmp.w	r8, #108	; 0x6c
   81764:	f000 847f 	beq.w	82066 <_svfprintf_r+0xfe6>
   81768:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8176a:	f045 0510 	orr.w	r5, r5, #16
   8176e:	9509      	str	r5, [sp, #36]	; 0x24
   81770:	e4e2      	b.n	81138 <_svfprintf_r+0xb8>
   81772:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81774:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81776:	6824      	ldr	r4, [r4, #0]
   81778:	1d2b      	adds	r3, r5, #4
   8177a:	2c00      	cmp	r4, #0
   8177c:	940f      	str	r4, [sp, #60]	; 0x3c
   8177e:	f6ff ad7d 	blt.w	8127c <_svfprintf_r+0x1fc>
   81782:	9310      	str	r3, [sp, #64]	; 0x40
   81784:	f899 8000 	ldrb.w	r8, [r9]
   81788:	e4d6      	b.n	81138 <_svfprintf_r+0xb8>
   8178a:	9b10      	ldr	r3, [sp, #64]	; 0x40
   8178c:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81790:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81792:	487d      	ldr	r0, [pc, #500]	; (81988 <_svfprintf_r+0x908>)
   81794:	3504      	adds	r5, #4
   81796:	681c      	ldr	r4, [r3, #0]
   81798:	f04f 0878 	mov.w	r8, #120	; 0x78
   8179c:	2330      	movs	r3, #48	; 0x30
   8179e:	f04c 0c02 	orr.w	ip, ip, #2
   817a2:	9510      	str	r5, [sp, #64]	; 0x40
   817a4:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
   817a8:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   817ac:	2500      	movs	r5, #0
   817ae:	f88d 8091 	strb.w	r8, [sp, #145]	; 0x91
   817b2:	901a      	str	r0, [sp, #104]	; 0x68
   817b4:	2302      	movs	r3, #2
   817b6:	e5cd      	b.n	81354 <_svfprintf_r+0x2d4>
   817b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
   817ba:	9d10      	ldr	r5, [sp, #64]	; 0x40
   817bc:	681a      	ldr	r2, [r3, #0]
   817be:	2401      	movs	r4, #1
   817c0:	2300      	movs	r3, #0
   817c2:	3504      	adds	r5, #4
   817c4:	469a      	mov	sl, r3
   817c6:	940b      	str	r4, [sp, #44]	; 0x2c
   817c8:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
   817cc:	9510      	str	r5, [sp, #64]	; 0x40
   817ce:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   817d2:	930a      	str	r3, [sp, #40]	; 0x28
   817d4:	9314      	str	r3, [sp, #80]	; 0x50
   817d6:	af2e      	add	r7, sp, #184	; 0xb8
   817d8:	e5ef      	b.n	813ba <_svfprintf_r+0x33a>
   817da:	9c09      	ldr	r4, [sp, #36]	; 0x24
   817dc:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   817e0:	06a5      	lsls	r5, r4, #26
   817e2:	f53f af4e 	bmi.w	81682 <_svfprintf_r+0x602>
   817e6:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   817ea:	f01c 0f10 	tst.w	ip, #16
   817ee:	f040 82df 	bne.w	81db0 <_svfprintf_r+0xd30>
   817f2:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   817f6:	f01c 0f40 	tst.w	ip, #64	; 0x40
   817fa:	f000 82d9 	beq.w	81db0 <_svfprintf_r+0xd30>
   817fe:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81802:	f9bc 4000 	ldrsh.w	r4, [ip]
   81806:	f10c 0c04 	add.w	ip, ip, #4
   8180a:	17e5      	asrs	r5, r4, #31
   8180c:	4622      	mov	r2, r4
   8180e:	462b      	mov	r3, r5
   81810:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81814:	e73f      	b.n	81696 <_svfprintf_r+0x616>
   81816:	f899 8000 	ldrb.w	r8, [r9]
   8181a:	222b      	movs	r2, #43	; 0x2b
   8181c:	e48c      	b.n	81138 <_svfprintf_r+0xb8>
   8181e:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81820:	f045 0508 	orr.w	r5, r5, #8
   81824:	9509      	str	r5, [sp, #36]	; 0x24
   81826:	f899 8000 	ldrb.w	r8, [r9]
   8182a:	e485      	b.n	81138 <_svfprintf_r+0xb8>
   8182c:	9d10      	ldr	r5, [sp, #64]	; 0x40
   8182e:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   81832:	1deb      	adds	r3, r5, #7
   81834:	f023 0307 	bic.w	r3, r3, #7
   81838:	f103 0c08 	add.w	ip, r3, #8
   8183c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81840:	e9d3 4500 	ldrd	r4, r5, [r3]
   81844:	e9cd 4516 	strd	r4, r5, [sp, #88]	; 0x58
   81848:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   8184c:	f003 f836 	bl	848bc <__fpclassifyd>
   81850:	2801      	cmp	r0, #1
   81852:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81856:	f040 835c 	bne.w	81f12 <_svfprintf_r+0xe92>
   8185a:	2200      	movs	r2, #0
   8185c:	2300      	movs	r3, #0
   8185e:	f003 fd95 	bl	8538c <__aeabi_dcmplt>
   81862:	2800      	cmp	r0, #0
   81864:	f040 8563 	bne.w	8232e <_svfprintf_r+0x12ae>
   81868:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8186c:	2503      	movs	r5, #3
   8186e:	950b      	str	r5, [sp, #44]	; 0x2c
   81870:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81872:	4f46      	ldr	r7, [pc, #280]	; (8198c <_svfprintf_r+0x90c>)
   81874:	f025 0580 	bic.w	r5, r5, #128	; 0x80
   81878:	4b45      	ldr	r3, [pc, #276]	; (81990 <_svfprintf_r+0x910>)
   8187a:	2400      	movs	r4, #0
   8187c:	9509      	str	r5, [sp, #36]	; 0x24
   8187e:	2500      	movs	r5, #0
   81880:	940a      	str	r4, [sp, #40]	; 0x28
   81882:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   81886:	bfd8      	it	le
   81888:	461f      	movle	r7, r3
   8188a:	2403      	movs	r4, #3
   8188c:	9514      	str	r5, [sp, #80]	; 0x50
   8188e:	e58e      	b.n	813ae <_svfprintf_r+0x32e>
   81890:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81894:	f04c 0c20 	orr.w	ip, ip, #32
   81898:	f8cd c024 	str.w	ip, [sp, #36]	; 0x24
   8189c:	f899 8000 	ldrb.w	r8, [r9]
   818a0:	e44a      	b.n	81138 <_svfprintf_r+0xb8>
   818a2:	9c10      	ldr	r4, [sp, #64]	; 0x40
   818a4:	1de3      	adds	r3, r4, #7
   818a6:	f023 0307 	bic.w	r3, r3, #7
   818aa:	f103 0508 	add.w	r5, r3, #8
   818ae:	9510      	str	r5, [sp, #64]	; 0x40
   818b0:	e9d3 4500 	ldrd	r4, r5, [r3]
   818b4:	2300      	movs	r3, #0
   818b6:	e54d      	b.n	81354 <_svfprintf_r+0x2d4>
   818b8:	9d10      	ldr	r5, [sp, #64]	; 0x40
   818ba:	1deb      	adds	r3, r5, #7
   818bc:	f023 0307 	bic.w	r3, r3, #7
   818c0:	f103 0c08 	add.w	ip, r3, #8
   818c4:	e9d3 4500 	ldrd	r4, r5, [r3]
   818c8:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   818cc:	2301      	movs	r3, #1
   818ce:	e541      	b.n	81354 <_svfprintf_r+0x2d4>
   818d0:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
   818d4:	f1b8 0f00 	cmp.w	r8, #0
   818d8:	f43f ace3 	beq.w	812a2 <_svfprintf_r+0x222>
   818dc:	2300      	movs	r3, #0
   818de:	f04f 0c01 	mov.w	ip, #1
   818e2:	469a      	mov	sl, r3
   818e4:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   818e8:	f88d 80b8 	strb.w	r8, [sp, #184]	; 0xb8
   818ec:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
   818f0:	930a      	str	r3, [sp, #40]	; 0x28
   818f2:	9314      	str	r3, [sp, #80]	; 0x50
   818f4:	4664      	mov	r4, ip
   818f6:	af2e      	add	r7, sp, #184	; 0xb8
   818f8:	e55f      	b.n	813ba <_svfprintf_r+0x33a>
   818fa:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   818fe:	e5b7      	b.n	81470 <_svfprintf_r+0x3f0>
   81900:	2b01      	cmp	r3, #1
   81902:	f000 80ec 	beq.w	81ade <_svfprintf_r+0xa5e>
   81906:	2b02      	cmp	r3, #2
   81908:	f10d 03df 	add.w	r3, sp, #223	; 0xdf
   8190c:	d118      	bne.n	81940 <_svfprintf_r+0x8c0>
   8190e:	f8dd c068 	ldr.w	ip, [sp, #104]	; 0x68
   81912:	4619      	mov	r1, r3
   81914:	f004 000f 	and.w	r0, r4, #15
   81918:	0922      	lsrs	r2, r4, #4
   8191a:	f81c 0000 	ldrb.w	r0, [ip, r0]
   8191e:	ea42 7205 	orr.w	r2, r2, r5, lsl #28
   81922:	092b      	lsrs	r3, r5, #4
   81924:	7008      	strb	r0, [r1, #0]
   81926:	ea52 0003 	orrs.w	r0, r2, r3
   8192a:	460f      	mov	r7, r1
   8192c:	4614      	mov	r4, r2
   8192e:	461d      	mov	r5, r3
   81930:	f101 31ff 	add.w	r1, r1, #4294967295
   81934:	d1ee      	bne.n	81914 <_svfprintf_r+0x894>
   81936:	9d08      	ldr	r5, [sp, #32]
   81938:	e9cd 231e 	strd	r2, r3, [sp, #120]	; 0x78
   8193c:	1bec      	subs	r4, r5, r7
   8193e:	e52d      	b.n	8139c <_svfprintf_r+0x31c>
   81940:	08e0      	lsrs	r0, r4, #3
   81942:	ea40 7045 	orr.w	r0, r0, r5, lsl #29
   81946:	f004 0207 	and.w	r2, r4, #7
   8194a:	08e9      	lsrs	r1, r5, #3
   8194c:	3230      	adds	r2, #48	; 0x30
   8194e:	ea50 0c01 	orrs.w	ip, r0, r1
   81952:	461f      	mov	r7, r3
   81954:	701a      	strb	r2, [r3, #0]
   81956:	4604      	mov	r4, r0
   81958:	460d      	mov	r5, r1
   8195a:	f103 33ff 	add.w	r3, r3, #4294967295
   8195e:	d1ef      	bne.n	81940 <_svfprintf_r+0x8c0>
   81960:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81962:	e9cd 011c 	strd	r0, r1, [sp, #112]	; 0x70
   81966:	07e0      	lsls	r0, r4, #31
   81968:	4639      	mov	r1, r7
   8196a:	f140 80c1 	bpl.w	81af0 <_svfprintf_r+0xa70>
   8196e:	2a30      	cmp	r2, #48	; 0x30
   81970:	f000 80be 	beq.w	81af0 <_svfprintf_r+0xa70>
   81974:	9d08      	ldr	r5, [sp, #32]
   81976:	461f      	mov	r7, r3
   81978:	2330      	movs	r3, #48	; 0x30
   8197a:	1bec      	subs	r4, r5, r7
   8197c:	f801 3c01 	strb.w	r3, [r1, #-1]
   81980:	e50c      	b.n	8139c <_svfprintf_r+0x31c>
   81982:	bf00      	nop
   81984:	00085a44 	.word	0x00085a44
   81988:	00085a58 	.word	0x00085a58
   8198c:	00085a38 	.word	0x00085a38
   81990:	00085a34 	.word	0x00085a34
   81994:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   81998:	f340 80ad 	ble.w	81af6 <_svfprintf_r+0xa76>
   8199c:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   819a0:	2200      	movs	r2, #0
   819a2:	2300      	movs	r3, #0
   819a4:	f8cd c01c 	str.w	ip, [sp, #28]
   819a8:	f003 fce6 	bl	85378 <__aeabi_dcmpeq>
   819ac:	f8dd c01c 	ldr.w	ip, [sp, #28]
   819b0:	2800      	cmp	r0, #0
   819b2:	f000 8126 	beq.w	81c02 <_svfprintf_r+0xb82>
   819b6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   819b8:	49aa      	ldr	r1, [pc, #680]	; (81c64 <_svfprintf_r+0xbe4>)
   819ba:	3301      	adds	r3, #1
   819bc:	f10c 0c01 	add.w	ip, ip, #1
   819c0:	2201      	movs	r2, #1
   819c2:	2b07      	cmp	r3, #7
   819c4:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   819c8:	932c      	str	r3, [sp, #176]	; 0xb0
   819ca:	e886 0006 	stmia.w	r6, {r1, r2}
   819ce:	f300 82ed 	bgt.w	81fac <_svfprintf_r+0xf2c>
   819d2:	3608      	adds	r6, #8
   819d4:	9b25      	ldr	r3, [sp, #148]	; 0x94
   819d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
   819d8:	42a3      	cmp	r3, r4
   819da:	db03      	blt.n	819e4 <_svfprintf_r+0x964>
   819dc:	9d09      	ldr	r5, [sp, #36]	; 0x24
   819de:	07ec      	lsls	r4, r5, #31
   819e0:	f57f adc0 	bpl.w	81564 <_svfprintf_r+0x4e4>
   819e4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   819e6:	9c18      	ldr	r4, [sp, #96]	; 0x60
   819e8:	3301      	adds	r3, #1
   819ea:	9d15      	ldr	r5, [sp, #84]	; 0x54
   819ec:	44a4      	add	ip, r4
   819ee:	2b07      	cmp	r3, #7
   819f0:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   819f4:	6035      	str	r5, [r6, #0]
   819f6:	6074      	str	r4, [r6, #4]
   819f8:	932c      	str	r3, [sp, #176]	; 0xb0
   819fa:	f300 833e 	bgt.w	8207a <_svfprintf_r+0xffa>
   819fe:	3608      	adds	r6, #8
   81a00:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81a02:	1e6c      	subs	r4, r5, #1
   81a04:	2c00      	cmp	r4, #0
   81a06:	f77f adad 	ble.w	81564 <_svfprintf_r+0x4e4>
   81a0a:	2c10      	cmp	r4, #16
   81a0c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81a0e:	4d96      	ldr	r5, [pc, #600]	; (81c68 <_svfprintf_r+0xbe8>)
   81a10:	f340 8197 	ble.w	81d42 <_svfprintf_r+0xcc2>
   81a14:	2710      	movs	r7, #16
   81a16:	4662      	mov	r2, ip
   81a18:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81a1c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   81a20:	e004      	b.n	81a2c <_svfprintf_r+0x9ac>
   81a22:	3608      	adds	r6, #8
   81a24:	3c10      	subs	r4, #16
   81a26:	2c10      	cmp	r4, #16
   81a28:	f340 818a 	ble.w	81d40 <_svfprintf_r+0xcc0>
   81a2c:	3301      	adds	r3, #1
   81a2e:	3210      	adds	r2, #16
   81a30:	2b07      	cmp	r3, #7
   81a32:	922d      	str	r2, [sp, #180]	; 0xb4
   81a34:	932c      	str	r3, [sp, #176]	; 0xb0
   81a36:	e886 00a0 	stmia.w	r6, {r5, r7}
   81a3a:	ddf2      	ble.n	81a22 <_svfprintf_r+0x9a2>
   81a3c:	4640      	mov	r0, r8
   81a3e:	4651      	mov	r1, sl
   81a40:	aa2b      	add	r2, sp, #172	; 0xac
   81a42:	f002 ff75 	bl	84930 <__ssprint_r>
   81a46:	2800      	cmp	r0, #0
   81a48:	f47f ac32 	bne.w	812b0 <_svfprintf_r+0x230>
   81a4c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81a4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81a50:	ae38      	add	r6, sp, #224	; 0xe0
   81a52:	e7e7      	b.n	81a24 <_svfprintf_r+0x9a4>
   81a54:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
   81a56:	980b      	ldr	r0, [sp, #44]	; 0x2c
   81a58:	ebc0 0a05 	rsb	sl, r0, r5
   81a5c:	f1ba 0f00 	cmp.w	sl, #0
   81a60:	f77f ad2e 	ble.w	814c0 <_svfprintf_r+0x440>
   81a64:	f1ba 0f10 	cmp.w	sl, #16
   81a68:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81a6a:	4d7f      	ldr	r5, [pc, #508]	; (81c68 <_svfprintf_r+0xbe8>)
   81a6c:	dd2b      	ble.n	81ac6 <_svfprintf_r+0xa46>
   81a6e:	9412      	str	r4, [sp, #72]	; 0x48
   81a70:	4632      	mov	r2, r6
   81a72:	f04f 0b10 	mov.w	fp, #16
   81a76:	462e      	mov	r6, r5
   81a78:	4661      	mov	r1, ip
   81a7a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
   81a7c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   81a7e:	e006      	b.n	81a8e <_svfprintf_r+0xa0e>
   81a80:	f1aa 0a10 	sub.w	sl, sl, #16
   81a84:	f1ba 0f10 	cmp.w	sl, #16
   81a88:	f102 0208 	add.w	r2, r2, #8
   81a8c:	dd17      	ble.n	81abe <_svfprintf_r+0xa3e>
   81a8e:	3301      	adds	r3, #1
   81a90:	3110      	adds	r1, #16
   81a92:	2b07      	cmp	r3, #7
   81a94:	912d      	str	r1, [sp, #180]	; 0xb4
   81a96:	932c      	str	r3, [sp, #176]	; 0xb0
   81a98:	e882 0840 	stmia.w	r2, {r6, fp}
   81a9c:	ddf0      	ble.n	81a80 <_svfprintf_r+0xa00>
   81a9e:	4620      	mov	r0, r4
   81aa0:	4629      	mov	r1, r5
   81aa2:	aa2b      	add	r2, sp, #172	; 0xac
   81aa4:	f002 ff44 	bl	84930 <__ssprint_r>
   81aa8:	2800      	cmp	r0, #0
   81aaa:	f47f ac01 	bne.w	812b0 <_svfprintf_r+0x230>
   81aae:	f1aa 0a10 	sub.w	sl, sl, #16
   81ab2:	f1ba 0f10 	cmp.w	sl, #16
   81ab6:	992d      	ldr	r1, [sp, #180]	; 0xb4
   81ab8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81aba:	aa38      	add	r2, sp, #224	; 0xe0
   81abc:	dce7      	bgt.n	81a8e <_svfprintf_r+0xa0e>
   81abe:	9c12      	ldr	r4, [sp, #72]	; 0x48
   81ac0:	4635      	mov	r5, r6
   81ac2:	468c      	mov	ip, r1
   81ac4:	4616      	mov	r6, r2
   81ac6:	3301      	adds	r3, #1
   81ac8:	44d4      	add	ip, sl
   81aca:	2b07      	cmp	r3, #7
   81acc:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81ad0:	932c      	str	r3, [sp, #176]	; 0xb0
   81ad2:	e886 0420 	stmia.w	r6, {r5, sl}
   81ad6:	f300 820f 	bgt.w	81ef8 <_svfprintf_r+0xe78>
   81ada:	3608      	adds	r6, #8
   81adc:	e4f0      	b.n	814c0 <_svfprintf_r+0x440>
   81ade:	2d00      	cmp	r5, #0
   81ae0:	bf08      	it	eq
   81ae2:	2c0a      	cmpeq	r4, #10
   81ae4:	f080 8138 	bcs.w	81d58 <_svfprintf_r+0xcd8>
   81ae8:	3430      	adds	r4, #48	; 0x30
   81aea:	af48      	add	r7, sp, #288	; 0x120
   81aec:	f807 4d41 	strb.w	r4, [r7, #-65]!
   81af0:	9d08      	ldr	r5, [sp, #32]
   81af2:	1bec      	subs	r4, r5, r7
   81af4:	e452      	b.n	8139c <_svfprintf_r+0x31c>
   81af6:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81af8:	2c01      	cmp	r4, #1
   81afa:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81afc:	f340 81d2 	ble.w	81ea4 <_svfprintf_r+0xe24>
   81b00:	3401      	adds	r4, #1
   81b02:	f10c 0301 	add.w	r3, ip, #1
   81b06:	2201      	movs	r2, #1
   81b08:	2c07      	cmp	r4, #7
   81b0a:	932d      	str	r3, [sp, #180]	; 0xb4
   81b0c:	6037      	str	r7, [r6, #0]
   81b0e:	942c      	str	r4, [sp, #176]	; 0xb0
   81b10:	6072      	str	r2, [r6, #4]
   81b12:	f300 81d8 	bgt.w	81ec6 <_svfprintf_r+0xe46>
   81b16:	3608      	adds	r6, #8
   81b18:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81b1a:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   81b1e:	3401      	adds	r4, #1
   81b20:	6035      	str	r5, [r6, #0]
   81b22:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81b24:	4498      	add	r8, r3
   81b26:	2c07      	cmp	r4, #7
   81b28:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81b2c:	942c      	str	r4, [sp, #176]	; 0xb0
   81b2e:	6075      	str	r5, [r6, #4]
   81b30:	f300 81d5 	bgt.w	81ede <_svfprintf_r+0xe5e>
   81b34:	3608      	adds	r6, #8
   81b36:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
   81b3a:	2200      	movs	r2, #0
   81b3c:	2300      	movs	r3, #0
   81b3e:	f003 fc1b 	bl	85378 <__aeabi_dcmpeq>
   81b42:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81b44:	2800      	cmp	r0, #0
   81b46:	f040 80b9 	bne.w	81cbc <_svfprintf_r+0xc3c>
   81b4a:	1e6b      	subs	r3, r5, #1
   81b4c:	3401      	adds	r4, #1
   81b4e:	3701      	adds	r7, #1
   81b50:	4498      	add	r8, r3
   81b52:	2c07      	cmp	r4, #7
   81b54:	942c      	str	r4, [sp, #176]	; 0xb0
   81b56:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81b5a:	6037      	str	r7, [r6, #0]
   81b5c:	6073      	str	r3, [r6, #4]
   81b5e:	f300 80e2 	bgt.w	81d26 <_svfprintf_r+0xca6>
   81b62:	3608      	adds	r6, #8
   81b64:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
   81b68:	3401      	adds	r4, #1
   81b6a:	9d19      	ldr	r5, [sp, #100]	; 0x64
   81b6c:	44c4      	add	ip, r8
   81b6e:	ab27      	add	r3, sp, #156	; 0x9c
   81b70:	2c07      	cmp	r4, #7
   81b72:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81b76:	942c      	str	r4, [sp, #176]	; 0xb0
   81b78:	e886 0028 	stmia.w	r6, {r3, r5}
   81b7c:	f77f acf1 	ble.w	81562 <_svfprintf_r+0x4e2>
   81b80:	980d      	ldr	r0, [sp, #52]	; 0x34
   81b82:	990c      	ldr	r1, [sp, #48]	; 0x30
   81b84:	aa2b      	add	r2, sp, #172	; 0xac
   81b86:	f002 fed3 	bl	84930 <__ssprint_r>
   81b8a:	2800      	cmp	r0, #0
   81b8c:	f47f ab90 	bne.w	812b0 <_svfprintf_r+0x230>
   81b90:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81b94:	ae38      	add	r6, sp, #224	; 0xe0
   81b96:	e4e5      	b.n	81564 <_svfprintf_r+0x4e4>
   81b98:	980d      	ldr	r0, [sp, #52]	; 0x34
   81b9a:	990c      	ldr	r1, [sp, #48]	; 0x30
   81b9c:	aa2b      	add	r2, sp, #172	; 0xac
   81b9e:	f002 fec7 	bl	84930 <__ssprint_r>
   81ba2:	2800      	cmp	r0, #0
   81ba4:	f43f ad37 	beq.w	81616 <_svfprintf_r+0x596>
   81ba8:	f7ff bb82 	b.w	812b0 <_svfprintf_r+0x230>
   81bac:	980d      	ldr	r0, [sp, #52]	; 0x34
   81bae:	990c      	ldr	r1, [sp, #48]	; 0x30
   81bb0:	aa2b      	add	r2, sp, #172	; 0xac
   81bb2:	f002 febd 	bl	84930 <__ssprint_r>
   81bb6:	2800      	cmp	r0, #0
   81bb8:	f47f ab7a 	bne.w	812b0 <_svfprintf_r+0x230>
   81bbc:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81bc0:	ae38      	add	r6, sp, #224	; 0xe0
   81bc2:	e4bf      	b.n	81544 <_svfprintf_r+0x4c4>
   81bc4:	980d      	ldr	r0, [sp, #52]	; 0x34
   81bc6:	990c      	ldr	r1, [sp, #48]	; 0x30
   81bc8:	aa2b      	add	r2, sp, #172	; 0xac
   81bca:	f002 feb1 	bl	84930 <__ssprint_r>
   81bce:	2800      	cmp	r0, #0
   81bd0:	f47f ab6e 	bne.w	812b0 <_svfprintf_r+0x230>
   81bd4:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81bd8:	ae38      	add	r6, sp, #224	; 0xe0
   81bda:	e46d      	b.n	814b8 <_svfprintf_r+0x438>
   81bdc:	980d      	ldr	r0, [sp, #52]	; 0x34
   81bde:	990c      	ldr	r1, [sp, #48]	; 0x30
   81be0:	aa2b      	add	r2, sp, #172	; 0xac
   81be2:	f002 fea5 	bl	84930 <__ssprint_r>
   81be6:	2800      	cmp	r0, #0
   81be8:	f47f ab62 	bne.w	812b0 <_svfprintf_r+0x230>
   81bec:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81bf0:	ae38      	add	r6, sp, #224	; 0xe0
   81bf2:	e450      	b.n	81496 <_svfprintf_r+0x416>
   81bf4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   81bf6:	af38      	add	r7, sp, #224	; 0xe0
   81bf8:	f7ff bbd0 	b.w	8139c <_svfprintf_r+0x31c>
   81bfc:	2302      	movs	r3, #2
   81bfe:	f7ff bba9 	b.w	81354 <_svfprintf_r+0x2d4>
   81c02:	9b25      	ldr	r3, [sp, #148]	; 0x94
   81c04:	2b00      	cmp	r3, #0
   81c06:	f340 81dd 	ble.w	81fc4 <_svfprintf_r+0xf44>
   81c0a:	9c11      	ldr	r4, [sp, #68]	; 0x44
   81c0c:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81c0e:	f8dd a044 	ldr.w	sl, [sp, #68]	; 0x44
   81c12:	42ac      	cmp	r4, r5
   81c14:	bfa8      	it	ge
   81c16:	462c      	movge	r4, r5
   81c18:	2c00      	cmp	r4, #0
   81c1a:	44ba      	add	sl, r7
   81c1c:	dd0b      	ble.n	81c36 <_svfprintf_r+0xbb6>
   81c1e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c20:	44a4      	add	ip, r4
   81c22:	3301      	adds	r3, #1
   81c24:	2b07      	cmp	r3, #7
   81c26:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81c2a:	6037      	str	r7, [r6, #0]
   81c2c:	6074      	str	r4, [r6, #4]
   81c2e:	932c      	str	r3, [sp, #176]	; 0xb0
   81c30:	f300 831e 	bgt.w	82270 <_svfprintf_r+0x11f0>
   81c34:	3608      	adds	r6, #8
   81c36:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81c38:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
   81c3c:	1b2c      	subs	r4, r5, r4
   81c3e:	2c00      	cmp	r4, #0
   81c40:	f340 80d7 	ble.w	81df2 <_svfprintf_r+0xd72>
   81c44:	2c10      	cmp	r4, #16
   81c46:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c48:	4d07      	ldr	r5, [pc, #28]	; (81c68 <_svfprintf_r+0xbe8>)
   81c4a:	f340 81a3 	ble.w	81f94 <_svfprintf_r+0xf14>
   81c4e:	970a      	str	r7, [sp, #40]	; 0x28
   81c50:	f04f 0810 	mov.w	r8, #16
   81c54:	462f      	mov	r7, r5
   81c56:	4662      	mov	r2, ip
   81c58:	4625      	mov	r5, r4
   81c5a:	f8dd b034 	ldr.w	fp, [sp, #52]	; 0x34
   81c5e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
   81c60:	e009      	b.n	81c76 <_svfprintf_r+0xbf6>
   81c62:	bf00      	nop
   81c64:	00085a74 	.word	0x00085a74
   81c68:	00085a24 	.word	0x00085a24
   81c6c:	3608      	adds	r6, #8
   81c6e:	3d10      	subs	r5, #16
   81c70:	2d10      	cmp	r5, #16
   81c72:	f340 818b 	ble.w	81f8c <_svfprintf_r+0xf0c>
   81c76:	3301      	adds	r3, #1
   81c78:	3210      	adds	r2, #16
   81c7a:	2b07      	cmp	r3, #7
   81c7c:	922d      	str	r2, [sp, #180]	; 0xb4
   81c7e:	932c      	str	r3, [sp, #176]	; 0xb0
   81c80:	e886 0180 	stmia.w	r6, {r7, r8}
   81c84:	ddf2      	ble.n	81c6c <_svfprintf_r+0xbec>
   81c86:	4658      	mov	r0, fp
   81c88:	4621      	mov	r1, r4
   81c8a:	aa2b      	add	r2, sp, #172	; 0xac
   81c8c:	f002 fe50 	bl	84930 <__ssprint_r>
   81c90:	2800      	cmp	r0, #0
   81c92:	f47f ab0d 	bne.w	812b0 <_svfprintf_r+0x230>
   81c96:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81c98:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81c9a:	ae38      	add	r6, sp, #224	; 0xe0
   81c9c:	e7e7      	b.n	81c6e <_svfprintf_r+0xbee>
   81c9e:	980d      	ldr	r0, [sp, #52]	; 0x34
   81ca0:	990c      	ldr	r1, [sp, #48]	; 0x30
   81ca2:	aa2b      	add	r2, sp, #172	; 0xac
   81ca4:	f002 fe44 	bl	84930 <__ssprint_r>
   81ca8:	2800      	cmp	r0, #0
   81caa:	f47f ab01 	bne.w	812b0 <_svfprintf_r+0x230>
   81cae:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81cb2:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81cb6:	ae38      	add	r6, sp, #224	; 0xe0
   81cb8:	f7ff bbda 	b.w	81470 <_svfprintf_r+0x3f0>
   81cbc:	1e6f      	subs	r7, r5, #1
   81cbe:	2f00      	cmp	r7, #0
   81cc0:	f77f af50 	ble.w	81b64 <_svfprintf_r+0xae4>
   81cc4:	2f10      	cmp	r7, #16
   81cc6:	4dae      	ldr	r5, [pc, #696]	; (81f80 <_svfprintf_r+0xf00>)
   81cc8:	dd23      	ble.n	81d12 <_svfprintf_r+0xc92>
   81cca:	4643      	mov	r3, r8
   81ccc:	f04f 0a10 	mov.w	sl, #16
   81cd0:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81cd4:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
   81cd8:	e004      	b.n	81ce4 <_svfprintf_r+0xc64>
   81cda:	3f10      	subs	r7, #16
   81cdc:	2f10      	cmp	r7, #16
   81cde:	f106 0608 	add.w	r6, r6, #8
   81ce2:	dd15      	ble.n	81d10 <_svfprintf_r+0xc90>
   81ce4:	3401      	adds	r4, #1
   81ce6:	3310      	adds	r3, #16
   81ce8:	2c07      	cmp	r4, #7
   81cea:	932d      	str	r3, [sp, #180]	; 0xb4
   81cec:	942c      	str	r4, [sp, #176]	; 0xb0
   81cee:	e886 0420 	stmia.w	r6, {r5, sl}
   81cf2:	ddf2      	ble.n	81cda <_svfprintf_r+0xc5a>
   81cf4:	4640      	mov	r0, r8
   81cf6:	4659      	mov	r1, fp
   81cf8:	aa2b      	add	r2, sp, #172	; 0xac
   81cfa:	f002 fe19 	bl	84930 <__ssprint_r>
   81cfe:	2800      	cmp	r0, #0
   81d00:	f47f aad6 	bne.w	812b0 <_svfprintf_r+0x230>
   81d04:	3f10      	subs	r7, #16
   81d06:	2f10      	cmp	r7, #16
   81d08:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   81d0a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81d0c:	ae38      	add	r6, sp, #224	; 0xe0
   81d0e:	dce9      	bgt.n	81ce4 <_svfprintf_r+0xc64>
   81d10:	4698      	mov	r8, r3
   81d12:	3401      	adds	r4, #1
   81d14:	44b8      	add	r8, r7
   81d16:	2c07      	cmp	r4, #7
   81d18:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81d1c:	942c      	str	r4, [sp, #176]	; 0xb0
   81d1e:	e886 00a0 	stmia.w	r6, {r5, r7}
   81d22:	f77f af1e 	ble.w	81b62 <_svfprintf_r+0xae2>
   81d26:	980d      	ldr	r0, [sp, #52]	; 0x34
   81d28:	990c      	ldr	r1, [sp, #48]	; 0x30
   81d2a:	aa2b      	add	r2, sp, #172	; 0xac
   81d2c:	f002 fe00 	bl	84930 <__ssprint_r>
   81d30:	2800      	cmp	r0, #0
   81d32:	f47f aabd 	bne.w	812b0 <_svfprintf_r+0x230>
   81d36:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   81d3a:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81d3c:	ae38      	add	r6, sp, #224	; 0xe0
   81d3e:	e711      	b.n	81b64 <_svfprintf_r+0xae4>
   81d40:	4694      	mov	ip, r2
   81d42:	3301      	adds	r3, #1
   81d44:	44a4      	add	ip, r4
   81d46:	2b07      	cmp	r3, #7
   81d48:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81d4c:	932c      	str	r3, [sp, #176]	; 0xb0
   81d4e:	6035      	str	r5, [r6, #0]
   81d50:	6074      	str	r4, [r6, #4]
   81d52:	f77f ac06 	ble.w	81562 <_svfprintf_r+0x4e2>
   81d56:	e713      	b.n	81b80 <_svfprintf_r+0xb00>
   81d58:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
   81d5c:	4620      	mov	r0, r4
   81d5e:	4629      	mov	r1, r5
   81d60:	220a      	movs	r2, #10
   81d62:	2300      	movs	r3, #0
   81d64:	f003 fb62 	bl	8542c <__aeabi_uldivmod>
   81d68:	3230      	adds	r2, #48	; 0x30
   81d6a:	f88b 2000 	strb.w	r2, [fp]
   81d6e:	4620      	mov	r0, r4
   81d70:	4629      	mov	r1, r5
   81d72:	220a      	movs	r2, #10
   81d74:	2300      	movs	r3, #0
   81d76:	f003 fb59 	bl	8542c <__aeabi_uldivmod>
   81d7a:	4604      	mov	r4, r0
   81d7c:	460d      	mov	r5, r1
   81d7e:	ea54 0c05 	orrs.w	ip, r4, r5
   81d82:	465f      	mov	r7, fp
   81d84:	f10b 3bff 	add.w	fp, fp, #4294967295
   81d88:	d1e8      	bne.n	81d5c <_svfprintf_r+0xcdc>
   81d8a:	9d08      	ldr	r5, [sp, #32]
   81d8c:	1bec      	subs	r4, r5, r7
   81d8e:	f7ff bb05 	b.w	8139c <_svfprintf_r+0x31c>
   81d92:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81d94:	2301      	movs	r3, #1
   81d96:	682c      	ldr	r4, [r5, #0]
   81d98:	3504      	adds	r5, #4
   81d9a:	9510      	str	r5, [sp, #64]	; 0x40
   81d9c:	2500      	movs	r5, #0
   81d9e:	f7ff bad9 	b.w	81354 <_svfprintf_r+0x2d4>
   81da2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81da4:	682c      	ldr	r4, [r5, #0]
   81da6:	3504      	adds	r5, #4
   81da8:	9510      	str	r5, [sp, #64]	; 0x40
   81daa:	2500      	movs	r5, #0
   81dac:	f7ff bad2 	b.w	81354 <_svfprintf_r+0x2d4>
   81db0:	9d10      	ldr	r5, [sp, #64]	; 0x40
   81db2:	682c      	ldr	r4, [r5, #0]
   81db4:	3504      	adds	r5, #4
   81db6:	9510      	str	r5, [sp, #64]	; 0x40
   81db8:	17e5      	asrs	r5, r4, #31
   81dba:	4622      	mov	r2, r4
   81dbc:	462b      	mov	r3, r5
   81dbe:	2a00      	cmp	r2, #0
   81dc0:	f173 0c00 	sbcs.w	ip, r3, #0
   81dc4:	f6bf ac6c 	bge.w	816a0 <_svfprintf_r+0x620>
   81dc8:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   81dcc:	4264      	negs	r4, r4
   81dce:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
   81dd2:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   81dd6:	2301      	movs	r3, #1
   81dd8:	f7ff bac0 	b.w	8135c <_svfprintf_r+0x2dc>
   81ddc:	980d      	ldr	r0, [sp, #52]	; 0x34
   81dde:	990c      	ldr	r1, [sp, #48]	; 0x30
   81de0:	aa2b      	add	r2, sp, #172	; 0xac
   81de2:	f002 fda5 	bl	84930 <__ssprint_r>
   81de6:	2800      	cmp	r0, #0
   81de8:	f47f aa62 	bne.w	812b0 <_svfprintf_r+0x230>
   81dec:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81df0:	ae38      	add	r6, sp, #224	; 0xe0
   81df2:	9d14      	ldr	r5, [sp, #80]	; 0x50
   81df4:	9c25      	ldr	r4, [sp, #148]	; 0x94
   81df6:	442f      	add	r7, r5
   81df8:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81dfa:	42ac      	cmp	r4, r5
   81dfc:	db42      	blt.n	81e84 <_svfprintf_r+0xe04>
   81dfe:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81e00:	07e9      	lsls	r1, r5, #31
   81e02:	d43f      	bmi.n	81e84 <_svfprintf_r+0xe04>
   81e04:	9811      	ldr	r0, [sp, #68]	; 0x44
   81e06:	ebc7 050a 	rsb	r5, r7, sl
   81e0a:	1b04      	subs	r4, r0, r4
   81e0c:	42ac      	cmp	r4, r5
   81e0e:	bfb8      	it	lt
   81e10:	4625      	movlt	r5, r4
   81e12:	2d00      	cmp	r5, #0
   81e14:	dd0b      	ble.n	81e2e <_svfprintf_r+0xdae>
   81e16:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81e18:	44ac      	add	ip, r5
   81e1a:	3301      	adds	r3, #1
   81e1c:	2b07      	cmp	r3, #7
   81e1e:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81e22:	6037      	str	r7, [r6, #0]
   81e24:	6075      	str	r5, [r6, #4]
   81e26:	932c      	str	r3, [sp, #176]	; 0xb0
   81e28:	f300 824c 	bgt.w	822c4 <_svfprintf_r+0x1244>
   81e2c:	3608      	adds	r6, #8
   81e2e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
   81e32:	1b64      	subs	r4, r4, r5
   81e34:	2c00      	cmp	r4, #0
   81e36:	f77f ab95 	ble.w	81564 <_svfprintf_r+0x4e4>
   81e3a:	2c10      	cmp	r4, #16
   81e3c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81e3e:	4d50      	ldr	r5, [pc, #320]	; (81f80 <_svfprintf_r+0xf00>)
   81e40:	f77f af7f 	ble.w	81d42 <_svfprintf_r+0xcc2>
   81e44:	2710      	movs	r7, #16
   81e46:	4662      	mov	r2, ip
   81e48:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   81e4c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   81e50:	e004      	b.n	81e5c <_svfprintf_r+0xddc>
   81e52:	3608      	adds	r6, #8
   81e54:	3c10      	subs	r4, #16
   81e56:	2c10      	cmp	r4, #16
   81e58:	f77f af72 	ble.w	81d40 <_svfprintf_r+0xcc0>
   81e5c:	3301      	adds	r3, #1
   81e5e:	3210      	adds	r2, #16
   81e60:	2b07      	cmp	r3, #7
   81e62:	922d      	str	r2, [sp, #180]	; 0xb4
   81e64:	932c      	str	r3, [sp, #176]	; 0xb0
   81e66:	e886 00a0 	stmia.w	r6, {r5, r7}
   81e6a:	ddf2      	ble.n	81e52 <_svfprintf_r+0xdd2>
   81e6c:	4640      	mov	r0, r8
   81e6e:	4651      	mov	r1, sl
   81e70:	aa2b      	add	r2, sp, #172	; 0xac
   81e72:	f002 fd5d 	bl	84930 <__ssprint_r>
   81e76:	2800      	cmp	r0, #0
   81e78:	f47f aa1a 	bne.w	812b0 <_svfprintf_r+0x230>
   81e7c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
   81e7e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81e80:	ae38      	add	r6, sp, #224	; 0xe0
   81e82:	e7e7      	b.n	81e54 <_svfprintf_r+0xdd4>
   81e84:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81e86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81e88:	44ac      	add	ip, r5
   81e8a:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81e8c:	3301      	adds	r3, #1
   81e8e:	6035      	str	r5, [r6, #0]
   81e90:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81e92:	2b07      	cmp	r3, #7
   81e94:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81e98:	6075      	str	r5, [r6, #4]
   81e9a:	932c      	str	r3, [sp, #176]	; 0xb0
   81e9c:	f300 81f4 	bgt.w	82288 <_svfprintf_r+0x1208>
   81ea0:	3608      	adds	r6, #8
   81ea2:	e7af      	b.n	81e04 <_svfprintf_r+0xd84>
   81ea4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81ea6:	07ea      	lsls	r2, r5, #31
   81ea8:	f53f ae2a 	bmi.w	81b00 <_svfprintf_r+0xa80>
   81eac:	3401      	adds	r4, #1
   81eae:	f10c 0801 	add.w	r8, ip, #1
   81eb2:	2301      	movs	r3, #1
   81eb4:	2c07      	cmp	r4, #7
   81eb6:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
   81eba:	942c      	str	r4, [sp, #176]	; 0xb0
   81ebc:	6037      	str	r7, [r6, #0]
   81ebe:	6073      	str	r3, [r6, #4]
   81ec0:	f77f ae4f 	ble.w	81b62 <_svfprintf_r+0xae2>
   81ec4:	e72f      	b.n	81d26 <_svfprintf_r+0xca6>
   81ec6:	980d      	ldr	r0, [sp, #52]	; 0x34
   81ec8:	990c      	ldr	r1, [sp, #48]	; 0x30
   81eca:	aa2b      	add	r2, sp, #172	; 0xac
   81ecc:	f002 fd30 	bl	84930 <__ssprint_r>
   81ed0:	2800      	cmp	r0, #0
   81ed2:	f47f a9ed 	bne.w	812b0 <_svfprintf_r+0x230>
   81ed6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
   81ed8:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81eda:	ae38      	add	r6, sp, #224	; 0xe0
   81edc:	e61c      	b.n	81b18 <_svfprintf_r+0xa98>
   81ede:	980d      	ldr	r0, [sp, #52]	; 0x34
   81ee0:	990c      	ldr	r1, [sp, #48]	; 0x30
   81ee2:	aa2b      	add	r2, sp, #172	; 0xac
   81ee4:	f002 fd24 	bl	84930 <__ssprint_r>
   81ee8:	2800      	cmp	r0, #0
   81eea:	f47f a9e1 	bne.w	812b0 <_svfprintf_r+0x230>
   81eee:	f8dd 80b4 	ldr.w	r8, [sp, #180]	; 0xb4
   81ef2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
   81ef4:	ae38      	add	r6, sp, #224	; 0xe0
   81ef6:	e61e      	b.n	81b36 <_svfprintf_r+0xab6>
   81ef8:	980d      	ldr	r0, [sp, #52]	; 0x34
   81efa:	990c      	ldr	r1, [sp, #48]	; 0x30
   81efc:	aa2b      	add	r2, sp, #172	; 0xac
   81efe:	f002 fd17 	bl	84930 <__ssprint_r>
   81f02:	2800      	cmp	r0, #0
   81f04:	f47f a9d4 	bne.w	812b0 <_svfprintf_r+0x230>
   81f08:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81f0c:	ae38      	add	r6, sp, #224	; 0xe0
   81f0e:	f7ff bad7 	b.w	814c0 <_svfprintf_r+0x440>
   81f12:	f002 fcd3 	bl	848bc <__fpclassifyd>
   81f16:	2800      	cmp	r0, #0
   81f18:	f040 80bb 	bne.w	82092 <_svfprintf_r+0x1012>
   81f1c:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81f1e:	4f19      	ldr	r7, [pc, #100]	; (81f84 <_svfprintf_r+0xf04>)
   81f20:	4b19      	ldr	r3, [pc, #100]	; (81f88 <_svfprintf_r+0xf08>)
   81f22:	f04f 0c03 	mov.w	ip, #3
   81f26:	f024 0480 	bic.w	r4, r4, #128	; 0x80
   81f2a:	9409      	str	r4, [sp, #36]	; 0x24
   81f2c:	900a      	str	r0, [sp, #40]	; 0x28
   81f2e:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   81f32:	9014      	str	r0, [sp, #80]	; 0x50
   81f34:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   81f38:	bfd8      	it	le
   81f3a:	461f      	movle	r7, r3
   81f3c:	4664      	mov	r4, ip
   81f3e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   81f42:	f7ff ba34 	b.w	813ae <_svfprintf_r+0x32e>
   81f46:	9c09      	ldr	r4, [sp, #36]	; 0x24
   81f48:	0664      	lsls	r4, r4, #25
   81f4a:	f140 8150 	bpl.w	821ee <_svfprintf_r+0x116e>
   81f4e:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   81f52:	2500      	movs	r5, #0
   81f54:	f8bc 4000 	ldrh.w	r4, [ip]
   81f58:	f10c 0c04 	add.w	ip, ip, #4
   81f5c:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   81f60:	f7ff b9e4 	b.w	8132c <_svfprintf_r+0x2ac>
   81f64:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   81f68:	f01c 0f10 	tst.w	ip, #16
   81f6c:	f000 8146 	beq.w	821fc <_svfprintf_r+0x117c>
   81f70:	9c10      	ldr	r4, [sp, #64]	; 0x40
   81f72:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   81f74:	6823      	ldr	r3, [r4, #0]
   81f76:	3404      	adds	r4, #4
   81f78:	9410      	str	r4, [sp, #64]	; 0x40
   81f7a:	601d      	str	r5, [r3, #0]
   81f7c:	f7ff b8a6 	b.w	810cc <_svfprintf_r+0x4c>
   81f80:	00085a24 	.word	0x00085a24
   81f84:	00085a40 	.word	0x00085a40
   81f88:	00085a3c 	.word	0x00085a3c
   81f8c:	462c      	mov	r4, r5
   81f8e:	463d      	mov	r5, r7
   81f90:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   81f92:	4694      	mov	ip, r2
   81f94:	3301      	adds	r3, #1
   81f96:	44a4      	add	ip, r4
   81f98:	2b07      	cmp	r3, #7
   81f9a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81f9e:	932c      	str	r3, [sp, #176]	; 0xb0
   81fa0:	6035      	str	r5, [r6, #0]
   81fa2:	6074      	str	r4, [r6, #4]
   81fa4:	f73f af1a 	bgt.w	81ddc <_svfprintf_r+0xd5c>
   81fa8:	3608      	adds	r6, #8
   81faa:	e722      	b.n	81df2 <_svfprintf_r+0xd72>
   81fac:	980d      	ldr	r0, [sp, #52]	; 0x34
   81fae:	990c      	ldr	r1, [sp, #48]	; 0x30
   81fb0:	aa2b      	add	r2, sp, #172	; 0xac
   81fb2:	f002 fcbd 	bl	84930 <__ssprint_r>
   81fb6:	2800      	cmp	r0, #0
   81fb8:	f47f a97a 	bne.w	812b0 <_svfprintf_r+0x230>
   81fbc:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   81fc0:	ae38      	add	r6, sp, #224	; 0xe0
   81fc2:	e507      	b.n	819d4 <_svfprintf_r+0x954>
   81fc4:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
   81fc6:	49b7      	ldr	r1, [pc, #732]	; (822a4 <_svfprintf_r+0x1224>)
   81fc8:	3201      	adds	r2, #1
   81fca:	f10c 0c01 	add.w	ip, ip, #1
   81fce:	2001      	movs	r0, #1
   81fd0:	2a07      	cmp	r2, #7
   81fd2:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   81fd6:	922c      	str	r2, [sp, #176]	; 0xb0
   81fd8:	6031      	str	r1, [r6, #0]
   81fda:	6070      	str	r0, [r6, #4]
   81fdc:	f300 80f7 	bgt.w	821ce <_svfprintf_r+0x114e>
   81fe0:	3608      	adds	r6, #8
   81fe2:	461c      	mov	r4, r3
   81fe4:	b92c      	cbnz	r4, 81ff2 <_svfprintf_r+0xf72>
   81fe6:	9d11      	ldr	r5, [sp, #68]	; 0x44
   81fe8:	b91d      	cbnz	r5, 81ff2 <_svfprintf_r+0xf72>
   81fea:	9d09      	ldr	r5, [sp, #36]	; 0x24
   81fec:	07e8      	lsls	r0, r5, #31
   81fee:	f57f aab9 	bpl.w	81564 <_svfprintf_r+0x4e4>
   81ff2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   81ff4:	9d15      	ldr	r5, [sp, #84]	; 0x54
   81ff6:	9918      	ldr	r1, [sp, #96]	; 0x60
   81ff8:	3301      	adds	r3, #1
   81ffa:	6035      	str	r5, [r6, #0]
   81ffc:	9d18      	ldr	r5, [sp, #96]	; 0x60
   81ffe:	4461      	add	r1, ip
   82000:	2b07      	cmp	r3, #7
   82002:	912d      	str	r1, [sp, #180]	; 0xb4
   82004:	6075      	str	r5, [r6, #4]
   82006:	932c      	str	r3, [sp, #176]	; 0xb0
   82008:	f300 81de 	bgt.w	823c8 <_svfprintf_r+0x1348>
   8200c:	f106 0208 	add.w	r2, r6, #8
   82010:	4264      	negs	r4, r4
   82012:	2c00      	cmp	r4, #0
   82014:	f340 810b 	ble.w	8222e <_svfprintf_r+0x11ae>
   82018:	2c10      	cmp	r4, #16
   8201a:	4da3      	ldr	r5, [pc, #652]	; (822a8 <_svfprintf_r+0x1228>)
   8201c:	f340 8148 	ble.w	822b0 <_svfprintf_r+0x1230>
   82020:	46a3      	mov	fp, r4
   82022:	2610      	movs	r6, #16
   82024:	460c      	mov	r4, r1
   82026:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
   8202a:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
   8202e:	e006      	b.n	8203e <_svfprintf_r+0xfbe>
   82030:	3208      	adds	r2, #8
   82032:	f1ab 0b10 	sub.w	fp, fp, #16
   82036:	f1bb 0f10 	cmp.w	fp, #16
   8203a:	f340 8137 	ble.w	822ac <_svfprintf_r+0x122c>
   8203e:	3301      	adds	r3, #1
   82040:	3410      	adds	r4, #16
   82042:	2b07      	cmp	r3, #7
   82044:	942d      	str	r4, [sp, #180]	; 0xb4
   82046:	932c      	str	r3, [sp, #176]	; 0xb0
   82048:	e882 0060 	stmia.w	r2, {r5, r6}
   8204c:	ddf0      	ble.n	82030 <_svfprintf_r+0xfb0>
   8204e:	4640      	mov	r0, r8
   82050:	4651      	mov	r1, sl
   82052:	aa2b      	add	r2, sp, #172	; 0xac
   82054:	f002 fc6c 	bl	84930 <__ssprint_r>
   82058:	2800      	cmp	r0, #0
   8205a:	f47f a929 	bne.w	812b0 <_svfprintf_r+0x230>
   8205e:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
   82060:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   82062:	aa38      	add	r2, sp, #224	; 0xe0
   82064:	e7e5      	b.n	82032 <_svfprintf_r+0xfb2>
   82066:	9c09      	ldr	r4, [sp, #36]	; 0x24
   82068:	f109 0901 	add.w	r9, r9, #1
   8206c:	f044 0420 	orr.w	r4, r4, #32
   82070:	9409      	str	r4, [sp, #36]	; 0x24
   82072:	f893 8001 	ldrb.w	r8, [r3, #1]
   82076:	f7ff b85f 	b.w	81138 <_svfprintf_r+0xb8>
   8207a:	980d      	ldr	r0, [sp, #52]	; 0x34
   8207c:	990c      	ldr	r1, [sp, #48]	; 0x30
   8207e:	aa2b      	add	r2, sp, #172	; 0xac
   82080:	f002 fc56 	bl	84930 <__ssprint_r>
   82084:	2800      	cmp	r0, #0
   82086:	f47f a913 	bne.w	812b0 <_svfprintf_r+0x230>
   8208a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8208e:	ae38      	add	r6, sp, #224	; 0xe0
   82090:	e4b6      	b.n	81a00 <_svfprintf_r+0x980>
   82092:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82094:	f028 0a20 	bic.w	sl, r8, #32
   82098:	3501      	adds	r5, #1
   8209a:	f000 80a5 	beq.w	821e8 <_svfprintf_r+0x1168>
   8209e:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   820a2:	d104      	bne.n	820ae <_svfprintf_r+0x102e>
   820a4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   820a6:	2d00      	cmp	r5, #0
   820a8:	bf08      	it	eq
   820aa:	2501      	moveq	r5, #1
   820ac:	950a      	str	r5, [sp, #40]	; 0x28
   820ae:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   820b2:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
   820b6:	f44c 7c80 	orr.w	ip, ip, #256	; 0x100
   820ba:	2b00      	cmp	r3, #0
   820bc:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
   820c0:	f2c0 819c 	blt.w	823fc <_svfprintf_r+0x137c>
   820c4:	e9dd 4516 	ldrd	r4, r5, [sp, #88]	; 0x58
   820c8:	e9cd 4520 	strd	r4, r5, [sp, #128]	; 0x80
   820cc:	f04f 0b00 	mov.w	fp, #0
   820d0:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   820d4:	f000 819b 	beq.w	8240e <_svfprintf_r+0x138e>
   820d8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
   820dc:	f000 81a9 	beq.w	82432 <_svfprintf_r+0x13b2>
   820e0:	f1ba 0f45 	cmp.w	sl, #69	; 0x45
   820e4:	bf0a      	itet	eq
   820e6:	9c0a      	ldreq	r4, [sp, #40]	; 0x28
   820e8:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
   820ea:	1c65      	addeq	r5, r4, #1
   820ec:	2002      	movs	r0, #2
   820ee:	a925      	add	r1, sp, #148	; 0x94
   820f0:	aa26      	add	r2, sp, #152	; 0x98
   820f2:	ab29      	add	r3, sp, #164	; 0xa4
   820f4:	e88d 0021 	stmia.w	sp, {r0, r5}
   820f8:	9203      	str	r2, [sp, #12]
   820fa:	9304      	str	r3, [sp, #16]
   820fc:	9102      	str	r1, [sp, #8]
   820fe:	980d      	ldr	r0, [sp, #52]	; 0x34
   82100:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82104:	f000 fad8 	bl	826b8 <_dtoa_r>
   82108:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
   8210c:	4607      	mov	r7, r0
   8210e:	d002      	beq.n	82116 <_svfprintf_r+0x1096>
   82110:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
   82114:	d105      	bne.n	82122 <_svfprintf_r+0x10a2>
   82116:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   8211a:	f01c 0f01 	tst.w	ip, #1
   8211e:	f000 819c 	beq.w	8245a <_svfprintf_r+0x13da>
   82122:	f1ba 0f46 	cmp.w	sl, #70	; 0x46
   82126:	eb07 0405 	add.w	r4, r7, r5
   8212a:	f000 811c 	beq.w	82366 <_svfprintf_r+0x12e6>
   8212e:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   82132:	2200      	movs	r2, #0
   82134:	2300      	movs	r3, #0
   82136:	f003 f91f 	bl	85378 <__aeabi_dcmpeq>
   8213a:	2800      	cmp	r0, #0
   8213c:	f040 8105 	bne.w	8234a <_svfprintf_r+0x12ca>
   82140:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82142:	429c      	cmp	r4, r3
   82144:	d906      	bls.n	82154 <_svfprintf_r+0x10d4>
   82146:	2130      	movs	r1, #48	; 0x30
   82148:	1c5a      	adds	r2, r3, #1
   8214a:	9229      	str	r2, [sp, #164]	; 0xa4
   8214c:	7019      	strb	r1, [r3, #0]
   8214e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   82150:	429c      	cmp	r4, r3
   82152:	d8f9      	bhi.n	82148 <_svfprintf_r+0x10c8>
   82154:	1bdb      	subs	r3, r3, r7
   82156:	f1ba 0f47 	cmp.w	sl, #71	; 0x47
   8215a:	9311      	str	r3, [sp, #68]	; 0x44
   8215c:	f000 80ed 	beq.w	8233a <_svfprintf_r+0x12ba>
   82160:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
   82164:	f340 81f2 	ble.w	8254c <_svfprintf_r+0x14cc>
   82168:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
   8216c:	f000 8168 	beq.w	82440 <_svfprintf_r+0x13c0>
   82170:	9c25      	ldr	r4, [sp, #148]	; 0x94
   82172:	9414      	str	r4, [sp, #80]	; 0x50
   82174:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82176:	9d14      	ldr	r5, [sp, #80]	; 0x50
   82178:	42ac      	cmp	r4, r5
   8217a:	f300 8132 	bgt.w	823e2 <_svfprintf_r+0x1362>
   8217e:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82182:	f01c 0f01 	tst.w	ip, #1
   82186:	f040 81ad 	bne.w	824e4 <_svfprintf_r+0x1464>
   8218a:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
   8218e:	462c      	mov	r4, r5
   82190:	f04f 0867 	mov.w	r8, #103	; 0x67
   82194:	f1bb 0f00 	cmp.w	fp, #0
   82198:	f040 80b2 	bne.w	82300 <_svfprintf_r+0x1280>
   8219c:	9d12      	ldr	r5, [sp, #72]	; 0x48
   8219e:	930b      	str	r3, [sp, #44]	; 0x2c
   821a0:	9509      	str	r5, [sp, #36]	; 0x24
   821a2:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
   821a6:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   821aa:	f7ff b900 	b.w	813ae <_svfprintf_r+0x32e>
   821ae:	980d      	ldr	r0, [sp, #52]	; 0x34
   821b0:	2140      	movs	r1, #64	; 0x40
   821b2:	f001 fad3 	bl	8375c <_malloc_r>
   821b6:	6020      	str	r0, [r4, #0]
   821b8:	6120      	str	r0, [r4, #16]
   821ba:	2800      	cmp	r0, #0
   821bc:	f000 81bf 	beq.w	8253e <_svfprintf_r+0x14be>
   821c0:	f8dd c030 	ldr.w	ip, [sp, #48]	; 0x30
   821c4:	2340      	movs	r3, #64	; 0x40
   821c6:	f8cc 3014 	str.w	r3, [ip, #20]
   821ca:	f7fe bf6f 	b.w	810ac <_svfprintf_r+0x2c>
   821ce:	980d      	ldr	r0, [sp, #52]	; 0x34
   821d0:	990c      	ldr	r1, [sp, #48]	; 0x30
   821d2:	aa2b      	add	r2, sp, #172	; 0xac
   821d4:	f002 fbac 	bl	84930 <__ssprint_r>
   821d8:	2800      	cmp	r0, #0
   821da:	f47f a869 	bne.w	812b0 <_svfprintf_r+0x230>
   821de:	9c25      	ldr	r4, [sp, #148]	; 0x94
   821e0:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   821e4:	ae38      	add	r6, sp, #224	; 0xe0
   821e6:	e6fd      	b.n	81fe4 <_svfprintf_r+0xf64>
   821e8:	2406      	movs	r4, #6
   821ea:	940a      	str	r4, [sp, #40]	; 0x28
   821ec:	e75f      	b.n	820ae <_svfprintf_r+0x102e>
   821ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
   821f0:	682c      	ldr	r4, [r5, #0]
   821f2:	3504      	adds	r5, #4
   821f4:	9510      	str	r5, [sp, #64]	; 0x40
   821f6:	2500      	movs	r5, #0
   821f8:	f7ff b898 	b.w	8132c <_svfprintf_r+0x2ac>
   821fc:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82200:	f01c 0f40 	tst.w	ip, #64	; 0x40
   82204:	f000 8087 	beq.w	82316 <_svfprintf_r+0x1296>
   82208:	9c10      	ldr	r4, [sp, #64]	; 0x40
   8220a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   8220c:	6823      	ldr	r3, [r4, #0]
   8220e:	3404      	adds	r4, #4
   82210:	9410      	str	r4, [sp, #64]	; 0x40
   82212:	801d      	strh	r5, [r3, #0]
   82214:	f7fe bf5a 	b.w	810cc <_svfprintf_r+0x4c>
   82218:	980d      	ldr	r0, [sp, #52]	; 0x34
   8221a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8221c:	aa2b      	add	r2, sp, #172	; 0xac
   8221e:	f002 fb87 	bl	84930 <__ssprint_r>
   82222:	2800      	cmp	r0, #0
   82224:	f47f a844 	bne.w	812b0 <_svfprintf_r+0x230>
   82228:	992d      	ldr	r1, [sp, #180]	; 0xb4
   8222a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   8222c:	aa38      	add	r2, sp, #224	; 0xe0
   8222e:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
   82232:	3301      	adds	r3, #1
   82234:	9c11      	ldr	r4, [sp, #68]	; 0x44
   82236:	448c      	add	ip, r1
   82238:	2b07      	cmp	r3, #7
   8223a:	f8cd c0b4 	str.w	ip, [sp, #180]	; 0xb4
   8223e:	932c      	str	r3, [sp, #176]	; 0xb0
   82240:	6017      	str	r7, [r2, #0]
   82242:	6054      	str	r4, [r2, #4]
   82244:	f73f ac9c 	bgt.w	81b80 <_svfprintf_r+0xb00>
   82248:	f102 0608 	add.w	r6, r2, #8
   8224c:	f7ff b98a 	b.w	81564 <_svfprintf_r+0x4e4>
   82250:	f8cd a028 	str.w	sl, [sp, #40]	; 0x28
   82254:	f7fe fee4 	bl	81020 <strlen>
   82258:	9510      	str	r5, [sp, #64]	; 0x40
   8225a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8225c:	ea20 7ce0 	bic.w	ip, r0, r0, asr #31
   82260:	4604      	mov	r4, r0
   82262:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82266:	9514      	str	r5, [sp, #80]	; 0x50
   82268:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   8226c:	f7ff b89f 	b.w	813ae <_svfprintf_r+0x32e>
   82270:	980d      	ldr	r0, [sp, #52]	; 0x34
   82272:	990c      	ldr	r1, [sp, #48]	; 0x30
   82274:	aa2b      	add	r2, sp, #172	; 0xac
   82276:	f002 fb5b 	bl	84930 <__ssprint_r>
   8227a:	2800      	cmp	r0, #0
   8227c:	f47f a818 	bne.w	812b0 <_svfprintf_r+0x230>
   82280:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   82284:	ae38      	add	r6, sp, #224	; 0xe0
   82286:	e4d6      	b.n	81c36 <_svfprintf_r+0xbb6>
   82288:	980d      	ldr	r0, [sp, #52]	; 0x34
   8228a:	990c      	ldr	r1, [sp, #48]	; 0x30
   8228c:	aa2b      	add	r2, sp, #172	; 0xac
   8228e:	f002 fb4f 	bl	84930 <__ssprint_r>
   82292:	2800      	cmp	r0, #0
   82294:	f47f a80c 	bne.w	812b0 <_svfprintf_r+0x230>
   82298:	9c25      	ldr	r4, [sp, #148]	; 0x94
   8229a:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   8229e:	ae38      	add	r6, sp, #224	; 0xe0
   822a0:	e5b0      	b.n	81e04 <_svfprintf_r+0xd84>
   822a2:	bf00      	nop
   822a4:	00085a74 	.word	0x00085a74
   822a8:	00085a24 	.word	0x00085a24
   822ac:	4621      	mov	r1, r4
   822ae:	465c      	mov	r4, fp
   822b0:	3301      	adds	r3, #1
   822b2:	4421      	add	r1, r4
   822b4:	2b07      	cmp	r3, #7
   822b6:	912d      	str	r1, [sp, #180]	; 0xb4
   822b8:	932c      	str	r3, [sp, #176]	; 0xb0
   822ba:	6015      	str	r5, [r2, #0]
   822bc:	6054      	str	r4, [r2, #4]
   822be:	dcab      	bgt.n	82218 <_svfprintf_r+0x1198>
   822c0:	3208      	adds	r2, #8
   822c2:	e7b4      	b.n	8222e <_svfprintf_r+0x11ae>
   822c4:	980d      	ldr	r0, [sp, #52]	; 0x34
   822c6:	990c      	ldr	r1, [sp, #48]	; 0x30
   822c8:	aa2b      	add	r2, sp, #172	; 0xac
   822ca:	f002 fb31 	bl	84930 <__ssprint_r>
   822ce:	2800      	cmp	r0, #0
   822d0:	f47e afee 	bne.w	812b0 <_svfprintf_r+0x230>
   822d4:	9c25      	ldr	r4, [sp, #148]	; 0x94
   822d6:	9911      	ldr	r1, [sp, #68]	; 0x44
   822d8:	f8dd c0b4 	ldr.w	ip, [sp, #180]	; 0xb4
   822dc:	1b0c      	subs	r4, r1, r4
   822de:	ae38      	add	r6, sp, #224	; 0xe0
   822e0:	e5a5      	b.n	81e2e <_svfprintf_r+0xdae>
   822e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   822e4:	46ba      	mov	sl, r7
   822e6:	2c06      	cmp	r4, #6
   822e8:	bf28      	it	cs
   822ea:	2406      	movcs	r4, #6
   822ec:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   822f0:	970a      	str	r7, [sp, #40]	; 0x28
   822f2:	9714      	str	r7, [sp, #80]	; 0x50
   822f4:	9510      	str	r5, [sp, #64]	; 0x40
   822f6:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   822fa:	4f97      	ldr	r7, [pc, #604]	; (82558 <_svfprintf_r+0x14d8>)
   822fc:	f7ff b857 	b.w	813ae <_svfprintf_r+0x32e>
   82300:	9d12      	ldr	r5, [sp, #72]	; 0x48
   82302:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82306:	9509      	str	r5, [sp, #36]	; 0x24
   82308:	2500      	movs	r5, #0
   8230a:	930b      	str	r3, [sp, #44]	; 0x2c
   8230c:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82310:	950a      	str	r5, [sp, #40]	; 0x28
   82312:	f7ff b84f 	b.w	813b4 <_svfprintf_r+0x334>
   82316:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   8231a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
   8231c:	f8dc 3000 	ldr.w	r3, [ip]
   82320:	f10c 0c04 	add.w	ip, ip, #4
   82324:	f8cd c040 	str.w	ip, [sp, #64]	; 0x40
   82328:	601c      	str	r4, [r3, #0]
   8232a:	f7fe becf 	b.w	810cc <_svfprintf_r+0x4c>
   8232e:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
   82332:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
   82336:	f7ff ba99 	b.w	8186c <_svfprintf_r+0x7ec>
   8233a:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8233c:	1cdc      	adds	r4, r3, #3
   8233e:	db19      	blt.n	82374 <_svfprintf_r+0x12f4>
   82340:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82342:	429c      	cmp	r4, r3
   82344:	db16      	blt.n	82374 <_svfprintf_r+0x12f4>
   82346:	9314      	str	r3, [sp, #80]	; 0x50
   82348:	e714      	b.n	82174 <_svfprintf_r+0x10f4>
   8234a:	4623      	mov	r3, r4
   8234c:	e702      	b.n	82154 <_svfprintf_r+0x10d4>
   8234e:	ea24 7ce4 	bic.w	ip, r4, r4, asr #31
   82352:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
   82356:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82358:	9510      	str	r5, [sp, #64]	; 0x40
   8235a:	900a      	str	r0, [sp, #40]	; 0x28
   8235c:	9014      	str	r0, [sp, #80]	; 0x50
   8235e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
   82362:	f7ff b824 	b.w	813ae <_svfprintf_r+0x32e>
   82366:	783b      	ldrb	r3, [r7, #0]
   82368:	2b30      	cmp	r3, #48	; 0x30
   8236a:	f000 80ad 	beq.w	824c8 <_svfprintf_r+0x1448>
   8236e:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82370:	442c      	add	r4, r5
   82372:	e6dc      	b.n	8212e <_svfprintf_r+0x10ae>
   82374:	f1a8 0802 	sub.w	r8, r8, #2
   82378:	1e59      	subs	r1, r3, #1
   8237a:	2900      	cmp	r1, #0
   8237c:	9125      	str	r1, [sp, #148]	; 0x94
   8237e:	bfba      	itte	lt
   82380:	4249      	neglt	r1, r1
   82382:	232d      	movlt	r3, #45	; 0x2d
   82384:	232b      	movge	r3, #43	; 0x2b
   82386:	2909      	cmp	r1, #9
   82388:	f88d 809c 	strb.w	r8, [sp, #156]	; 0x9c
   8238c:	f88d 309d 	strb.w	r3, [sp, #157]	; 0x9d
   82390:	dc65      	bgt.n	8245e <_svfprintf_r+0x13de>
   82392:	2330      	movs	r3, #48	; 0x30
   82394:	3130      	adds	r1, #48	; 0x30
   82396:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
   8239a:	f88d 109f 	strb.w	r1, [sp, #159]	; 0x9f
   8239e:	ab28      	add	r3, sp, #160	; 0xa0
   823a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
   823a2:	aa27      	add	r2, sp, #156	; 0x9c
   823a4:	9c11      	ldr	r4, [sp, #68]	; 0x44
   823a6:	1a9a      	subs	r2, r3, r2
   823a8:	2d01      	cmp	r5, #1
   823aa:	9219      	str	r2, [sp, #100]	; 0x64
   823ac:	4414      	add	r4, r2
   823ae:	f340 80b7 	ble.w	82520 <_svfprintf_r+0x14a0>
   823b2:	3401      	adds	r4, #1
   823b4:	2500      	movs	r5, #0
   823b6:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   823ba:	9514      	str	r5, [sp, #80]	; 0x50
   823bc:	e6ea      	b.n	82194 <_svfprintf_r+0x1114>
   823be:	2400      	movs	r4, #0
   823c0:	4681      	mov	r9, r0
   823c2:	940a      	str	r4, [sp, #40]	; 0x28
   823c4:	f7fe beba 	b.w	8113c <_svfprintf_r+0xbc>
   823c8:	980d      	ldr	r0, [sp, #52]	; 0x34
   823ca:	990c      	ldr	r1, [sp, #48]	; 0x30
   823cc:	aa2b      	add	r2, sp, #172	; 0xac
   823ce:	f002 faaf 	bl	84930 <__ssprint_r>
   823d2:	2800      	cmp	r0, #0
   823d4:	f47e af6c 	bne.w	812b0 <_svfprintf_r+0x230>
   823d8:	9c25      	ldr	r4, [sp, #148]	; 0x94
   823da:	992d      	ldr	r1, [sp, #180]	; 0xb4
   823dc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
   823de:	aa38      	add	r2, sp, #224	; 0xe0
   823e0:	e616      	b.n	82010 <_svfprintf_r+0xf90>
   823e2:	9c14      	ldr	r4, [sp, #80]	; 0x50
   823e4:	9d11      	ldr	r5, [sp, #68]	; 0x44
   823e6:	2c00      	cmp	r4, #0
   823e8:	bfd4      	ite	le
   823ea:	f1c4 0402 	rsble	r4, r4, #2
   823ee:	2401      	movgt	r4, #1
   823f0:	442c      	add	r4, r5
   823f2:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   823f6:	f04f 0867 	mov.w	r8, #103	; 0x67
   823fa:	e6cb      	b.n	82194 <_svfprintf_r+0x1114>
   823fc:	9917      	ldr	r1, [sp, #92]	; 0x5c
   823fe:	9816      	ldr	r0, [sp, #88]	; 0x58
   82400:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
   82404:	9020      	str	r0, [sp, #128]	; 0x80
   82406:	9121      	str	r1, [sp, #132]	; 0x84
   82408:	f04f 0b2d 	mov.w	fp, #45	; 0x2d
   8240c:	e660      	b.n	820d0 <_svfprintf_r+0x1050>
   8240e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82410:	2003      	movs	r0, #3
   82412:	a925      	add	r1, sp, #148	; 0x94
   82414:	aa26      	add	r2, sp, #152	; 0x98
   82416:	ab29      	add	r3, sp, #164	; 0xa4
   82418:	9501      	str	r5, [sp, #4]
   8241a:	9000      	str	r0, [sp, #0]
   8241c:	9203      	str	r2, [sp, #12]
   8241e:	9304      	str	r3, [sp, #16]
   82420:	9102      	str	r1, [sp, #8]
   82422:	980d      	ldr	r0, [sp, #52]	; 0x34
   82424:	e9dd 2320 	ldrd	r2, r3, [sp, #128]	; 0x80
   82428:	f000 f946 	bl	826b8 <_dtoa_r>
   8242c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   8242e:	4607      	mov	r7, r0
   82430:	e677      	b.n	82122 <_svfprintf_r+0x10a2>
   82432:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82434:	2003      	movs	r0, #3
   82436:	a925      	add	r1, sp, #148	; 0x94
   82438:	aa26      	add	r2, sp, #152	; 0x98
   8243a:	ab29      	add	r3, sp, #164	; 0xa4
   8243c:	9401      	str	r4, [sp, #4]
   8243e:	e7ec      	b.n	8241a <_svfprintf_r+0x139a>
   82440:	9d25      	ldr	r5, [sp, #148]	; 0x94
   82442:	9c0a      	ldr	r4, [sp, #40]	; 0x28
   82444:	2d00      	cmp	r5, #0
   82446:	9514      	str	r5, [sp, #80]	; 0x50
   82448:	dd63      	ble.n	82512 <_svfprintf_r+0x1492>
   8244a:	bbb4      	cbnz	r4, 824ba <_svfprintf_r+0x143a>
   8244c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8244e:	07e8      	lsls	r0, r5, #31
   82450:	d433      	bmi.n	824ba <_svfprintf_r+0x143a>
   82452:	9c14      	ldr	r4, [sp, #80]	; 0x50
   82454:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82458:	e69c      	b.n	82194 <_svfprintf_r+0x1114>
   8245a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
   8245c:	e67a      	b.n	82154 <_svfprintf_r+0x10d4>
   8245e:	f10d 02aa 	add.w	r2, sp, #170	; 0xaa
   82462:	4d3e      	ldr	r5, [pc, #248]	; (8255c <_svfprintf_r+0x14dc>)
   82464:	17cb      	asrs	r3, r1, #31
   82466:	fb85 5001 	smull	r5, r0, r5, r1
   8246a:	ebc3 00a0 	rsb	r0, r3, r0, asr #2
   8246e:	eb00 0380 	add.w	r3, r0, r0, lsl #2
   82472:	eba1 0143 	sub.w	r1, r1, r3, lsl #1
   82476:	2809      	cmp	r0, #9
   82478:	4613      	mov	r3, r2
   8247a:	f101 0230 	add.w	r2, r1, #48	; 0x30
   8247e:	701a      	strb	r2, [r3, #0]
   82480:	4601      	mov	r1, r0
   82482:	f103 32ff 	add.w	r2, r3, #4294967295
   82486:	dcec      	bgt.n	82462 <_svfprintf_r+0x13e2>
   82488:	f100 0130 	add.w	r1, r0, #48	; 0x30
   8248c:	f10d 04ab 	add.w	r4, sp, #171	; 0xab
   82490:	b2c9      	uxtb	r1, r1
   82492:	4294      	cmp	r4, r2
   82494:	f803 1c01 	strb.w	r1, [r3, #-1]
   82498:	d95a      	bls.n	82550 <_svfprintf_r+0x14d0>
   8249a:	f10d 009d 	add.w	r0, sp, #157	; 0x9d
   8249e:	461a      	mov	r2, r3
   824a0:	e001      	b.n	824a6 <_svfprintf_r+0x1426>
   824a2:	f812 1b01 	ldrb.w	r1, [r2], #1
   824a6:	42a2      	cmp	r2, r4
   824a8:	f800 1f01 	strb.w	r1, [r0, #1]!
   824ac:	d1f9      	bne.n	824a2 <_svfprintf_r+0x1422>
   824ae:	f50d 7c90 	add.w	ip, sp, #288	; 0x120
   824b2:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
   824b6:	3bf6      	subs	r3, #246	; 0xf6
   824b8:	e772      	b.n	823a0 <_svfprintf_r+0x1320>
   824ba:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   824bc:	1c6c      	adds	r4, r5, #1
   824be:	9d14      	ldr	r5, [sp, #80]	; 0x50
   824c0:	442c      	add	r4, r5
   824c2:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   824c6:	e665      	b.n	82194 <_svfprintf_r+0x1114>
   824c8:	e9dd 0120 	ldrd	r0, r1, [sp, #128]	; 0x80
   824cc:	2200      	movs	r2, #0
   824ce:	2300      	movs	r3, #0
   824d0:	f002 ff52 	bl	85378 <__aeabi_dcmpeq>
   824d4:	2800      	cmp	r0, #0
   824d6:	f47f af4a 	bne.w	8236e <_svfprintf_r+0x12ee>
   824da:	f1c5 0501 	rsb	r5, r5, #1
   824de:	9525      	str	r5, [sp, #148]	; 0x94
   824e0:	442c      	add	r4, r5
   824e2:	e624      	b.n	8212e <_svfprintf_r+0x10ae>
   824e4:	9d14      	ldr	r5, [sp, #80]	; 0x50
   824e6:	f04f 0867 	mov.w	r8, #103	; 0x67
   824ea:	1c6c      	adds	r4, r5, #1
   824ec:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   824f0:	e650      	b.n	82194 <_svfprintf_r+0x1114>
   824f2:	9d10      	ldr	r5, [sp, #64]	; 0x40
   824f4:	f8dd c040 	ldr.w	ip, [sp, #64]	; 0x40
   824f8:	682d      	ldr	r5, [r5, #0]
   824fa:	f10c 0304 	add.w	r3, ip, #4
   824fe:	2d00      	cmp	r5, #0
   82500:	f899 8001 	ldrb.w	r8, [r9, #1]
   82504:	950a      	str	r5, [sp, #40]	; 0x28
   82506:	9310      	str	r3, [sp, #64]	; 0x40
   82508:	4681      	mov	r9, r0
   8250a:	f6be ae15 	bge.w	81138 <_svfprintf_r+0xb8>
   8250e:	f7fe be10 	b.w	81132 <_svfprintf_r+0xb2>
   82512:	b97c      	cbnz	r4, 82534 <_svfprintf_r+0x14b4>
   82514:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82516:	07e9      	lsls	r1, r5, #31
   82518:	d40c      	bmi.n	82534 <_svfprintf_r+0x14b4>
   8251a:	2301      	movs	r3, #1
   8251c:	461c      	mov	r4, r3
   8251e:	e639      	b.n	82194 <_svfprintf_r+0x1114>
   82520:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
   82524:	f01c 0301 	ands.w	r3, ip, #1
   82528:	f47f af43 	bne.w	823b2 <_svfprintf_r+0x1332>
   8252c:	9314      	str	r3, [sp, #80]	; 0x50
   8252e:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   82532:	e62f      	b.n	82194 <_svfprintf_r+0x1114>
   82534:	9d0a      	ldr	r5, [sp, #40]	; 0x28
   82536:	1cac      	adds	r4, r5, #2
   82538:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
   8253c:	e62a      	b.n	82194 <_svfprintf_r+0x1114>
   8253e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
   82540:	230c      	movs	r3, #12
   82542:	602b      	str	r3, [r5, #0]
   82544:	f04f 30ff 	mov.w	r0, #4294967295
   82548:	f7fe beba 	b.w	812c0 <_svfprintf_r+0x240>
   8254c:	9b25      	ldr	r3, [sp, #148]	; 0x94
   8254e:	e713      	b.n	82378 <_svfprintf_r+0x12f8>
   82550:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
   82554:	e724      	b.n	823a0 <_svfprintf_r+0x1320>
   82556:	bf00      	nop
   82558:	00085a6c 	.word	0x00085a6c
   8255c:	66666667 	.word	0x66666667

00082560 <register_fini>:
   82560:	4b02      	ldr	r3, [pc, #8]	; (8256c <register_fini+0xc>)
   82562:	b113      	cbz	r3, 8256a <register_fini+0xa>
   82564:	4802      	ldr	r0, [pc, #8]	; (82570 <register_fini+0x10>)
   82566:	f000 b805 	b.w	82574 <atexit>
   8256a:	4770      	bx	lr
   8256c:	00000000 	.word	0x00000000
   82570:	000834f1 	.word	0x000834f1

00082574 <atexit>:
   82574:	4601      	mov	r1, r0
   82576:	2000      	movs	r0, #0
   82578:	4602      	mov	r2, r0
   8257a:	4603      	mov	r3, r0
   8257c:	f002 ba58 	b.w	84a30 <__register_exitproc>

00082580 <quorem>:
   82580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   82584:	6903      	ldr	r3, [r0, #16]
   82586:	690d      	ldr	r5, [r1, #16]
   82588:	b083      	sub	sp, #12
   8258a:	429d      	cmp	r5, r3
   8258c:	4683      	mov	fp, r0
   8258e:	f300 808c 	bgt.w	826aa <quorem+0x12a>
   82592:	3d01      	subs	r5, #1
   82594:	f101 0414 	add.w	r4, r1, #20
   82598:	f100 0a14 	add.w	sl, r0, #20
   8259c:	f854 2025 	ldr.w	r2, [r4, r5, lsl #2]
   825a0:	f85a 3025 	ldr.w	r3, [sl, r5, lsl #2]
   825a4:	3201      	adds	r2, #1
   825a6:	fbb3 f8f2 	udiv	r8, r3, r2
   825aa:	00aa      	lsls	r2, r5, #2
   825ac:	4691      	mov	r9, r2
   825ae:	9200      	str	r2, [sp, #0]
   825b0:	4452      	add	r2, sl
   825b2:	44a1      	add	r9, r4
   825b4:	9201      	str	r2, [sp, #4]
   825b6:	f1b8 0f00 	cmp.w	r8, #0
   825ba:	d03e      	beq.n	8263a <quorem+0xba>
   825bc:	2600      	movs	r6, #0
   825be:	4630      	mov	r0, r6
   825c0:	4622      	mov	r2, r4
   825c2:	4653      	mov	r3, sl
   825c4:	468c      	mov	ip, r1
   825c6:	f852 7b04 	ldr.w	r7, [r2], #4
   825ca:	6819      	ldr	r1, [r3, #0]
   825cc:	fa1f fe87 	uxth.w	lr, r7
   825d0:	0c3f      	lsrs	r7, r7, #16
   825d2:	fb0e 6e08 	mla	lr, lr, r8, r6
   825d6:	fb07 f608 	mul.w	r6, r7, r8
   825da:	eb06 461e 	add.w	r6, r6, lr, lsr #16
   825de:	fa1f fe8e 	uxth.w	lr, lr
   825e2:	ebce 0e00 	rsb	lr, lr, r0
   825e6:	b28f      	uxth	r7, r1
   825e8:	b2b0      	uxth	r0, r6
   825ea:	4477      	add	r7, lr
   825ec:	ebc0 4011 	rsb	r0, r0, r1, lsr #16
   825f0:	eb00 4027 	add.w	r0, r0, r7, asr #16
   825f4:	b2bf      	uxth	r7, r7
   825f6:	ea47 4700 	orr.w	r7, r7, r0, lsl #16
   825fa:	4591      	cmp	r9, r2
   825fc:	f843 7b04 	str.w	r7, [r3], #4
   82600:	ea4f 4020 	mov.w	r0, r0, asr #16
   82604:	ea4f 4616 	mov.w	r6, r6, lsr #16
   82608:	d2dd      	bcs.n	825c6 <quorem+0x46>
   8260a:	9a00      	ldr	r2, [sp, #0]
   8260c:	4661      	mov	r1, ip
   8260e:	f85a 3002 	ldr.w	r3, [sl, r2]
   82612:	b993      	cbnz	r3, 8263a <quorem+0xba>
   82614:	9a01      	ldr	r2, [sp, #4]
   82616:	1f13      	subs	r3, r2, #4
   82618:	459a      	cmp	sl, r3
   8261a:	d20c      	bcs.n	82636 <quorem+0xb6>
   8261c:	f852 3c04 	ldr.w	r3, [r2, #-4]
   82620:	b94b      	cbnz	r3, 82636 <quorem+0xb6>
   82622:	f1a2 0308 	sub.w	r3, r2, #8
   82626:	e002      	b.n	8262e <quorem+0xae>
   82628:	681a      	ldr	r2, [r3, #0]
   8262a:	3b04      	subs	r3, #4
   8262c:	b91a      	cbnz	r2, 82636 <quorem+0xb6>
   8262e:	459a      	cmp	sl, r3
   82630:	f105 35ff 	add.w	r5, r5, #4294967295
   82634:	d3f8      	bcc.n	82628 <quorem+0xa8>
   82636:	f8cb 5010 	str.w	r5, [fp, #16]
   8263a:	4658      	mov	r0, fp
   8263c:	f001 fe70 	bl	84320 <__mcmp>
   82640:	2800      	cmp	r0, #0
   82642:	db2e      	blt.n	826a2 <quorem+0x122>
   82644:	f108 0801 	add.w	r8, r8, #1
   82648:	4653      	mov	r3, sl
   8264a:	2200      	movs	r2, #0
   8264c:	f854 6b04 	ldr.w	r6, [r4], #4
   82650:	6818      	ldr	r0, [r3, #0]
   82652:	b2b1      	uxth	r1, r6
   82654:	1a51      	subs	r1, r2, r1
   82656:	b287      	uxth	r7, r0
   82658:	0c36      	lsrs	r6, r6, #16
   8265a:	4439      	add	r1, r7
   8265c:	ebc6 4010 	rsb	r0, r6, r0, lsr #16
   82660:	eb00 4221 	add.w	r2, r0, r1, asr #16
   82664:	b289      	uxth	r1, r1
   82666:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
   8266a:	45a1      	cmp	r9, r4
   8266c:	f843 1b04 	str.w	r1, [r3], #4
   82670:	ea4f 4222 	mov.w	r2, r2, asr #16
   82674:	d2ea      	bcs.n	8264c <quorem+0xcc>
   82676:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
   8267a:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
   8267e:	b982      	cbnz	r2, 826a2 <quorem+0x122>
   82680:	1f1a      	subs	r2, r3, #4
   82682:	4592      	cmp	sl, r2
   82684:	d20b      	bcs.n	8269e <quorem+0x11e>
   82686:	f853 2c04 	ldr.w	r2, [r3, #-4]
   8268a:	b942      	cbnz	r2, 8269e <quorem+0x11e>
   8268c:	3b08      	subs	r3, #8
   8268e:	e002      	b.n	82696 <quorem+0x116>
   82690:	681a      	ldr	r2, [r3, #0]
   82692:	3b04      	subs	r3, #4
   82694:	b91a      	cbnz	r2, 8269e <quorem+0x11e>
   82696:	459a      	cmp	sl, r3
   82698:	f105 35ff 	add.w	r5, r5, #4294967295
   8269c:	d3f8      	bcc.n	82690 <quorem+0x110>
   8269e:	f8cb 5010 	str.w	r5, [fp, #16]
   826a2:	4640      	mov	r0, r8
   826a4:	b003      	add	sp, #12
   826a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   826aa:	2000      	movs	r0, #0
   826ac:	b003      	add	sp, #12
   826ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   826b2:	bf00      	nop
   826b4:	0000      	movs	r0, r0
	...

000826b8 <_dtoa_r>:
   826b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   826bc:	6c01      	ldr	r1, [r0, #64]	; 0x40
   826be:	b09b      	sub	sp, #108	; 0x6c
   826c0:	4604      	mov	r4, r0
   826c2:	4692      	mov	sl, r2
   826c4:	469b      	mov	fp, r3
   826c6:	9d27      	ldr	r5, [sp, #156]	; 0x9c
   826c8:	b141      	cbz	r1, 826dc <_dtoa_r+0x24>
   826ca:	6c43      	ldr	r3, [r0, #68]	; 0x44
   826cc:	2201      	movs	r2, #1
   826ce:	409a      	lsls	r2, r3
   826d0:	604b      	str	r3, [r1, #4]
   826d2:	608a      	str	r2, [r1, #8]
   826d4:	f001 fc2e 	bl	83f34 <_Bfree>
   826d8:	2300      	movs	r3, #0
   826da:	6423      	str	r3, [r4, #64]	; 0x40
   826dc:	f1bb 0f00 	cmp.w	fp, #0
   826e0:	46d9      	mov	r9, fp
   826e2:	db33      	blt.n	8274c <_dtoa_r+0x94>
   826e4:	2300      	movs	r3, #0
   826e6:	602b      	str	r3, [r5, #0]
   826e8:	4ba5      	ldr	r3, [pc, #660]	; (82980 <_dtoa_r+0x2c8>)
   826ea:	461a      	mov	r2, r3
   826ec:	ea09 0303 	and.w	r3, r9, r3
   826f0:	4293      	cmp	r3, r2
   826f2:	d014      	beq.n	8271e <_dtoa_r+0x66>
   826f4:	4650      	mov	r0, sl
   826f6:	4659      	mov	r1, fp
   826f8:	2200      	movs	r2, #0
   826fa:	2300      	movs	r3, #0
   826fc:	f002 fe3c 	bl	85378 <__aeabi_dcmpeq>
   82700:	4680      	mov	r8, r0
   82702:	b348      	cbz	r0, 82758 <_dtoa_r+0xa0>
   82704:	9e26      	ldr	r6, [sp, #152]	; 0x98
   82706:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   82708:	2301      	movs	r3, #1
   8270a:	6033      	str	r3, [r6, #0]
   8270c:	2d00      	cmp	r5, #0
   8270e:	f000 80ca 	beq.w	828a6 <_dtoa_r+0x1ee>
   82712:	489c      	ldr	r0, [pc, #624]	; (82984 <_dtoa_r+0x2cc>)
   82714:	6028      	str	r0, [r5, #0]
   82716:	3801      	subs	r0, #1
   82718:	b01b      	add	sp, #108	; 0x6c
   8271a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8271e:	9d26      	ldr	r5, [sp, #152]	; 0x98
   82720:	f242 730f 	movw	r3, #9999	; 0x270f
   82724:	602b      	str	r3, [r5, #0]
   82726:	f1ba 0f00 	cmp.w	sl, #0
   8272a:	f000 80a5 	beq.w	82878 <_dtoa_r+0x1c0>
   8272e:	4896      	ldr	r0, [pc, #600]	; (82988 <_dtoa_r+0x2d0>)
   82730:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   82732:	2e00      	cmp	r6, #0
   82734:	d0f0      	beq.n	82718 <_dtoa_r+0x60>
   82736:	78c3      	ldrb	r3, [r0, #3]
   82738:	2b00      	cmp	r3, #0
   8273a:	f000 80b6 	beq.w	828aa <_dtoa_r+0x1f2>
   8273e:	f100 0308 	add.w	r3, r0, #8
   82742:	9d28      	ldr	r5, [sp, #160]	; 0xa0
   82744:	602b      	str	r3, [r5, #0]
   82746:	b01b      	add	sp, #108	; 0x6c
   82748:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8274c:	2301      	movs	r3, #1
   8274e:	f02b 4900 	bic.w	r9, fp, #2147483648	; 0x80000000
   82752:	602b      	str	r3, [r5, #0]
   82754:	46cb      	mov	fp, r9
   82756:	e7c7      	b.n	826e8 <_dtoa_r+0x30>
   82758:	aa19      	add	r2, sp, #100	; 0x64
   8275a:	ab18      	add	r3, sp, #96	; 0x60
   8275c:	e88d 000c 	stmia.w	sp, {r2, r3}
   82760:	4620      	mov	r0, r4
   82762:	4652      	mov	r2, sl
   82764:	465b      	mov	r3, fp
   82766:	f001 fe6b 	bl	84440 <__d2b>
   8276a:	ea5f 5519 	movs.w	r5, r9, lsr #20
   8276e:	900a      	str	r0, [sp, #40]	; 0x28
   82770:	f040 808b 	bne.w	8288a <_dtoa_r+0x1d2>
   82774:	9f18      	ldr	r7, [sp, #96]	; 0x60
   82776:	9d19      	ldr	r5, [sp, #100]	; 0x64
   82778:	f46f 6382 	mvn.w	r3, #1040	; 0x410
   8277c:	443d      	add	r5, r7
   8277e:	429d      	cmp	r5, r3
   82780:	f2c0 8295 	blt.w	82cae <_dtoa_r+0x5f6>
   82784:	331f      	adds	r3, #31
   82786:	f205 4212 	addw	r2, r5, #1042	; 0x412
   8278a:	1b5b      	subs	r3, r3, r5
   8278c:	fa09 f303 	lsl.w	r3, r9, r3
   82790:	fa2a f202 	lsr.w	r2, sl, r2
   82794:	ea43 0002 	orr.w	r0, r3, r2
   82798:	f002 fb10 	bl	84dbc <__aeabi_ui2d>
   8279c:	2601      	movs	r6, #1
   8279e:	3d01      	subs	r5, #1
   827a0:	46b8      	mov	r8, r7
   827a2:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
   827a6:	9616      	str	r6, [sp, #88]	; 0x58
   827a8:	2200      	movs	r2, #0
   827aa:	4b78      	ldr	r3, [pc, #480]	; (8298c <_dtoa_r+0x2d4>)
   827ac:	f002 f9c8 	bl	84b40 <__aeabi_dsub>
   827b0:	a36d      	add	r3, pc, #436	; (adr r3, 82968 <_dtoa_r+0x2b0>)
   827b2:	e9d3 2300 	ldrd	r2, r3, [r3]
   827b6:	f002 fb77 	bl	84ea8 <__aeabi_dmul>
   827ba:	a36d      	add	r3, pc, #436	; (adr r3, 82970 <_dtoa_r+0x2b8>)
   827bc:	e9d3 2300 	ldrd	r2, r3, [r3]
   827c0:	f002 f9c0 	bl	84b44 <__adddf3>
   827c4:	4606      	mov	r6, r0
   827c6:	4628      	mov	r0, r5
   827c8:	460f      	mov	r7, r1
   827ca:	f002 fb07 	bl	84ddc <__aeabi_i2d>
   827ce:	a36a      	add	r3, pc, #424	; (adr r3, 82978 <_dtoa_r+0x2c0>)
   827d0:	e9d3 2300 	ldrd	r2, r3, [r3]
   827d4:	f002 fb68 	bl	84ea8 <__aeabi_dmul>
   827d8:	4602      	mov	r2, r0
   827da:	460b      	mov	r3, r1
   827dc:	4630      	mov	r0, r6
   827de:	4639      	mov	r1, r7
   827e0:	f002 f9b0 	bl	84b44 <__adddf3>
   827e4:	4606      	mov	r6, r0
   827e6:	460f      	mov	r7, r1
   827e8:	f002 fdf8 	bl	853dc <__aeabi_d2iz>
   827ec:	4639      	mov	r1, r7
   827ee:	9007      	str	r0, [sp, #28]
   827f0:	2200      	movs	r2, #0
   827f2:	4630      	mov	r0, r6
   827f4:	2300      	movs	r3, #0
   827f6:	f002 fdc9 	bl	8538c <__aeabi_dcmplt>
   827fa:	2800      	cmp	r0, #0
   827fc:	f040 8229 	bne.w	82c52 <_dtoa_r+0x59a>
   82800:	9e07      	ldr	r6, [sp, #28]
   82802:	2e16      	cmp	r6, #22
   82804:	f200 8222 	bhi.w	82c4c <_dtoa_r+0x594>
   82808:	4961      	ldr	r1, [pc, #388]	; (82990 <_dtoa_r+0x2d8>)
   8280a:	4652      	mov	r2, sl
   8280c:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
   82810:	465b      	mov	r3, fp
   82812:	e9d1 0100 	ldrd	r0, r1, [r1]
   82816:	f002 fdd7 	bl	853c8 <__aeabi_dcmpgt>
   8281a:	2800      	cmp	r0, #0
   8281c:	f000 824c 	beq.w	82cb8 <_dtoa_r+0x600>
   82820:	3e01      	subs	r6, #1
   82822:	9607      	str	r6, [sp, #28]
   82824:	2600      	movs	r6, #0
   82826:	960e      	str	r6, [sp, #56]	; 0x38
   82828:	ebc5 0508 	rsb	r5, r5, r8
   8282c:	3d01      	subs	r5, #1
   8282e:	9506      	str	r5, [sp, #24]
   82830:	f100 8226 	bmi.w	82c80 <_dtoa_r+0x5c8>
   82834:	2500      	movs	r5, #0
   82836:	9508      	str	r5, [sp, #32]
   82838:	9e07      	ldr	r6, [sp, #28]
   8283a:	2e00      	cmp	r6, #0
   8283c:	f2c0 8217 	blt.w	82c6e <_dtoa_r+0x5b6>
   82840:	9d06      	ldr	r5, [sp, #24]
   82842:	960d      	str	r6, [sp, #52]	; 0x34
   82844:	4435      	add	r5, r6
   82846:	2600      	movs	r6, #0
   82848:	9506      	str	r5, [sp, #24]
   8284a:	960c      	str	r6, [sp, #48]	; 0x30
   8284c:	9d24      	ldr	r5, [sp, #144]	; 0x90
   8284e:	2d09      	cmp	r5, #9
   82850:	d82d      	bhi.n	828ae <_dtoa_r+0x1f6>
   82852:	2d05      	cmp	r5, #5
   82854:	bfc4      	itt	gt
   82856:	3d04      	subgt	r5, #4
   82858:	9524      	strgt	r5, [sp, #144]	; 0x90
   8285a:	9e24      	ldr	r6, [sp, #144]	; 0x90
   8285c:	bfc8      	it	gt
   8285e:	2500      	movgt	r5, #0
   82860:	f1a6 0302 	sub.w	r3, r6, #2
   82864:	bfd8      	it	le
   82866:	2501      	movle	r5, #1
   82868:	2b03      	cmp	r3, #3
   8286a:	d822      	bhi.n	828b2 <_dtoa_r+0x1fa>
   8286c:	e8df f013 	tbh	[pc, r3, lsl #1]
   82870:	029e03b7 	.word	0x029e03b7
   82874:	049a03c0 	.word	0x049a03c0
   82878:	4a46      	ldr	r2, [pc, #280]	; (82994 <_dtoa_r+0x2dc>)
   8287a:	4b43      	ldr	r3, [pc, #268]	; (82988 <_dtoa_r+0x2d0>)
   8287c:	f3c9 0013 	ubfx	r0, r9, #0, #20
   82880:	2800      	cmp	r0, #0
   82882:	bf0c      	ite	eq
   82884:	4610      	moveq	r0, r2
   82886:	4618      	movne	r0, r3
   82888:	e752      	b.n	82730 <_dtoa_r+0x78>
   8288a:	f3cb 0313 	ubfx	r3, fp, #0, #20
   8288e:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
   82892:	f8cd 8058 	str.w	r8, [sp, #88]	; 0x58
   82896:	4650      	mov	r0, sl
   82898:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
   8289c:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
   828a0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
   828a4:	e780      	b.n	827a8 <_dtoa_r+0xf0>
   828a6:	483c      	ldr	r0, [pc, #240]	; (82998 <_dtoa_r+0x2e0>)
   828a8:	e736      	b.n	82718 <_dtoa_r+0x60>
   828aa:	1cc3      	adds	r3, r0, #3
   828ac:	e749      	b.n	82742 <_dtoa_r+0x8a>
   828ae:	2500      	movs	r5, #0
   828b0:	9524      	str	r5, [sp, #144]	; 0x90
   828b2:	2500      	movs	r5, #0
   828b4:	6465      	str	r5, [r4, #68]	; 0x44
   828b6:	4629      	mov	r1, r5
   828b8:	4620      	mov	r0, r4
   828ba:	f001 fb15 	bl	83ee8 <_Balloc>
   828be:	f04f 39ff 	mov.w	r9, #4294967295
   828c2:	2601      	movs	r6, #1
   828c4:	9009      	str	r0, [sp, #36]	; 0x24
   828c6:	9525      	str	r5, [sp, #148]	; 0x94
   828c8:	6420      	str	r0, [r4, #64]	; 0x40
   828ca:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
   828ce:	960b      	str	r6, [sp, #44]	; 0x2c
   828d0:	9b19      	ldr	r3, [sp, #100]	; 0x64
   828d2:	2b00      	cmp	r3, #0
   828d4:	f2c0 80d2 	blt.w	82a7c <_dtoa_r+0x3c4>
   828d8:	9e07      	ldr	r6, [sp, #28]
   828da:	2e0e      	cmp	r6, #14
   828dc:	f300 80ce 	bgt.w	82a7c <_dtoa_r+0x3c4>
   828e0:	4b2b      	ldr	r3, [pc, #172]	; (82990 <_dtoa_r+0x2d8>)
   828e2:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
   828e6:	e9d3 0100 	ldrd	r0, r1, [r3]
   828ea:	e9cd 0104 	strd	r0, r1, [sp, #16]
   828ee:	9925      	ldr	r1, [sp, #148]	; 0x94
   828f0:	2900      	cmp	r1, #0
   828f2:	f2c0 8380 	blt.w	82ff6 <_dtoa_r+0x93e>
   828f6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   828fa:	4659      	mov	r1, fp
   828fc:	4650      	mov	r0, sl
   828fe:	f002 fbfd 	bl	850fc <__aeabi_ddiv>
   82902:	f002 fd6b 	bl	853dc <__aeabi_d2iz>
   82906:	4605      	mov	r5, r0
   82908:	f002 fa68 	bl	84ddc <__aeabi_i2d>
   8290c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82910:	f002 faca 	bl	84ea8 <__aeabi_dmul>
   82914:	4602      	mov	r2, r0
   82916:	460b      	mov	r3, r1
   82918:	4650      	mov	r0, sl
   8291a:	4659      	mov	r1, fp
   8291c:	f002 f910 	bl	84b40 <__aeabi_dsub>
   82920:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82922:	f105 0330 	add.w	r3, r5, #48	; 0x30
   82926:	f1b9 0f01 	cmp.w	r9, #1
   8292a:	4606      	mov	r6, r0
   8292c:	460f      	mov	r7, r1
   8292e:	7013      	strb	r3, [r2, #0]
   82930:	f102 0b01 	add.w	fp, r2, #1
   82934:	d064      	beq.n	82a00 <_dtoa_r+0x348>
   82936:	2200      	movs	r2, #0
   82938:	4b18      	ldr	r3, [pc, #96]	; (8299c <_dtoa_r+0x2e4>)
   8293a:	f002 fab5 	bl	84ea8 <__aeabi_dmul>
   8293e:	2200      	movs	r2, #0
   82940:	2300      	movs	r3, #0
   82942:	4606      	mov	r6, r0
   82944:	460f      	mov	r7, r1
   82946:	f002 fd17 	bl	85378 <__aeabi_dcmpeq>
   8294a:	2800      	cmp	r0, #0
   8294c:	f040 8081 	bne.w	82a52 <_dtoa_r+0x39a>
   82950:	f8dd 8024 	ldr.w	r8, [sp, #36]	; 0x24
   82954:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82956:	44c8      	add	r8, r9
   82958:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
   8295c:	f105 0902 	add.w	r9, r5, #2
   82960:	9403      	str	r4, [sp, #12]
   82962:	e028      	b.n	829b6 <_dtoa_r+0x2fe>
   82964:	f3af 8000 	nop.w
   82968:	636f4361 	.word	0x636f4361
   8296c:	3fd287a7 	.word	0x3fd287a7
   82970:	8b60c8b3 	.word	0x8b60c8b3
   82974:	3fc68a28 	.word	0x3fc68a28
   82978:	509f79fb 	.word	0x509f79fb
   8297c:	3fd34413 	.word	0x3fd34413
   82980:	7ff00000 	.word	0x7ff00000
   82984:	00085a75 	.word	0x00085a75
   82988:	00085a94 	.word	0x00085a94
   8298c:	3ff80000 	.word	0x3ff80000
   82990:	00085aa8 	.word	0x00085aa8
   82994:	00085a88 	.word	0x00085a88
   82998:	00085a74 	.word	0x00085a74
   8299c:	40240000 	.word	0x40240000
   829a0:	f002 fa82 	bl	84ea8 <__aeabi_dmul>
   829a4:	2200      	movs	r2, #0
   829a6:	2300      	movs	r3, #0
   829a8:	4606      	mov	r6, r0
   829aa:	460f      	mov	r7, r1
   829ac:	f002 fce4 	bl	85378 <__aeabi_dcmpeq>
   829b0:	2800      	cmp	r0, #0
   829b2:	f040 83c1 	bne.w	83138 <_dtoa_r+0xa80>
   829b6:	4652      	mov	r2, sl
   829b8:	465b      	mov	r3, fp
   829ba:	4630      	mov	r0, r6
   829bc:	4639      	mov	r1, r7
   829be:	f002 fb9d 	bl	850fc <__aeabi_ddiv>
   829c2:	f002 fd0b 	bl	853dc <__aeabi_d2iz>
   829c6:	4605      	mov	r5, r0
   829c8:	f002 fa08 	bl	84ddc <__aeabi_i2d>
   829cc:	4652      	mov	r2, sl
   829ce:	465b      	mov	r3, fp
   829d0:	f002 fa6a 	bl	84ea8 <__aeabi_dmul>
   829d4:	4602      	mov	r2, r0
   829d6:	460b      	mov	r3, r1
   829d8:	4630      	mov	r0, r6
   829da:	4639      	mov	r1, r7
   829dc:	f002 f8b0 	bl	84b40 <__aeabi_dsub>
   829e0:	f105 0e30 	add.w	lr, r5, #48	; 0x30
   829e4:	45c1      	cmp	r9, r8
   829e6:	f809 ec01 	strb.w	lr, [r9, #-1]
   829ea:	464c      	mov	r4, r9
   829ec:	4606      	mov	r6, r0
   829ee:	460f      	mov	r7, r1
   829f0:	f04f 0200 	mov.w	r2, #0
   829f4:	4ba7      	ldr	r3, [pc, #668]	; (82c94 <_dtoa_r+0x5dc>)
   829f6:	f109 0901 	add.w	r9, r9, #1
   829fa:	d1d1      	bne.n	829a0 <_dtoa_r+0x2e8>
   829fc:	46a3      	mov	fp, r4
   829fe:	9c03      	ldr	r4, [sp, #12]
   82a00:	4632      	mov	r2, r6
   82a02:	463b      	mov	r3, r7
   82a04:	4630      	mov	r0, r6
   82a06:	4639      	mov	r1, r7
   82a08:	f002 f89c 	bl	84b44 <__adddf3>
   82a0c:	4606      	mov	r6, r0
   82a0e:	460f      	mov	r7, r1
   82a10:	4632      	mov	r2, r6
   82a12:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82a16:	463b      	mov	r3, r7
   82a18:	f002 fcb8 	bl	8538c <__aeabi_dcmplt>
   82a1c:	b940      	cbnz	r0, 82a30 <_dtoa_r+0x378>
   82a1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   82a22:	4632      	mov	r2, r6
   82a24:	463b      	mov	r3, r7
   82a26:	f002 fca7 	bl	85378 <__aeabi_dcmpeq>
   82a2a:	b190      	cbz	r0, 82a52 <_dtoa_r+0x39a>
   82a2c:	07eb      	lsls	r3, r5, #31
   82a2e:	d510      	bpl.n	82a52 <_dtoa_r+0x39a>
   82a30:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   82a34:	9a09      	ldr	r2, [sp, #36]	; 0x24
   82a36:	e005      	b.n	82a44 <_dtoa_r+0x38c>
   82a38:	429a      	cmp	r2, r3
   82a3a:	f000 8429 	beq.w	83290 <_dtoa_r+0xbd8>
   82a3e:	f813 5c01 	ldrb.w	r5, [r3, #-1]
   82a42:	469b      	mov	fp, r3
   82a44:	2d39      	cmp	r5, #57	; 0x39
   82a46:	f10b 33ff 	add.w	r3, fp, #4294967295
   82a4a:	d0f5      	beq.n	82a38 <_dtoa_r+0x380>
   82a4c:	1c6a      	adds	r2, r5, #1
   82a4e:	b2d2      	uxtb	r2, r2
   82a50:	701a      	strb	r2, [r3, #0]
   82a52:	4620      	mov	r0, r4
   82a54:	990a      	ldr	r1, [sp, #40]	; 0x28
   82a56:	f001 fa6d 	bl	83f34 <_Bfree>
   82a5a:	9e07      	ldr	r6, [sp, #28]
   82a5c:	9d26      	ldr	r5, [sp, #152]	; 0x98
   82a5e:	1c73      	adds	r3, r6, #1
   82a60:	9e28      	ldr	r6, [sp, #160]	; 0xa0
   82a62:	2200      	movs	r2, #0
   82a64:	f88b 2000 	strb.w	r2, [fp]
   82a68:	602b      	str	r3, [r5, #0]
   82a6a:	2e00      	cmp	r6, #0
   82a6c:	f000 8325 	beq.w	830ba <_dtoa_r+0xa02>
   82a70:	9809      	ldr	r0, [sp, #36]	; 0x24
   82a72:	f8c6 b000 	str.w	fp, [r6]
   82a76:	b01b      	add	sp, #108	; 0x6c
   82a78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   82a7c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82a7e:	2d00      	cmp	r5, #0
   82a80:	f000 8103 	beq.w	82c8a <_dtoa_r+0x5d2>
   82a84:	9e24      	ldr	r6, [sp, #144]	; 0x90
   82a86:	2e01      	cmp	r6, #1
   82a88:	f340 82dc 	ble.w	83044 <_dtoa_r+0x98c>
   82a8c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
   82a8e:	f109 37ff 	add.w	r7, r9, #4294967295
   82a92:	42be      	cmp	r6, r7
   82a94:	f2c0 8389 	blt.w	831aa <_dtoa_r+0xaf2>
   82a98:	1bf7      	subs	r7, r6, r7
   82a9a:	f1b9 0f00 	cmp.w	r9, #0
   82a9e:	f2c0 8487 	blt.w	833b0 <_dtoa_r+0xcf8>
   82aa2:	9d08      	ldr	r5, [sp, #32]
   82aa4:	464b      	mov	r3, r9
   82aa6:	9e08      	ldr	r6, [sp, #32]
   82aa8:	4620      	mov	r0, r4
   82aaa:	441e      	add	r6, r3
   82aac:	9608      	str	r6, [sp, #32]
   82aae:	9e06      	ldr	r6, [sp, #24]
   82ab0:	2101      	movs	r1, #1
   82ab2:	441e      	add	r6, r3
   82ab4:	9606      	str	r6, [sp, #24]
   82ab6:	f001 fadf 	bl	84078 <__i2b>
   82aba:	4606      	mov	r6, r0
   82abc:	b165      	cbz	r5, 82ad8 <_dtoa_r+0x420>
   82abe:	9806      	ldr	r0, [sp, #24]
   82ac0:	2800      	cmp	r0, #0
   82ac2:	dd09      	ble.n	82ad8 <_dtoa_r+0x420>
   82ac4:	4603      	mov	r3, r0
   82ac6:	9908      	ldr	r1, [sp, #32]
   82ac8:	42ab      	cmp	r3, r5
   82aca:	bfa8      	it	ge
   82acc:	462b      	movge	r3, r5
   82ace:	1ac9      	subs	r1, r1, r3
   82ad0:	1ac0      	subs	r0, r0, r3
   82ad2:	9108      	str	r1, [sp, #32]
   82ad4:	1aed      	subs	r5, r5, r3
   82ad6:	9006      	str	r0, [sp, #24]
   82ad8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   82ada:	2a00      	cmp	r2, #0
   82adc:	dd1d      	ble.n	82b1a <_dtoa_r+0x462>
   82ade:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   82ae0:	2b00      	cmp	r3, #0
   82ae2:	f000 8358 	beq.w	83196 <_dtoa_r+0xade>
   82ae6:	2f00      	cmp	r7, #0
   82ae8:	dd11      	ble.n	82b0e <_dtoa_r+0x456>
   82aea:	4631      	mov	r1, r6
   82aec:	463a      	mov	r2, r7
   82aee:	4620      	mov	r0, r4
   82af0:	f001 fb6a 	bl	841c8 <__pow5mult>
   82af4:	4606      	mov	r6, r0
   82af6:	4631      	mov	r1, r6
   82af8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
   82afa:	4620      	mov	r0, r4
   82afc:	f001 fac6 	bl	8408c <__multiply>
   82b00:	990a      	ldr	r1, [sp, #40]	; 0x28
   82b02:	4680      	mov	r8, r0
   82b04:	4620      	mov	r0, r4
   82b06:	f001 fa15 	bl	83f34 <_Bfree>
   82b0a:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
   82b0e:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
   82b12:	ebbe 0207 	subs.w	r2, lr, r7
   82b16:	f040 828f 	bne.w	83038 <_dtoa_r+0x980>
   82b1a:	4620      	mov	r0, r4
   82b1c:	2101      	movs	r1, #1
   82b1e:	f001 faab 	bl	84078 <__i2b>
   82b22:	4680      	mov	r8, r0
   82b24:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b26:	2800      	cmp	r0, #0
   82b28:	dd05      	ble.n	82b36 <_dtoa_r+0x47e>
   82b2a:	4641      	mov	r1, r8
   82b2c:	4620      	mov	r0, r4
   82b2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
   82b30:	f001 fb4a 	bl	841c8 <__pow5mult>
   82b34:	4680      	mov	r8, r0
   82b36:	9924      	ldr	r1, [sp, #144]	; 0x90
   82b38:	2901      	cmp	r1, #1
   82b3a:	f340 82c1 	ble.w	830c0 <_dtoa_r+0xa08>
   82b3e:	2700      	movs	r7, #0
   82b40:	980d      	ldr	r0, [sp, #52]	; 0x34
   82b42:	2800      	cmp	r0, #0
   82b44:	f040 82af 	bne.w	830a6 <_dtoa_r+0x9ee>
   82b48:	2001      	movs	r0, #1
   82b4a:	9b06      	ldr	r3, [sp, #24]
   82b4c:	4403      	add	r3, r0
   82b4e:	f013 031f 	ands.w	r3, r3, #31
   82b52:	f000 80a1 	beq.w	82c98 <_dtoa_r+0x5e0>
   82b56:	f1c3 0220 	rsb	r2, r3, #32
   82b5a:	2a04      	cmp	r2, #4
   82b5c:	f340 84b7 	ble.w	834ce <_dtoa_r+0xe16>
   82b60:	9908      	ldr	r1, [sp, #32]
   82b62:	9a06      	ldr	r2, [sp, #24]
   82b64:	f1c3 031c 	rsb	r3, r3, #28
   82b68:	4419      	add	r1, r3
   82b6a:	441a      	add	r2, r3
   82b6c:	9108      	str	r1, [sp, #32]
   82b6e:	441d      	add	r5, r3
   82b70:	9206      	str	r2, [sp, #24]
   82b72:	9908      	ldr	r1, [sp, #32]
   82b74:	2900      	cmp	r1, #0
   82b76:	dd05      	ble.n	82b84 <_dtoa_r+0x4cc>
   82b78:	990a      	ldr	r1, [sp, #40]	; 0x28
   82b7a:	9a08      	ldr	r2, [sp, #32]
   82b7c:	4620      	mov	r0, r4
   82b7e:	f001 fb71 	bl	84264 <__lshift>
   82b82:	900a      	str	r0, [sp, #40]	; 0x28
   82b84:	9a06      	ldr	r2, [sp, #24]
   82b86:	2a00      	cmp	r2, #0
   82b88:	dd04      	ble.n	82b94 <_dtoa_r+0x4dc>
   82b8a:	4641      	mov	r1, r8
   82b8c:	4620      	mov	r0, r4
   82b8e:	f001 fb69 	bl	84264 <__lshift>
   82b92:	4680      	mov	r8, r0
   82b94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
   82b96:	2b00      	cmp	r3, #0
   82b98:	f040 826a 	bne.w	83070 <_dtoa_r+0x9b8>
   82b9c:	f1b9 0f00 	cmp.w	r9, #0
   82ba0:	f340 82a6 	ble.w	830f0 <_dtoa_r+0xa38>
   82ba4:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82ba6:	2800      	cmp	r0, #0
   82ba8:	f040 8088 	bne.w	82cbc <_dtoa_r+0x604>
   82bac:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82bae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   82bb0:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82bb4:	e006      	b.n	82bc4 <_dtoa_r+0x50c>
   82bb6:	4639      	mov	r1, r7
   82bb8:	4620      	mov	r0, r4
   82bba:	220a      	movs	r2, #10
   82bbc:	2300      	movs	r3, #0
   82bbe:	f001 f9c3 	bl	83f48 <__multadd>
   82bc2:	4607      	mov	r7, r0
   82bc4:	4638      	mov	r0, r7
   82bc6:	4641      	mov	r1, r8
   82bc8:	f7ff fcda 	bl	82580 <quorem>
   82bcc:	3030      	adds	r0, #48	; 0x30
   82bce:	f80b 0005 	strb.w	r0, [fp, r5]
   82bd2:	3501      	adds	r5, #1
   82bd4:	45a9      	cmp	r9, r5
   82bd6:	dcee      	bgt.n	82bb6 <_dtoa_r+0x4fe>
   82bd8:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   82bdc:	4682      	mov	sl, r0
   82bde:	970a      	str	r7, [sp, #40]	; 0x28
   82be0:	f1b9 0f01 	cmp.w	r9, #1
   82be4:	bfac      	ite	ge
   82be6:	44cb      	addge	fp, r9
   82be8:	f10b 0b01 	addlt.w	fp, fp, #1
   82bec:	2500      	movs	r5, #0
   82bee:	990a      	ldr	r1, [sp, #40]	; 0x28
   82bf0:	2201      	movs	r2, #1
   82bf2:	4620      	mov	r0, r4
   82bf4:	f001 fb36 	bl	84264 <__lshift>
   82bf8:	4641      	mov	r1, r8
   82bfa:	900a      	str	r0, [sp, #40]	; 0x28
   82bfc:	f001 fb90 	bl	84320 <__mcmp>
   82c00:	2800      	cmp	r0, #0
   82c02:	f340 8309 	ble.w	83218 <_dtoa_r+0xb60>
   82c06:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
   82c0a:	9909      	ldr	r1, [sp, #36]	; 0x24
   82c0c:	e005      	b.n	82c1a <_dtoa_r+0x562>
   82c0e:	4299      	cmp	r1, r3
   82c10:	f000 828b 	beq.w	8312a <_dtoa_r+0xa72>
   82c14:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   82c18:	469b      	mov	fp, r3
   82c1a:	2a39      	cmp	r2, #57	; 0x39
   82c1c:	f10b 33ff 	add.w	r3, fp, #4294967295
   82c20:	d0f5      	beq.n	82c0e <_dtoa_r+0x556>
   82c22:	3201      	adds	r2, #1
   82c24:	701a      	strb	r2, [r3, #0]
   82c26:	4641      	mov	r1, r8
   82c28:	4620      	mov	r0, r4
   82c2a:	f001 f983 	bl	83f34 <_Bfree>
   82c2e:	2e00      	cmp	r6, #0
   82c30:	f43f af0f 	beq.w	82a52 <_dtoa_r+0x39a>
   82c34:	b12d      	cbz	r5, 82c42 <_dtoa_r+0x58a>
   82c36:	42b5      	cmp	r5, r6
   82c38:	d003      	beq.n	82c42 <_dtoa_r+0x58a>
   82c3a:	4629      	mov	r1, r5
   82c3c:	4620      	mov	r0, r4
   82c3e:	f001 f979 	bl	83f34 <_Bfree>
   82c42:	4631      	mov	r1, r6
   82c44:	4620      	mov	r0, r4
   82c46:	f001 f975 	bl	83f34 <_Bfree>
   82c4a:	e702      	b.n	82a52 <_dtoa_r+0x39a>
   82c4c:	2601      	movs	r6, #1
   82c4e:	960e      	str	r6, [sp, #56]	; 0x38
   82c50:	e5ea      	b.n	82828 <_dtoa_r+0x170>
   82c52:	9807      	ldr	r0, [sp, #28]
   82c54:	f002 f8c2 	bl	84ddc <__aeabi_i2d>
   82c58:	4632      	mov	r2, r6
   82c5a:	463b      	mov	r3, r7
   82c5c:	f002 fb8c 	bl	85378 <__aeabi_dcmpeq>
   82c60:	2800      	cmp	r0, #0
   82c62:	f47f adcd 	bne.w	82800 <_dtoa_r+0x148>
   82c66:	9e07      	ldr	r6, [sp, #28]
   82c68:	3e01      	subs	r6, #1
   82c6a:	9607      	str	r6, [sp, #28]
   82c6c:	e5c8      	b.n	82800 <_dtoa_r+0x148>
   82c6e:	9e07      	ldr	r6, [sp, #28]
   82c70:	9d08      	ldr	r5, [sp, #32]
   82c72:	1bad      	subs	r5, r5, r6
   82c74:	9508      	str	r5, [sp, #32]
   82c76:	4275      	negs	r5, r6
   82c78:	2600      	movs	r6, #0
   82c7a:	950c      	str	r5, [sp, #48]	; 0x30
   82c7c:	960d      	str	r6, [sp, #52]	; 0x34
   82c7e:	e5e5      	b.n	8284c <_dtoa_r+0x194>
   82c80:	426d      	negs	r5, r5
   82c82:	2600      	movs	r6, #0
   82c84:	9508      	str	r5, [sp, #32]
   82c86:	9606      	str	r6, [sp, #24]
   82c88:	e5d6      	b.n	82838 <_dtoa_r+0x180>
   82c8a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   82c8c:	9d08      	ldr	r5, [sp, #32]
   82c8e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
   82c90:	e714      	b.n	82abc <_dtoa_r+0x404>
   82c92:	bf00      	nop
   82c94:	40240000 	.word	0x40240000
   82c98:	231c      	movs	r3, #28
   82c9a:	f8dd e020 	ldr.w	lr, [sp, #32]
   82c9e:	9806      	ldr	r0, [sp, #24]
   82ca0:	449e      	add	lr, r3
   82ca2:	4418      	add	r0, r3
   82ca4:	f8cd e020 	str.w	lr, [sp, #32]
   82ca8:	441d      	add	r5, r3
   82caa:	9006      	str	r0, [sp, #24]
   82cac:	e761      	b.n	82b72 <_dtoa_r+0x4ba>
   82cae:	48a7      	ldr	r0, [pc, #668]	; (82f4c <_dtoa_r+0x894>)
   82cb0:	1b40      	subs	r0, r0, r5
   82cb2:	fa0a f000 	lsl.w	r0, sl, r0
   82cb6:	e56f      	b.n	82798 <_dtoa_r+0xe0>
   82cb8:	900e      	str	r0, [sp, #56]	; 0x38
   82cba:	e5b5      	b.n	82828 <_dtoa_r+0x170>
   82cbc:	2d00      	cmp	r5, #0
   82cbe:	dd05      	ble.n	82ccc <_dtoa_r+0x614>
   82cc0:	4631      	mov	r1, r6
   82cc2:	462a      	mov	r2, r5
   82cc4:	4620      	mov	r0, r4
   82cc6:	f001 facd 	bl	84264 <__lshift>
   82cca:	4606      	mov	r6, r0
   82ccc:	2f00      	cmp	r7, #0
   82cce:	f040 82e9 	bne.w	832a4 <_dtoa_r+0xbec>
   82cd2:	4637      	mov	r7, r6
   82cd4:	9d09      	ldr	r5, [sp, #36]	; 0x24
   82cd6:	9809      	ldr	r0, [sp, #36]	; 0x24
   82cd8:	444d      	add	r5, r9
   82cda:	9508      	str	r5, [sp, #32]
   82cdc:	f00a 0501 	and.w	r5, sl, #1
   82ce0:	950b      	str	r5, [sp, #44]	; 0x2c
   82ce2:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
   82ce6:	1c45      	adds	r5, r0, #1
   82ce8:	e00a      	b.n	82d00 <_dtoa_r+0x648>
   82cea:	f001 f92d 	bl	83f48 <__multadd>
   82cee:	4639      	mov	r1, r7
   82cf0:	4606      	mov	r6, r0
   82cf2:	220a      	movs	r2, #10
   82cf4:	4620      	mov	r0, r4
   82cf6:	2300      	movs	r3, #0
   82cf8:	f001 f926 	bl	83f48 <__multadd>
   82cfc:	4607      	mov	r7, r0
   82cfe:	3501      	adds	r5, #1
   82d00:	4641      	mov	r1, r8
   82d02:	4648      	mov	r0, r9
   82d04:	f7ff fc3c 	bl	82580 <quorem>
   82d08:	4631      	mov	r1, r6
   82d0a:	4683      	mov	fp, r0
   82d0c:	4648      	mov	r0, r9
   82d0e:	f001 fb07 	bl	84320 <__mcmp>
   82d12:	4641      	mov	r1, r8
   82d14:	9003      	str	r0, [sp, #12]
   82d16:	463a      	mov	r2, r7
   82d18:	4620      	mov	r0, r4
   82d1a:	f001 fb25 	bl	84368 <__mdiff>
   82d1e:	68c2      	ldr	r2, [r0, #12]
   82d20:	1e69      	subs	r1, r5, #1
   82d22:	4603      	mov	r3, r0
   82d24:	f10b 0a30 	add.w	sl, fp, #48	; 0x30
   82d28:	9106      	str	r1, [sp, #24]
   82d2a:	2a00      	cmp	r2, #0
   82d2c:	f040 8193 	bne.w	83056 <_dtoa_r+0x99e>
   82d30:	4619      	mov	r1, r3
   82d32:	4648      	mov	r0, r9
   82d34:	9302      	str	r3, [sp, #8]
   82d36:	f001 faf3 	bl	84320 <__mcmp>
   82d3a:	9b02      	ldr	r3, [sp, #8]
   82d3c:	4602      	mov	r2, r0
   82d3e:	4619      	mov	r1, r3
   82d40:	4620      	mov	r0, r4
   82d42:	9202      	str	r2, [sp, #8]
   82d44:	f001 f8f6 	bl	83f34 <_Bfree>
   82d48:	9a02      	ldr	r2, [sp, #8]
   82d4a:	b92a      	cbnz	r2, 82d58 <_dtoa_r+0x6a0>
   82d4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
   82d4e:	b91b      	cbnz	r3, 82d58 <_dtoa_r+0x6a0>
   82d50:	980b      	ldr	r0, [sp, #44]	; 0x2c
   82d52:	2800      	cmp	r0, #0
   82d54:	f000 8393 	beq.w	8347e <_dtoa_r+0xdc6>
   82d58:	9b03      	ldr	r3, [sp, #12]
   82d5a:	2b00      	cmp	r3, #0
   82d5c:	f2c0 8234 	blt.w	831c8 <_dtoa_r+0xb10>
   82d60:	d105      	bne.n	82d6e <_dtoa_r+0x6b6>
   82d62:	9824      	ldr	r0, [sp, #144]	; 0x90
   82d64:	b918      	cbnz	r0, 82d6e <_dtoa_r+0x6b6>
   82d66:	990b      	ldr	r1, [sp, #44]	; 0x2c
   82d68:	2900      	cmp	r1, #0
   82d6a:	f000 822d 	beq.w	831c8 <_dtoa_r+0xb10>
   82d6e:	2a00      	cmp	r2, #0
   82d70:	f300 82ac 	bgt.w	832cc <_dtoa_r+0xc14>
   82d74:	f8dd e020 	ldr.w	lr, [sp, #32]
   82d78:	f805 ac01 	strb.w	sl, [r5, #-1]
   82d7c:	4575      	cmp	r5, lr
   82d7e:	46ab      	mov	fp, r5
   82d80:	f000 82b4 	beq.w	832ec <_dtoa_r+0xc34>
   82d84:	4649      	mov	r1, r9
   82d86:	220a      	movs	r2, #10
   82d88:	2300      	movs	r3, #0
   82d8a:	4620      	mov	r0, r4
   82d8c:	f001 f8dc 	bl	83f48 <__multadd>
   82d90:	42be      	cmp	r6, r7
   82d92:	4681      	mov	r9, r0
   82d94:	4631      	mov	r1, r6
   82d96:	4620      	mov	r0, r4
   82d98:	f04f 020a 	mov.w	r2, #10
   82d9c:	f04f 0300 	mov.w	r3, #0
   82da0:	d1a3      	bne.n	82cea <_dtoa_r+0x632>
   82da2:	f001 f8d1 	bl	83f48 <__multadd>
   82da6:	4606      	mov	r6, r0
   82da8:	4607      	mov	r7, r0
   82daa:	e7a8      	b.n	82cfe <_dtoa_r+0x646>
   82dac:	2600      	movs	r6, #0
   82dae:	960b      	str	r6, [sp, #44]	; 0x2c
   82db0:	9e07      	ldr	r6, [sp, #28]
   82db2:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
   82db6:	44b6      	add	lr, r6
   82db8:	f10e 0901 	add.w	r9, lr, #1
   82dbc:	f1b9 0f00 	cmp.w	r9, #0
   82dc0:	f8cd e03c 	str.w	lr, [sp, #60]	; 0x3c
   82dc4:	464e      	mov	r6, r9
   82dc6:	f340 8150 	ble.w	8306a <_dtoa_r+0x9b2>
   82dca:	2100      	movs	r1, #0
   82dcc:	2e17      	cmp	r6, #23
   82dce:	6461      	str	r1, [r4, #68]	; 0x44
   82dd0:	d90a      	bls.n	82de8 <_dtoa_r+0x730>
   82dd2:	2201      	movs	r2, #1
   82dd4:	2304      	movs	r3, #4
   82dd6:	005b      	lsls	r3, r3, #1
   82dd8:	f103 0014 	add.w	r0, r3, #20
   82ddc:	42b0      	cmp	r0, r6
   82dde:	4611      	mov	r1, r2
   82de0:	f102 0201 	add.w	r2, r2, #1
   82de4:	d9f7      	bls.n	82dd6 <_dtoa_r+0x71e>
   82de6:	6461      	str	r1, [r4, #68]	; 0x44
   82de8:	4620      	mov	r0, r4
   82dea:	f001 f87d 	bl	83ee8 <_Balloc>
   82dee:	2e0e      	cmp	r6, #14
   82df0:	9009      	str	r0, [sp, #36]	; 0x24
   82df2:	6420      	str	r0, [r4, #64]	; 0x40
   82df4:	f63f ad6c 	bhi.w	828d0 <_dtoa_r+0x218>
   82df8:	2d00      	cmp	r5, #0
   82dfa:	f43f ad69 	beq.w	828d0 <_dtoa_r+0x218>
   82dfe:	9d07      	ldr	r5, [sp, #28]
   82e00:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
   82e04:	2d00      	cmp	r5, #0
   82e06:	f340 821c 	ble.w	83242 <_dtoa_r+0xb8a>
   82e0a:	4b51      	ldr	r3, [pc, #324]	; (82f50 <_dtoa_r+0x898>)
   82e0c:	f005 020f 	and.w	r2, r5, #15
   82e10:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   82e14:	112d      	asrs	r5, r5, #4
   82e16:	e9d3 6700 	ldrd	r6, r7, [r3]
   82e1a:	06eb      	lsls	r3, r5, #27
   82e1c:	f140 81cd 	bpl.w	831ba <_dtoa_r+0xb02>
   82e20:	4b4c      	ldr	r3, [pc, #304]	; (82f54 <_dtoa_r+0x89c>)
   82e22:	4650      	mov	r0, sl
   82e24:	4659      	mov	r1, fp
   82e26:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
   82e2a:	f002 f967 	bl	850fc <__aeabi_ddiv>
   82e2e:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   82e32:	f005 050f 	and.w	r5, r5, #15
   82e36:	f04f 0803 	mov.w	r8, #3
   82e3a:	b18d      	cbz	r5, 82e60 <_dtoa_r+0x7a8>
   82e3c:	f8df a114 	ldr.w	sl, [pc, #276]	; 82f54 <_dtoa_r+0x89c>
   82e40:	4630      	mov	r0, r6
   82e42:	4639      	mov	r1, r7
   82e44:	07ee      	lsls	r6, r5, #31
   82e46:	d505      	bpl.n	82e54 <_dtoa_r+0x79c>
   82e48:	e9da 2300 	ldrd	r2, r3, [sl]
   82e4c:	f108 0801 	add.w	r8, r8, #1
   82e50:	f002 f82a 	bl	84ea8 <__aeabi_dmul>
   82e54:	106d      	asrs	r5, r5, #1
   82e56:	f10a 0a08 	add.w	sl, sl, #8
   82e5a:	d1f3      	bne.n	82e44 <_dtoa_r+0x78c>
   82e5c:	4606      	mov	r6, r0
   82e5e:	460f      	mov	r7, r1
   82e60:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   82e64:	4632      	mov	r2, r6
   82e66:	463b      	mov	r3, r7
   82e68:	f002 f948 	bl	850fc <__aeabi_ddiv>
   82e6c:	4682      	mov	sl, r0
   82e6e:	468b      	mov	fp, r1
   82e70:	9d0e      	ldr	r5, [sp, #56]	; 0x38
   82e72:	b145      	cbz	r5, 82e86 <_dtoa_r+0x7ce>
   82e74:	4650      	mov	r0, sl
   82e76:	4659      	mov	r1, fp
   82e78:	2200      	movs	r2, #0
   82e7a:	4b37      	ldr	r3, [pc, #220]	; (82f58 <_dtoa_r+0x8a0>)
   82e7c:	f002 fa86 	bl	8538c <__aeabi_dcmplt>
   82e80:	2800      	cmp	r0, #0
   82e82:	f040 82aa 	bne.w	833da <_dtoa_r+0xd22>
   82e86:	4640      	mov	r0, r8
   82e88:	f001 ffa8 	bl	84ddc <__aeabi_i2d>
   82e8c:	4652      	mov	r2, sl
   82e8e:	465b      	mov	r3, fp
   82e90:	f002 f80a 	bl	84ea8 <__aeabi_dmul>
   82e94:	2200      	movs	r2, #0
   82e96:	4b31      	ldr	r3, [pc, #196]	; (82f5c <_dtoa_r+0x8a4>)
   82e98:	f001 fe54 	bl	84b44 <__adddf3>
   82e9c:	4606      	mov	r6, r0
   82e9e:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   82ea2:	f1b9 0f00 	cmp.w	r9, #0
   82ea6:	f000 815a 	beq.w	8315e <_dtoa_r+0xaa6>
   82eaa:	9d07      	ldr	r5, [sp, #28]
   82eac:	46c8      	mov	r8, r9
   82eae:	9517      	str	r5, [sp, #92]	; 0x5c
   82eb0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
   82eb2:	2d00      	cmp	r5, #0
   82eb4:	f000 8223 	beq.w	832fe <_dtoa_r+0xc46>
   82eb8:	4b25      	ldr	r3, [pc, #148]	; (82f50 <_dtoa_r+0x898>)
   82eba:	2000      	movs	r0, #0
   82ebc:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
   82ec0:	e953 2302 	ldrd	r2, r3, [r3, #-8]
   82ec4:	4926      	ldr	r1, [pc, #152]	; (82f60 <_dtoa_r+0x8a8>)
   82ec6:	f002 f919 	bl	850fc <__aeabi_ddiv>
   82eca:	4632      	mov	r2, r6
   82ecc:	463b      	mov	r3, r7
   82ece:	f001 fe37 	bl	84b40 <__aeabi_dsub>
   82ed2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   82ed6:	4659      	mov	r1, fp
   82ed8:	4650      	mov	r0, sl
   82eda:	f002 fa7f 	bl	853dc <__aeabi_d2iz>
   82ede:	4605      	mov	r5, r0
   82ee0:	f001 ff7c 	bl	84ddc <__aeabi_i2d>
   82ee4:	4602      	mov	r2, r0
   82ee6:	460b      	mov	r3, r1
   82ee8:	4650      	mov	r0, sl
   82eea:	4659      	mov	r1, fp
   82eec:	f001 fe28 	bl	84b40 <__aeabi_dsub>
   82ef0:	3530      	adds	r5, #48	; 0x30
   82ef2:	9e09      	ldr	r6, [sp, #36]	; 0x24
   82ef4:	e9cd 0104 	strd	r0, r1, [sp, #16]
   82ef8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82efc:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   82f00:	b2ed      	uxtb	r5, r5
   82f02:	7035      	strb	r5, [r6, #0]
   82f04:	f106 0b01 	add.w	fp, r6, #1
   82f08:	f002 fa5e 	bl	853c8 <__aeabi_dcmpgt>
   82f0c:	2800      	cmp	r0, #0
   82f0e:	f040 82ab 	bne.w	83468 <_dtoa_r+0xdb0>
   82f12:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
   82f16:	2000      	movs	r0, #0
   82f18:	490f      	ldr	r1, [pc, #60]	; (82f58 <_dtoa_r+0x8a0>)
   82f1a:	f001 fe11 	bl	84b40 <__aeabi_dsub>
   82f1e:	4602      	mov	r2, r0
   82f20:	460b      	mov	r3, r1
   82f22:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
   82f26:	f002 fa4f 	bl	853c8 <__aeabi_dcmpgt>
   82f2a:	2800      	cmp	r0, #0
   82f2c:	f040 82a2 	bne.w	83474 <_dtoa_r+0xdbc>
   82f30:	f1b8 0f01 	cmp.w	r8, #1
   82f34:	f340 8181 	ble.w	8323a <_dtoa_r+0xb82>
   82f38:	44b0      	add	r8, r6
   82f3a:	f8cd 9050 	str.w	r9, [sp, #80]	; 0x50
   82f3e:	46a2      	mov	sl, r4
   82f40:	46c1      	mov	r9, r8
   82f42:	e9dd 6704 	ldrd	r6, r7, [sp, #16]
   82f46:	e9dd 4510 	ldrd	r4, r5, [sp, #64]	; 0x40
   82f4a:	e019      	b.n	82f80 <_dtoa_r+0x8c8>
   82f4c:	fffffbee 	.word	0xfffffbee
   82f50:	00085aa8 	.word	0x00085aa8
   82f54:	00085b70 	.word	0x00085b70
   82f58:	3ff00000 	.word	0x3ff00000
   82f5c:	401c0000 	.word	0x401c0000
   82f60:	3fe00000 	.word	0x3fe00000
   82f64:	2000      	movs	r0, #0
   82f66:	49a8      	ldr	r1, [pc, #672]	; (83208 <_dtoa_r+0xb50>)
   82f68:	f001 fdea 	bl	84b40 <__aeabi_dsub>
   82f6c:	4622      	mov	r2, r4
   82f6e:	462b      	mov	r3, r5
   82f70:	f002 fa0c 	bl	8538c <__aeabi_dcmplt>
   82f74:	2800      	cmp	r0, #0
   82f76:	f040 827b 	bne.w	83470 <_dtoa_r+0xdb8>
   82f7a:	45cb      	cmp	fp, r9
   82f7c:	f000 815a 	beq.w	83234 <_dtoa_r+0xb7c>
   82f80:	4620      	mov	r0, r4
   82f82:	4629      	mov	r1, r5
   82f84:	2200      	movs	r2, #0
   82f86:	4ba1      	ldr	r3, [pc, #644]	; (8320c <_dtoa_r+0xb54>)
   82f88:	f001 ff8e 	bl	84ea8 <__aeabi_dmul>
   82f8c:	2200      	movs	r2, #0
   82f8e:	4b9f      	ldr	r3, [pc, #636]	; (8320c <_dtoa_r+0xb54>)
   82f90:	4604      	mov	r4, r0
   82f92:	460d      	mov	r5, r1
   82f94:	4630      	mov	r0, r6
   82f96:	4639      	mov	r1, r7
   82f98:	f001 ff86 	bl	84ea8 <__aeabi_dmul>
   82f9c:	460f      	mov	r7, r1
   82f9e:	4606      	mov	r6, r0
   82fa0:	f002 fa1c 	bl	853dc <__aeabi_d2iz>
   82fa4:	4680      	mov	r8, r0
   82fa6:	f001 ff19 	bl	84ddc <__aeabi_i2d>
   82faa:	4602      	mov	r2, r0
   82fac:	460b      	mov	r3, r1
   82fae:	4630      	mov	r0, r6
   82fb0:	4639      	mov	r1, r7
   82fb2:	f001 fdc5 	bl	84b40 <__aeabi_dsub>
   82fb6:	f108 0830 	add.w	r8, r8, #48	; 0x30
   82fba:	fa5f f888 	uxtb.w	r8, r8
   82fbe:	4622      	mov	r2, r4
   82fc0:	462b      	mov	r3, r5
   82fc2:	f80b 8b01 	strb.w	r8, [fp], #1
   82fc6:	4606      	mov	r6, r0
   82fc8:	460f      	mov	r7, r1
   82fca:	f002 f9df 	bl	8538c <__aeabi_dcmplt>
   82fce:	4632      	mov	r2, r6
   82fd0:	463b      	mov	r3, r7
   82fd2:	2800      	cmp	r0, #0
   82fd4:	d0c6      	beq.n	82f64 <_dtoa_r+0x8ac>
   82fd6:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   82fd8:	4654      	mov	r4, sl
   82fda:	9607      	str	r6, [sp, #28]
   82fdc:	e539      	b.n	82a52 <_dtoa_r+0x39a>
   82fde:	2600      	movs	r6, #0
   82fe0:	960b      	str	r6, [sp, #44]	; 0x2c
   82fe2:	9825      	ldr	r0, [sp, #148]	; 0x94
   82fe4:	2800      	cmp	r0, #0
   82fe6:	dd3c      	ble.n	83062 <_dtoa_r+0x9aa>
   82fe8:	4606      	mov	r6, r0
   82fea:	900f      	str	r0, [sp, #60]	; 0x3c
   82fec:	4681      	mov	r9, r0
   82fee:	e6ec      	b.n	82dca <_dtoa_r+0x712>
   82ff0:	2601      	movs	r6, #1
   82ff2:	960b      	str	r6, [sp, #44]	; 0x2c
   82ff4:	e7f5      	b.n	82fe2 <_dtoa_r+0x92a>
   82ff6:	f1b9 0f00 	cmp.w	r9, #0
   82ffa:	f73f ac7c 	bgt.w	828f6 <_dtoa_r+0x23e>
   82ffe:	f040 80c6 	bne.w	8318e <_dtoa_r+0xad6>
   83002:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
   83006:	2200      	movs	r2, #0
   83008:	4b81      	ldr	r3, [pc, #516]	; (83210 <_dtoa_r+0xb58>)
   8300a:	f001 ff4d 	bl	84ea8 <__aeabi_dmul>
   8300e:	4652      	mov	r2, sl
   83010:	465b      	mov	r3, fp
   83012:	f002 f9cf 	bl	853b4 <__aeabi_dcmpge>
   83016:	46c8      	mov	r8, r9
   83018:	464e      	mov	r6, r9
   8301a:	2800      	cmp	r0, #0
   8301c:	d07c      	beq.n	83118 <_dtoa_r+0xa60>
   8301e:	9d25      	ldr	r5, [sp, #148]	; 0x94
   83020:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
   83024:	43ed      	mvns	r5, r5
   83026:	9507      	str	r5, [sp, #28]
   83028:	4641      	mov	r1, r8
   8302a:	4620      	mov	r0, r4
   8302c:	f000 ff82 	bl	83f34 <_Bfree>
   83030:	2e00      	cmp	r6, #0
   83032:	f47f ae06 	bne.w	82c42 <_dtoa_r+0x58a>
   83036:	e50c      	b.n	82a52 <_dtoa_r+0x39a>
   83038:	990a      	ldr	r1, [sp, #40]	; 0x28
   8303a:	4620      	mov	r0, r4
   8303c:	f001 f8c4 	bl	841c8 <__pow5mult>
   83040:	900a      	str	r0, [sp, #40]	; 0x28
   83042:	e56a      	b.n	82b1a <_dtoa_r+0x462>
   83044:	9d16      	ldr	r5, [sp, #88]	; 0x58
   83046:	2d00      	cmp	r5, #0
   83048:	f000 81b8 	beq.w	833bc <_dtoa_r+0xd04>
   8304c:	f203 4333 	addw	r3, r3, #1075	; 0x433
   83050:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   83052:	9d08      	ldr	r5, [sp, #32]
   83054:	e527      	b.n	82aa6 <_dtoa_r+0x3ee>
   83056:	4601      	mov	r1, r0
   83058:	4620      	mov	r0, r4
   8305a:	f000 ff6b 	bl	83f34 <_Bfree>
   8305e:	2201      	movs	r2, #1
   83060:	e67a      	b.n	82d58 <_dtoa_r+0x6a0>
   83062:	2601      	movs	r6, #1
   83064:	9625      	str	r6, [sp, #148]	; 0x94
   83066:	960f      	str	r6, [sp, #60]	; 0x3c
   83068:	46b1      	mov	r9, r6
   8306a:	2100      	movs	r1, #0
   8306c:	6461      	str	r1, [r4, #68]	; 0x44
   8306e:	e6bb      	b.n	82de8 <_dtoa_r+0x730>
   83070:	980a      	ldr	r0, [sp, #40]	; 0x28
   83072:	4641      	mov	r1, r8
   83074:	f001 f954 	bl	84320 <__mcmp>
   83078:	2800      	cmp	r0, #0
   8307a:	f6bf ad8f 	bge.w	82b9c <_dtoa_r+0x4e4>
   8307e:	f8dd e01c 	ldr.w	lr, [sp, #28]
   83082:	990a      	ldr	r1, [sp, #40]	; 0x28
   83084:	f10e 3eff 	add.w	lr, lr, #4294967295
   83088:	4620      	mov	r0, r4
   8308a:	220a      	movs	r2, #10
   8308c:	2300      	movs	r3, #0
   8308e:	f8cd e01c 	str.w	lr, [sp, #28]
   83092:	f000 ff59 	bl	83f48 <__multadd>
   83096:	900a      	str	r0, [sp, #40]	; 0x28
   83098:	980b      	ldr	r0, [sp, #44]	; 0x2c
   8309a:	2800      	cmp	r0, #0
   8309c:	f040 8209 	bne.w	834b2 <_dtoa_r+0xdfa>
   830a0:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   830a4:	e57a      	b.n	82b9c <_dtoa_r+0x4e4>
   830a6:	f8d8 3010 	ldr.w	r3, [r8, #16]
   830aa:	eb08 0383 	add.w	r3, r8, r3, lsl #2
   830ae:	6918      	ldr	r0, [r3, #16]
   830b0:	f000 ff94 	bl	83fdc <__hi0bits>
   830b4:	f1c0 0020 	rsb	r0, r0, #32
   830b8:	e547      	b.n	82b4a <_dtoa_r+0x492>
   830ba:	9809      	ldr	r0, [sp, #36]	; 0x24
   830bc:	f7ff bb2c 	b.w	82718 <_dtoa_r+0x60>
   830c0:	f1ba 0f00 	cmp.w	sl, #0
   830c4:	f47f ad3b 	bne.w	82b3e <_dtoa_r+0x486>
   830c8:	f3cb 0313 	ubfx	r3, fp, #0, #20
   830cc:	2b00      	cmp	r3, #0
   830ce:	f040 817c 	bne.w	833ca <_dtoa_r+0xd12>
   830d2:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
   830d6:	0d3f      	lsrs	r7, r7, #20
   830d8:	053f      	lsls	r7, r7, #20
   830da:	2f00      	cmp	r7, #0
   830dc:	f43f ad30 	beq.w	82b40 <_dtoa_r+0x488>
   830e0:	9a08      	ldr	r2, [sp, #32]
   830e2:	9b06      	ldr	r3, [sp, #24]
   830e4:	3201      	adds	r2, #1
   830e6:	3301      	adds	r3, #1
   830e8:	9208      	str	r2, [sp, #32]
   830ea:	9306      	str	r3, [sp, #24]
   830ec:	2701      	movs	r7, #1
   830ee:	e527      	b.n	82b40 <_dtoa_r+0x488>
   830f0:	9924      	ldr	r1, [sp, #144]	; 0x90
   830f2:	2902      	cmp	r1, #2
   830f4:	f77f ad56 	ble.w	82ba4 <_dtoa_r+0x4ec>
   830f8:	f1b9 0f00 	cmp.w	r9, #0
   830fc:	d18f      	bne.n	8301e <_dtoa_r+0x966>
   830fe:	4641      	mov	r1, r8
   83100:	464b      	mov	r3, r9
   83102:	2205      	movs	r2, #5
   83104:	4620      	mov	r0, r4
   83106:	f000 ff1f 	bl	83f48 <__multadd>
   8310a:	4680      	mov	r8, r0
   8310c:	4641      	mov	r1, r8
   8310e:	980a      	ldr	r0, [sp, #40]	; 0x28
   83110:	f001 f906 	bl	84320 <__mcmp>
   83114:	2800      	cmp	r0, #0
   83116:	dd82      	ble.n	8301e <_dtoa_r+0x966>
   83118:	9d07      	ldr	r5, [sp, #28]
   8311a:	2331      	movs	r3, #49	; 0x31
   8311c:	3501      	adds	r5, #1
   8311e:	9507      	str	r5, [sp, #28]
   83120:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83122:	702b      	strb	r3, [r5, #0]
   83124:	f105 0b01 	add.w	fp, r5, #1
   83128:	e77e      	b.n	83028 <_dtoa_r+0x970>
   8312a:	9807      	ldr	r0, [sp, #28]
   8312c:	9909      	ldr	r1, [sp, #36]	; 0x24
   8312e:	2331      	movs	r3, #49	; 0x31
   83130:	3001      	adds	r0, #1
   83132:	9007      	str	r0, [sp, #28]
   83134:	700b      	strb	r3, [r1, #0]
   83136:	e576      	b.n	82c26 <_dtoa_r+0x56e>
   83138:	46a3      	mov	fp, r4
   8313a:	9c03      	ldr	r4, [sp, #12]
   8313c:	e489      	b.n	82a52 <_dtoa_r+0x39a>
   8313e:	4640      	mov	r0, r8
   83140:	f001 fe4c 	bl	84ddc <__aeabi_i2d>
   83144:	4602      	mov	r2, r0
   83146:	460b      	mov	r3, r1
   83148:	4650      	mov	r0, sl
   8314a:	4659      	mov	r1, fp
   8314c:	f001 feac 	bl	84ea8 <__aeabi_dmul>
   83150:	2200      	movs	r2, #0
   83152:	4b30      	ldr	r3, [pc, #192]	; (83214 <_dtoa_r+0xb5c>)
   83154:	f001 fcf6 	bl	84b44 <__adddf3>
   83158:	4606      	mov	r6, r0
   8315a:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   8315e:	4650      	mov	r0, sl
   83160:	4659      	mov	r1, fp
   83162:	2200      	movs	r2, #0
   83164:	4b2a      	ldr	r3, [pc, #168]	; (83210 <_dtoa_r+0xb58>)
   83166:	f001 fceb 	bl	84b40 <__aeabi_dsub>
   8316a:	4632      	mov	r2, r6
   8316c:	463b      	mov	r3, r7
   8316e:	4682      	mov	sl, r0
   83170:	468b      	mov	fp, r1
   83172:	f002 f929 	bl	853c8 <__aeabi_dcmpgt>
   83176:	2800      	cmp	r0, #0
   83178:	f040 80bd 	bne.w	832f6 <_dtoa_r+0xc3e>
   8317c:	4632      	mov	r2, r6
   8317e:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
   83182:	4650      	mov	r0, sl
   83184:	4659      	mov	r1, fp
   83186:	f002 f901 	bl	8538c <__aeabi_dcmplt>
   8318a:	2800      	cmp	r0, #0
   8318c:	d055      	beq.n	8323a <_dtoa_r+0xb82>
   8318e:	f04f 0800 	mov.w	r8, #0
   83192:	4646      	mov	r6, r8
   83194:	e743      	b.n	8301e <_dtoa_r+0x966>
   83196:	990a      	ldr	r1, [sp, #40]	; 0x28
   83198:	9a0c      	ldr	r2, [sp, #48]	; 0x30
   8319a:	4620      	mov	r0, r4
   8319c:	f001 f814 	bl	841c8 <__pow5mult>
   831a0:	900a      	str	r0, [sp, #40]	; 0x28
   831a2:	e4ba      	b.n	82b1a <_dtoa_r+0x462>
   831a4:	2601      	movs	r6, #1
   831a6:	960b      	str	r6, [sp, #44]	; 0x2c
   831a8:	e602      	b.n	82db0 <_dtoa_r+0x6f8>
   831aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
   831ac:	9e0d      	ldr	r6, [sp, #52]	; 0x34
   831ae:	1b7b      	subs	r3, r7, r5
   831b0:	441e      	add	r6, r3
   831b2:	970c      	str	r7, [sp, #48]	; 0x30
   831b4:	960d      	str	r6, [sp, #52]	; 0x34
   831b6:	2700      	movs	r7, #0
   831b8:	e46f      	b.n	82a9a <_dtoa_r+0x3e2>
   831ba:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   831be:	f04f 0802 	mov.w	r8, #2
   831c2:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
   831c6:	e638      	b.n	82e3a <_dtoa_r+0x782>
   831c8:	2a00      	cmp	r2, #0
   831ca:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   831ce:	46d9      	mov	r9, fp
   831d0:	dd11      	ble.n	831f6 <_dtoa_r+0xb3e>
   831d2:	990a      	ldr	r1, [sp, #40]	; 0x28
   831d4:	2201      	movs	r2, #1
   831d6:	4620      	mov	r0, r4
   831d8:	f001 f844 	bl	84264 <__lshift>
   831dc:	4641      	mov	r1, r8
   831de:	900a      	str	r0, [sp, #40]	; 0x28
   831e0:	f001 f89e 	bl	84320 <__mcmp>
   831e4:	2800      	cmp	r0, #0
   831e6:	f340 815d 	ble.w	834a4 <_dtoa_r+0xdec>
   831ea:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   831ee:	f000 811b 	beq.w	83428 <_dtoa_r+0xd70>
   831f2:	f109 0a31 	add.w	sl, r9, #49	; 0x31
   831f6:	9b06      	ldr	r3, [sp, #24]
   831f8:	4635      	mov	r5, r6
   831fa:	f883 a000 	strb.w	sl, [r3]
   831fe:	f103 0b01 	add.w	fp, r3, #1
   83202:	463e      	mov	r6, r7
   83204:	e50f      	b.n	82c26 <_dtoa_r+0x56e>
   83206:	bf00      	nop
   83208:	3ff00000 	.word	0x3ff00000
   8320c:	40240000 	.word	0x40240000
   83210:	40140000 	.word	0x40140000
   83214:	401c0000 	.word	0x401c0000
   83218:	d103      	bne.n	83222 <_dtoa_r+0xb6a>
   8321a:	f01a 0f01 	tst.w	sl, #1
   8321e:	f47f acf2 	bne.w	82c06 <_dtoa_r+0x54e>
   83222:	465b      	mov	r3, fp
   83224:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   83228:	469b      	mov	fp, r3
   8322a:	2a30      	cmp	r2, #48	; 0x30
   8322c:	f103 33ff 	add.w	r3, r3, #4294967295
   83230:	d0f8      	beq.n	83224 <_dtoa_r+0xb6c>
   83232:	e4f8      	b.n	82c26 <_dtoa_r+0x56e>
   83234:	f8dd 9050 	ldr.w	r9, [sp, #80]	; 0x50
   83238:	4654      	mov	r4, sl
   8323a:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   8323e:	f7ff bb47 	b.w	828d0 <_dtoa_r+0x218>
   83242:	9e07      	ldr	r6, [sp, #28]
   83244:	4275      	negs	r5, r6
   83246:	2d00      	cmp	r5, #0
   83248:	f000 80c2 	beq.w	833d0 <_dtoa_r+0xd18>
   8324c:	4ba3      	ldr	r3, [pc, #652]	; (834dc <_dtoa_r+0xe24>)
   8324e:	f005 020f 	and.w	r2, r5, #15
   83252:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
   83256:	e9d3 2300 	ldrd	r2, r3, [r3]
   8325a:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
   8325e:	f001 fe23 	bl	84ea8 <__aeabi_dmul>
   83262:	112d      	asrs	r5, r5, #4
   83264:	4682      	mov	sl, r0
   83266:	468b      	mov	fp, r1
   83268:	f000 812e 	beq.w	834c8 <_dtoa_r+0xe10>
   8326c:	4e9c      	ldr	r6, [pc, #624]	; (834e0 <_dtoa_r+0xe28>)
   8326e:	f04f 0802 	mov.w	r8, #2
   83272:	07ea      	lsls	r2, r5, #31
   83274:	d505      	bpl.n	83282 <_dtoa_r+0xbca>
   83276:	e9d6 2300 	ldrd	r2, r3, [r6]
   8327a:	f108 0801 	add.w	r8, r8, #1
   8327e:	f001 fe13 	bl	84ea8 <__aeabi_dmul>
   83282:	106d      	asrs	r5, r5, #1
   83284:	f106 0608 	add.w	r6, r6, #8
   83288:	d1f3      	bne.n	83272 <_dtoa_r+0xbba>
   8328a:	4682      	mov	sl, r0
   8328c:	468b      	mov	fp, r1
   8328e:	e5ef      	b.n	82e70 <_dtoa_r+0x7b8>
   83290:	9e07      	ldr	r6, [sp, #28]
   83292:	9d09      	ldr	r5, [sp, #36]	; 0x24
   83294:	2230      	movs	r2, #48	; 0x30
   83296:	702a      	strb	r2, [r5, #0]
   83298:	3601      	adds	r6, #1
   8329a:	2231      	movs	r2, #49	; 0x31
   8329c:	9607      	str	r6, [sp, #28]
   8329e:	701a      	strb	r2, [r3, #0]
   832a0:	f7ff bbd7 	b.w	82a52 <_dtoa_r+0x39a>
   832a4:	6871      	ldr	r1, [r6, #4]
   832a6:	4620      	mov	r0, r4
   832a8:	f000 fe1e 	bl	83ee8 <_Balloc>
   832ac:	6933      	ldr	r3, [r6, #16]
   832ae:	4605      	mov	r5, r0
   832b0:	1c9a      	adds	r2, r3, #2
   832b2:	0092      	lsls	r2, r2, #2
   832b4:	f106 010c 	add.w	r1, r6, #12
   832b8:	300c      	adds	r0, #12
   832ba:	f000 fd35 	bl	83d28 <memcpy>
   832be:	4620      	mov	r0, r4
   832c0:	4629      	mov	r1, r5
   832c2:	2201      	movs	r2, #1
   832c4:	f000 ffce 	bl	84264 <__lshift>
   832c8:	4607      	mov	r7, r0
   832ca:	e503      	b.n	82cd4 <_dtoa_r+0x61c>
   832cc:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   832d0:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   832d4:	f000 80a8 	beq.w	83428 <_dtoa_r+0xd70>
   832d8:	9d06      	ldr	r5, [sp, #24]
   832da:	f10a 0301 	add.w	r3, sl, #1
   832de:	702b      	strb	r3, [r5, #0]
   832e0:	4635      	mov	r5, r6
   832e2:	9e06      	ldr	r6, [sp, #24]
   832e4:	f106 0b01 	add.w	fp, r6, #1
   832e8:	463e      	mov	r6, r7
   832ea:	e49c      	b.n	82c26 <_dtoa_r+0x56e>
   832ec:	4635      	mov	r5, r6
   832ee:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   832f2:	463e      	mov	r6, r7
   832f4:	e47b      	b.n	82bee <_dtoa_r+0x536>
   832f6:	f04f 0800 	mov.w	r8, #0
   832fa:	4646      	mov	r6, r8
   832fc:	e70c      	b.n	83118 <_dtoa_r+0xa60>
   832fe:	4977      	ldr	r1, [pc, #476]	; (834dc <_dtoa_r+0xe24>)
   83300:	f108 35ff 	add.w	r5, r8, #4294967295
   83304:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
   83308:	4632      	mov	r2, r6
   8330a:	463b      	mov	r3, r7
   8330c:	e9d1 0100 	ldrd	r0, r1, [r1]
   83310:	9510      	str	r5, [sp, #64]	; 0x40
   83312:	f001 fdc9 	bl	84ea8 <__aeabi_dmul>
   83316:	e9cd 0114 	strd	r0, r1, [sp, #80]	; 0x50
   8331a:	4659      	mov	r1, fp
   8331c:	4650      	mov	r0, sl
   8331e:	f002 f85d 	bl	853dc <__aeabi_d2iz>
   83322:	4605      	mov	r5, r0
   83324:	f001 fd5a 	bl	84ddc <__aeabi_i2d>
   83328:	4602      	mov	r2, r0
   8332a:	460b      	mov	r3, r1
   8332c:	4650      	mov	r0, sl
   8332e:	4659      	mov	r1, fp
   83330:	f001 fc06 	bl	84b40 <__aeabi_dsub>
   83334:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
   83338:	3530      	adds	r5, #48	; 0x30
   8333a:	f1b8 0f01 	cmp.w	r8, #1
   8333e:	4606      	mov	r6, r0
   83340:	460f      	mov	r7, r1
   83342:	f88e 5000 	strb.w	r5, [lr]
   83346:	f10e 0b01 	add.w	fp, lr, #1
   8334a:	d01e      	beq.n	8338a <_dtoa_r+0xcd2>
   8334c:	9d09      	ldr	r5, [sp, #36]	; 0x24
   8334e:	1e6b      	subs	r3, r5, #1
   83350:	eb03 0a08 	add.w	sl, r3, r8
   83354:	2200      	movs	r2, #0
   83356:	4b63      	ldr	r3, [pc, #396]	; (834e4 <_dtoa_r+0xe2c>)
   83358:	f001 fda6 	bl	84ea8 <__aeabi_dmul>
   8335c:	460f      	mov	r7, r1
   8335e:	4606      	mov	r6, r0
   83360:	f002 f83c 	bl	853dc <__aeabi_d2iz>
   83364:	4680      	mov	r8, r0
   83366:	f001 fd39 	bl	84ddc <__aeabi_i2d>
   8336a:	f108 0830 	add.w	r8, r8, #48	; 0x30
   8336e:	4602      	mov	r2, r0
   83370:	460b      	mov	r3, r1
   83372:	4630      	mov	r0, r6
   83374:	4639      	mov	r1, r7
   83376:	f001 fbe3 	bl	84b40 <__aeabi_dsub>
   8337a:	f805 8f01 	strb.w	r8, [r5, #1]!
   8337e:	4555      	cmp	r5, sl
   83380:	d1e8      	bne.n	83354 <_dtoa_r+0xc9c>
   83382:	9d10      	ldr	r5, [sp, #64]	; 0x40
   83384:	4606      	mov	r6, r0
   83386:	460f      	mov	r7, r1
   83388:	44ab      	add	fp, r5
   8338a:	2200      	movs	r2, #0
   8338c:	4b56      	ldr	r3, [pc, #344]	; (834e8 <_dtoa_r+0xe30>)
   8338e:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	; 0x50
   83392:	f001 fbd7 	bl	84b44 <__adddf3>
   83396:	4632      	mov	r2, r6
   83398:	463b      	mov	r3, r7
   8339a:	f001 fff7 	bl	8538c <__aeabi_dcmplt>
   8339e:	2800      	cmp	r0, #0
   833a0:	d04d      	beq.n	8343e <_dtoa_r+0xd86>
   833a2:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   833a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
   833a6:	9607      	str	r6, [sp, #28]
   833a8:	f81b 5c01 	ldrb.w	r5, [fp, #-1]
   833ac:	f7ff bb4a 	b.w	82a44 <_dtoa_r+0x38c>
   833b0:	9e08      	ldr	r6, [sp, #32]
   833b2:	2300      	movs	r3, #0
   833b4:	ebc9 0506 	rsb	r5, r9, r6
   833b8:	f7ff bb75 	b.w	82aa6 <_dtoa_r+0x3ee>
   833bc:	9b18      	ldr	r3, [sp, #96]	; 0x60
   833be:	9f0c      	ldr	r7, [sp, #48]	; 0x30
   833c0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
   833c4:	9d08      	ldr	r5, [sp, #32]
   833c6:	f7ff bb6e 	b.w	82aa6 <_dtoa_r+0x3ee>
   833ca:	4657      	mov	r7, sl
   833cc:	f7ff bbb8 	b.w	82b40 <_dtoa_r+0x488>
   833d0:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
   833d4:	f04f 0802 	mov.w	r8, #2
   833d8:	e54a      	b.n	82e70 <_dtoa_r+0x7b8>
   833da:	f1b9 0f00 	cmp.w	r9, #0
   833de:	f43f aeae 	beq.w	8313e <_dtoa_r+0xa86>
   833e2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
   833e4:	2e00      	cmp	r6, #0
   833e6:	f77f af28 	ble.w	8323a <_dtoa_r+0xb82>
   833ea:	2200      	movs	r2, #0
   833ec:	4b3d      	ldr	r3, [pc, #244]	; (834e4 <_dtoa_r+0xe2c>)
   833ee:	4650      	mov	r0, sl
   833f0:	4659      	mov	r1, fp
   833f2:	f001 fd59 	bl	84ea8 <__aeabi_dmul>
   833f6:	4682      	mov	sl, r0
   833f8:	f108 0001 	add.w	r0, r8, #1
   833fc:	468b      	mov	fp, r1
   833fe:	f001 fced 	bl	84ddc <__aeabi_i2d>
   83402:	4602      	mov	r2, r0
   83404:	460b      	mov	r3, r1
   83406:	4650      	mov	r0, sl
   83408:	4659      	mov	r1, fp
   8340a:	f001 fd4d 	bl	84ea8 <__aeabi_dmul>
   8340e:	2200      	movs	r2, #0
   83410:	4b36      	ldr	r3, [pc, #216]	; (834ec <_dtoa_r+0xe34>)
   83412:	f001 fb97 	bl	84b44 <__adddf3>
   83416:	9d07      	ldr	r5, [sp, #28]
   83418:	4606      	mov	r6, r0
   8341a:	3d01      	subs	r5, #1
   8341c:	f1a1 7750 	sub.w	r7, r1, #54525952	; 0x3400000
   83420:	9517      	str	r5, [sp, #92]	; 0x5c
   83422:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
   83426:	e543      	b.n	82eb0 <_dtoa_r+0x7f8>
   83428:	4635      	mov	r5, r6
   8342a:	9b06      	ldr	r3, [sp, #24]
   8342c:	9e06      	ldr	r6, [sp, #24]
   8342e:	2239      	movs	r2, #57	; 0x39
   83430:	7032      	strb	r2, [r6, #0]
   83432:	f103 0b01 	add.w	fp, r3, #1
   83436:	463e      	mov	r6, r7
   83438:	9909      	ldr	r1, [sp, #36]	; 0x24
   8343a:	f7ff bbee 	b.w	82c1a <_dtoa_r+0x562>
   8343e:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
   83442:	2000      	movs	r0, #0
   83444:	4928      	ldr	r1, [pc, #160]	; (834e8 <_dtoa_r+0xe30>)
   83446:	f001 fb7b 	bl	84b40 <__aeabi_dsub>
   8344a:	4632      	mov	r2, r6
   8344c:	463b      	mov	r3, r7
   8344e:	f001 ffbb 	bl	853c8 <__aeabi_dcmpgt>
   83452:	2800      	cmp	r0, #0
   83454:	f43f aef1 	beq.w	8323a <_dtoa_r+0xb82>
   83458:	465b      	mov	r3, fp
   8345a:	f813 2c01 	ldrb.w	r2, [r3, #-1]
   8345e:	469b      	mov	fp, r3
   83460:	2a30      	cmp	r2, #48	; 0x30
   83462:	f103 33ff 	add.w	r3, r3, #4294967295
   83466:	d0f8      	beq.n	8345a <_dtoa_r+0xda2>
   83468:	9d17      	ldr	r5, [sp, #92]	; 0x5c
   8346a:	9507      	str	r5, [sp, #28]
   8346c:	f7ff baf1 	b.w	82a52 <_dtoa_r+0x39a>
   83470:	4645      	mov	r5, r8
   83472:	4654      	mov	r4, sl
   83474:	9e17      	ldr	r6, [sp, #92]	; 0x5c
   83476:	9a09      	ldr	r2, [sp, #36]	; 0x24
   83478:	9607      	str	r6, [sp, #28]
   8347a:	f7ff bae3 	b.w	82a44 <_dtoa_r+0x38c>
   8347e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
   83482:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
   83486:	d0cf      	beq.n	83428 <_dtoa_r+0xd70>
   83488:	9b03      	ldr	r3, [sp, #12]
   8348a:	4635      	mov	r5, r6
   8348c:	2b00      	cmp	r3, #0
   8348e:	9e06      	ldr	r6, [sp, #24]
   83490:	bfc8      	it	gt
   83492:	f10b 0a31 	addgt.w	sl, fp, #49	; 0x31
   83496:	f886 a000 	strb.w	sl, [r6]
   8349a:	f106 0b01 	add.w	fp, r6, #1
   8349e:	463e      	mov	r6, r7
   834a0:	f7ff bbc1 	b.w	82c26 <_dtoa_r+0x56e>
   834a4:	f47f aea7 	bne.w	831f6 <_dtoa_r+0xb3e>
   834a8:	f01a 0f01 	tst.w	sl, #1
   834ac:	f43f aea3 	beq.w	831f6 <_dtoa_r+0xb3e>
   834b0:	e69b      	b.n	831ea <_dtoa_r+0xb32>
   834b2:	4631      	mov	r1, r6
   834b4:	4620      	mov	r0, r4
   834b6:	220a      	movs	r2, #10
   834b8:	2300      	movs	r3, #0
   834ba:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
   834be:	f000 fd43 	bl	83f48 <__multadd>
   834c2:	4606      	mov	r6, r0
   834c4:	f7ff bb6a 	b.w	82b9c <_dtoa_r+0x4e4>
   834c8:	f04f 0802 	mov.w	r8, #2
   834cc:	e4d0      	b.n	82e70 <_dtoa_r+0x7b8>
   834ce:	f43f ab50 	beq.w	82b72 <_dtoa_r+0x4ba>
   834d2:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
   834d6:	f7ff bbe0 	b.w	82c9a <_dtoa_r+0x5e2>
   834da:	bf00      	nop
   834dc:	00085aa8 	.word	0x00085aa8
   834e0:	00085b70 	.word	0x00085b70
   834e4:	40240000 	.word	0x40240000
   834e8:	3fe00000 	.word	0x3fe00000
   834ec:	401c0000 	.word	0x401c0000

000834f0 <__libc_fini_array>:
   834f0:	b538      	push	{r3, r4, r5, lr}
   834f2:	4d09      	ldr	r5, [pc, #36]	; (83518 <__libc_fini_array+0x28>)
   834f4:	4c09      	ldr	r4, [pc, #36]	; (8351c <__libc_fini_array+0x2c>)
   834f6:	1b64      	subs	r4, r4, r5
   834f8:	10a4      	asrs	r4, r4, #2
   834fa:	bf18      	it	ne
   834fc:	eb05 0584 	addne.w	r5, r5, r4, lsl #2
   83500:	d005      	beq.n	8350e <__libc_fini_array+0x1e>
   83502:	3c01      	subs	r4, #1
   83504:	f855 3d04 	ldr.w	r3, [r5, #-4]!
   83508:	4798      	blx	r3
   8350a:	2c00      	cmp	r4, #0
   8350c:	d1f9      	bne.n	83502 <__libc_fini_array+0x12>
   8350e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
   83512:	f002 bb51 	b.w	85bb8 <_fini>
   83516:	bf00      	nop
   83518:	00085bc4 	.word	0x00085bc4
   8351c:	00085bc8 	.word	0x00085bc8

00083520 <_malloc_trim_r>:
   83520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   83522:	4d23      	ldr	r5, [pc, #140]	; (835b0 <_malloc_trim_r+0x90>)
   83524:	460f      	mov	r7, r1
   83526:	4604      	mov	r4, r0
   83528:	f000 fcda 	bl	83ee0 <__malloc_lock>
   8352c:	68ab      	ldr	r3, [r5, #8]
   8352e:	685e      	ldr	r6, [r3, #4]
   83530:	f026 0603 	bic.w	r6, r6, #3
   83534:	1bf1      	subs	r1, r6, r7
   83536:	f601 71ef 	addw	r1, r1, #4079	; 0xfef
   8353a:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
   8353e:	f021 010f 	bic.w	r1, r1, #15
   83542:	f5a1 5780 	sub.w	r7, r1, #4096	; 0x1000
   83546:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
   8354a:	db07      	blt.n	8355c <_malloc_trim_r+0x3c>
   8354c:	4620      	mov	r0, r4
   8354e:	2100      	movs	r1, #0
   83550:	f001 f9dc 	bl	8490c <_sbrk_r>
   83554:	68ab      	ldr	r3, [r5, #8]
   83556:	4433      	add	r3, r6
   83558:	4298      	cmp	r0, r3
   8355a:	d004      	beq.n	83566 <_malloc_trim_r+0x46>
   8355c:	4620      	mov	r0, r4
   8355e:	f000 fcc1 	bl	83ee4 <__malloc_unlock>
   83562:	2000      	movs	r0, #0
   83564:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   83566:	4620      	mov	r0, r4
   83568:	4279      	negs	r1, r7
   8356a:	f001 f9cf 	bl	8490c <_sbrk_r>
   8356e:	3001      	adds	r0, #1
   83570:	d00d      	beq.n	8358e <_malloc_trim_r+0x6e>
   83572:	4b10      	ldr	r3, [pc, #64]	; (835b4 <_malloc_trim_r+0x94>)
   83574:	68aa      	ldr	r2, [r5, #8]
   83576:	6819      	ldr	r1, [r3, #0]
   83578:	1bf6      	subs	r6, r6, r7
   8357a:	f046 0601 	orr.w	r6, r6, #1
   8357e:	4620      	mov	r0, r4
   83580:	1bc9      	subs	r1, r1, r7
   83582:	6056      	str	r6, [r2, #4]
   83584:	6019      	str	r1, [r3, #0]
   83586:	f000 fcad 	bl	83ee4 <__malloc_unlock>
   8358a:	2001      	movs	r0, #1
   8358c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
   8358e:	4620      	mov	r0, r4
   83590:	2100      	movs	r1, #0
   83592:	f001 f9bb 	bl	8490c <_sbrk_r>
   83596:	68ab      	ldr	r3, [r5, #8]
   83598:	1ac2      	subs	r2, r0, r3
   8359a:	2a0f      	cmp	r2, #15
   8359c:	ddde      	ble.n	8355c <_malloc_trim_r+0x3c>
   8359e:	4d06      	ldr	r5, [pc, #24]	; (835b8 <_malloc_trim_r+0x98>)
   835a0:	4904      	ldr	r1, [pc, #16]	; (835b4 <_malloc_trim_r+0x94>)
   835a2:	682d      	ldr	r5, [r5, #0]
   835a4:	f042 0201 	orr.w	r2, r2, #1
   835a8:	1b40      	subs	r0, r0, r5
   835aa:	605a      	str	r2, [r3, #4]
   835ac:	6008      	str	r0, [r1, #0]
   835ae:	e7d5      	b.n	8355c <_malloc_trim_r+0x3c>
   835b0:	200705dc 	.word	0x200705dc
   835b4:	20070ab0 	.word	0x20070ab0
   835b8:	200709e8 	.word	0x200709e8

000835bc <_free_r>:
   835bc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   835c0:	460d      	mov	r5, r1
   835c2:	4606      	mov	r6, r0
   835c4:	2900      	cmp	r1, #0
   835c6:	d055      	beq.n	83674 <_free_r+0xb8>
   835c8:	f000 fc8a 	bl	83ee0 <__malloc_lock>
   835cc:	f855 1c04 	ldr.w	r1, [r5, #-4]
   835d0:	f8df c170 	ldr.w	ip, [pc, #368]	; 83744 <_free_r+0x188>
   835d4:	f1a5 0408 	sub.w	r4, r5, #8
   835d8:	f021 0301 	bic.w	r3, r1, #1
   835dc:	18e2      	adds	r2, r4, r3
   835de:	f8dc 0008 	ldr.w	r0, [ip, #8]
   835e2:	6857      	ldr	r7, [r2, #4]
   835e4:	4290      	cmp	r0, r2
   835e6:	f027 0703 	bic.w	r7, r7, #3
   835ea:	d068      	beq.n	836be <_free_r+0x102>
   835ec:	f011 0101 	ands.w	r1, r1, #1
   835f0:	6057      	str	r7, [r2, #4]
   835f2:	d032      	beq.n	8365a <_free_r+0x9e>
   835f4:	2100      	movs	r1, #0
   835f6:	19d0      	adds	r0, r2, r7
   835f8:	6840      	ldr	r0, [r0, #4]
   835fa:	07c0      	lsls	r0, r0, #31
   835fc:	d406      	bmi.n	8360c <_free_r+0x50>
   835fe:	443b      	add	r3, r7
   83600:	6890      	ldr	r0, [r2, #8]
   83602:	2900      	cmp	r1, #0
   83604:	d04d      	beq.n	836a2 <_free_r+0xe6>
   83606:	68d2      	ldr	r2, [r2, #12]
   83608:	60c2      	str	r2, [r0, #12]
   8360a:	6090      	str	r0, [r2, #8]
   8360c:	f043 0201 	orr.w	r2, r3, #1
   83610:	6062      	str	r2, [r4, #4]
   83612:	50e3      	str	r3, [r4, r3]
   83614:	b9e1      	cbnz	r1, 83650 <_free_r+0x94>
   83616:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
   8361a:	d32d      	bcc.n	83678 <_free_r+0xbc>
   8361c:	0a5a      	lsrs	r2, r3, #9
   8361e:	2a04      	cmp	r2, #4
   83620:	d869      	bhi.n	836f6 <_free_r+0x13a>
   83622:	0998      	lsrs	r0, r3, #6
   83624:	3038      	adds	r0, #56	; 0x38
   83626:	0041      	lsls	r1, r0, #1
   83628:	eb0c 0c81 	add.w	ip, ip, r1, lsl #2
   8362c:	f8dc 2008 	ldr.w	r2, [ip, #8]
   83630:	4944      	ldr	r1, [pc, #272]	; (83744 <_free_r+0x188>)
   83632:	4562      	cmp	r2, ip
   83634:	d065      	beq.n	83702 <_free_r+0x146>
   83636:	6851      	ldr	r1, [r2, #4]
   83638:	f021 0103 	bic.w	r1, r1, #3
   8363c:	428b      	cmp	r3, r1
   8363e:	d202      	bcs.n	83646 <_free_r+0x8a>
   83640:	6892      	ldr	r2, [r2, #8]
   83642:	4594      	cmp	ip, r2
   83644:	d1f7      	bne.n	83636 <_free_r+0x7a>
   83646:	68d3      	ldr	r3, [r2, #12]
   83648:	60e3      	str	r3, [r4, #12]
   8364a:	60a2      	str	r2, [r4, #8]
   8364c:	609c      	str	r4, [r3, #8]
   8364e:	60d4      	str	r4, [r2, #12]
   83650:	4630      	mov	r0, r6
   83652:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   83656:	f000 bc45 	b.w	83ee4 <__malloc_unlock>
   8365a:	f855 5c08 	ldr.w	r5, [r5, #-8]
   8365e:	f10c 0808 	add.w	r8, ip, #8
   83662:	1b64      	subs	r4, r4, r5
   83664:	68a0      	ldr	r0, [r4, #8]
   83666:	442b      	add	r3, r5
   83668:	4540      	cmp	r0, r8
   8366a:	d042      	beq.n	836f2 <_free_r+0x136>
   8366c:	68e5      	ldr	r5, [r4, #12]
   8366e:	60c5      	str	r5, [r0, #12]
   83670:	60a8      	str	r0, [r5, #8]
   83672:	e7c0      	b.n	835f6 <_free_r+0x3a>
   83674:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   83678:	08db      	lsrs	r3, r3, #3
   8367a:	109a      	asrs	r2, r3, #2
   8367c:	2001      	movs	r0, #1
   8367e:	4090      	lsls	r0, r2
   83680:	f8dc 1004 	ldr.w	r1, [ip, #4]
   83684:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
   83688:	689a      	ldr	r2, [r3, #8]
   8368a:	4301      	orrs	r1, r0
   8368c:	60a2      	str	r2, [r4, #8]
   8368e:	60e3      	str	r3, [r4, #12]
   83690:	f8cc 1004 	str.w	r1, [ip, #4]
   83694:	4630      	mov	r0, r6
   83696:	609c      	str	r4, [r3, #8]
   83698:	60d4      	str	r4, [r2, #12]
   8369a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   8369e:	f000 bc21 	b.w	83ee4 <__malloc_unlock>
   836a2:	4d29      	ldr	r5, [pc, #164]	; (83748 <_free_r+0x18c>)
   836a4:	42a8      	cmp	r0, r5
   836a6:	d1ae      	bne.n	83606 <_free_r+0x4a>
   836a8:	f043 0201 	orr.w	r2, r3, #1
   836ac:	f8cc 4014 	str.w	r4, [ip, #20]
   836b0:	f8cc 4010 	str.w	r4, [ip, #16]
   836b4:	60e0      	str	r0, [r4, #12]
   836b6:	60a0      	str	r0, [r4, #8]
   836b8:	6062      	str	r2, [r4, #4]
   836ba:	50e3      	str	r3, [r4, r3]
   836bc:	e7c8      	b.n	83650 <_free_r+0x94>
   836be:	441f      	add	r7, r3
   836c0:	07cb      	lsls	r3, r1, #31
   836c2:	d407      	bmi.n	836d4 <_free_r+0x118>
   836c4:	f855 1c08 	ldr.w	r1, [r5, #-8]
   836c8:	1a64      	subs	r4, r4, r1
   836ca:	68e3      	ldr	r3, [r4, #12]
   836cc:	68a2      	ldr	r2, [r4, #8]
   836ce:	440f      	add	r7, r1
   836d0:	60d3      	str	r3, [r2, #12]
   836d2:	609a      	str	r2, [r3, #8]
   836d4:	4b1d      	ldr	r3, [pc, #116]	; (8374c <_free_r+0x190>)
   836d6:	f047 0201 	orr.w	r2, r7, #1
   836da:	681b      	ldr	r3, [r3, #0]
   836dc:	6062      	str	r2, [r4, #4]
   836de:	429f      	cmp	r7, r3
   836e0:	f8cc 4008 	str.w	r4, [ip, #8]
   836e4:	d3b4      	bcc.n	83650 <_free_r+0x94>
   836e6:	4b1a      	ldr	r3, [pc, #104]	; (83750 <_free_r+0x194>)
   836e8:	4630      	mov	r0, r6
   836ea:	6819      	ldr	r1, [r3, #0]
   836ec:	f7ff ff18 	bl	83520 <_malloc_trim_r>
   836f0:	e7ae      	b.n	83650 <_free_r+0x94>
   836f2:	2101      	movs	r1, #1
   836f4:	e77f      	b.n	835f6 <_free_r+0x3a>
   836f6:	2a14      	cmp	r2, #20
   836f8:	d80b      	bhi.n	83712 <_free_r+0x156>
   836fa:	f102 005b 	add.w	r0, r2, #91	; 0x5b
   836fe:	0041      	lsls	r1, r0, #1
   83700:	e792      	b.n	83628 <_free_r+0x6c>
   83702:	1080      	asrs	r0, r0, #2
   83704:	2501      	movs	r5, #1
   83706:	4085      	lsls	r5, r0
   83708:	6848      	ldr	r0, [r1, #4]
   8370a:	4613      	mov	r3, r2
   8370c:	4328      	orrs	r0, r5
   8370e:	6048      	str	r0, [r1, #4]
   83710:	e79a      	b.n	83648 <_free_r+0x8c>
   83712:	2a54      	cmp	r2, #84	; 0x54
   83714:	d803      	bhi.n	8371e <_free_r+0x162>
   83716:	0b18      	lsrs	r0, r3, #12
   83718:	306e      	adds	r0, #110	; 0x6e
   8371a:	0041      	lsls	r1, r0, #1
   8371c:	e784      	b.n	83628 <_free_r+0x6c>
   8371e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
   83722:	d803      	bhi.n	8372c <_free_r+0x170>
   83724:	0bd8      	lsrs	r0, r3, #15
   83726:	3077      	adds	r0, #119	; 0x77
   83728:	0041      	lsls	r1, r0, #1
   8372a:	e77d      	b.n	83628 <_free_r+0x6c>
   8372c:	f240 5154 	movw	r1, #1364	; 0x554
   83730:	428a      	cmp	r2, r1
   83732:	d803      	bhi.n	8373c <_free_r+0x180>
   83734:	0c98      	lsrs	r0, r3, #18
   83736:	307c      	adds	r0, #124	; 0x7c
   83738:	0041      	lsls	r1, r0, #1
   8373a:	e775      	b.n	83628 <_free_r+0x6c>
   8373c:	21fc      	movs	r1, #252	; 0xfc
   8373e:	207e      	movs	r0, #126	; 0x7e
   83740:	e772      	b.n	83628 <_free_r+0x6c>
   83742:	bf00      	nop
   83744:	200705dc 	.word	0x200705dc
   83748:	200705e4 	.word	0x200705e4
   8374c:	200709e4 	.word	0x200709e4
   83750:	20070aac 	.word	0x20070aac

00083754 <_localeconv_r>:
   83754:	4800      	ldr	r0, [pc, #0]	; (83758 <_localeconv_r+0x4>)
   83756:	4770      	bx	lr
   83758:	200705a4 	.word	0x200705a4

0008375c <_malloc_r>:
   8375c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   83760:	f101 050b 	add.w	r5, r1, #11
   83764:	2d16      	cmp	r5, #22
   83766:	b083      	sub	sp, #12
   83768:	4606      	mov	r6, r0
   8376a:	d927      	bls.n	837bc <_malloc_r+0x60>
   8376c:	f035 0507 	bics.w	r5, r5, #7
   83770:	d427      	bmi.n	837c2 <_malloc_r+0x66>
   83772:	42a9      	cmp	r1, r5
   83774:	d825      	bhi.n	837c2 <_malloc_r+0x66>
   83776:	4630      	mov	r0, r6
   83778:	f000 fbb2 	bl	83ee0 <__malloc_lock>
   8377c:	f5b5 7ffc 	cmp.w	r5, #504	; 0x1f8
   83780:	d226      	bcs.n	837d0 <_malloc_r+0x74>
   83782:	4fc1      	ldr	r7, [pc, #772]	; (83a88 <_malloc_r+0x32c>)
   83784:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
   83788:	eb07 03cc 	add.w	r3, r7, ip, lsl #3
   8378c:	68dc      	ldr	r4, [r3, #12]
   8378e:	429c      	cmp	r4, r3
   83790:	f000 81d2 	beq.w	83b38 <_malloc_r+0x3dc>
   83794:	6863      	ldr	r3, [r4, #4]
   83796:	68e2      	ldr	r2, [r4, #12]
   83798:	f023 0303 	bic.w	r3, r3, #3
   8379c:	4423      	add	r3, r4
   8379e:	6858      	ldr	r0, [r3, #4]
   837a0:	68a1      	ldr	r1, [r4, #8]
   837a2:	f040 0501 	orr.w	r5, r0, #1
   837a6:	60ca      	str	r2, [r1, #12]
   837a8:	4630      	mov	r0, r6
   837aa:	6091      	str	r1, [r2, #8]
   837ac:	605d      	str	r5, [r3, #4]
   837ae:	f000 fb99 	bl	83ee4 <__malloc_unlock>
   837b2:	3408      	adds	r4, #8
   837b4:	4620      	mov	r0, r4
   837b6:	b003      	add	sp, #12
   837b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837bc:	2510      	movs	r5, #16
   837be:	42a9      	cmp	r1, r5
   837c0:	d9d9      	bls.n	83776 <_malloc_r+0x1a>
   837c2:	2400      	movs	r4, #0
   837c4:	230c      	movs	r3, #12
   837c6:	4620      	mov	r0, r4
   837c8:	6033      	str	r3, [r6, #0]
   837ca:	b003      	add	sp, #12
   837cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   837d0:	ea5f 2c55 	movs.w	ip, r5, lsr #9
   837d4:	f000 8089 	beq.w	838ea <_malloc_r+0x18e>
   837d8:	f1bc 0f04 	cmp.w	ip, #4
   837dc:	f200 8160 	bhi.w	83aa0 <_malloc_r+0x344>
   837e0:	ea4f 1c95 	mov.w	ip, r5, lsr #6
   837e4:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
   837e8:	ea4f 014c 	mov.w	r1, ip, lsl #1
   837ec:	4fa6      	ldr	r7, [pc, #664]	; (83a88 <_malloc_r+0x32c>)
   837ee:	eb07 0181 	add.w	r1, r7, r1, lsl #2
   837f2:	68cc      	ldr	r4, [r1, #12]
   837f4:	42a1      	cmp	r1, r4
   837f6:	d105      	bne.n	83804 <_malloc_r+0xa8>
   837f8:	e00c      	b.n	83814 <_malloc_r+0xb8>
   837fa:	2b00      	cmp	r3, #0
   837fc:	da79      	bge.n	838f2 <_malloc_r+0x196>
   837fe:	68e4      	ldr	r4, [r4, #12]
   83800:	42a1      	cmp	r1, r4
   83802:	d007      	beq.n	83814 <_malloc_r+0xb8>
   83804:	6862      	ldr	r2, [r4, #4]
   83806:	f022 0203 	bic.w	r2, r2, #3
   8380a:	1b53      	subs	r3, r2, r5
   8380c:	2b0f      	cmp	r3, #15
   8380e:	ddf4      	ble.n	837fa <_malloc_r+0x9e>
   83810:	f10c 3cff 	add.w	ip, ip, #4294967295
   83814:	f10c 0c01 	add.w	ip, ip, #1
   83818:	4b9b      	ldr	r3, [pc, #620]	; (83a88 <_malloc_r+0x32c>)
   8381a:	693c      	ldr	r4, [r7, #16]
   8381c:	f103 0e08 	add.w	lr, r3, #8
   83820:	4574      	cmp	r4, lr
   83822:	f000 817e 	beq.w	83b22 <_malloc_r+0x3c6>
   83826:	6861      	ldr	r1, [r4, #4]
   83828:	f021 0103 	bic.w	r1, r1, #3
   8382c:	1b4a      	subs	r2, r1, r5
   8382e:	2a0f      	cmp	r2, #15
   83830:	f300 8164 	bgt.w	83afc <_malloc_r+0x3a0>
   83834:	2a00      	cmp	r2, #0
   83836:	f8c3 e014 	str.w	lr, [r3, #20]
   8383a:	f8c3 e010 	str.w	lr, [r3, #16]
   8383e:	da69      	bge.n	83914 <_malloc_r+0x1b8>
   83840:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
   83844:	f080 813a 	bcs.w	83abc <_malloc_r+0x360>
   83848:	08c9      	lsrs	r1, r1, #3
   8384a:	108a      	asrs	r2, r1, #2
   8384c:	f04f 0801 	mov.w	r8, #1
   83850:	fa08 f802 	lsl.w	r8, r8, r2
   83854:	eb03 01c1 	add.w	r1, r3, r1, lsl #3
   83858:	685a      	ldr	r2, [r3, #4]
   8385a:	6888      	ldr	r0, [r1, #8]
   8385c:	ea48 0202 	orr.w	r2, r8, r2
   83860:	60a0      	str	r0, [r4, #8]
   83862:	60e1      	str	r1, [r4, #12]
   83864:	605a      	str	r2, [r3, #4]
   83866:	608c      	str	r4, [r1, #8]
   83868:	60c4      	str	r4, [r0, #12]
   8386a:	ea4f 03ac 	mov.w	r3, ip, asr #2
   8386e:	2001      	movs	r0, #1
   83870:	4098      	lsls	r0, r3
   83872:	4290      	cmp	r0, r2
   83874:	d85b      	bhi.n	8392e <_malloc_r+0x1d2>
   83876:	4202      	tst	r2, r0
   83878:	d106      	bne.n	83888 <_malloc_r+0x12c>
   8387a:	f02c 0c03 	bic.w	ip, ip, #3
   8387e:	0040      	lsls	r0, r0, #1
   83880:	4202      	tst	r2, r0
   83882:	f10c 0c04 	add.w	ip, ip, #4
   83886:	d0fa      	beq.n	8387e <_malloc_r+0x122>
   83888:	eb07 08cc 	add.w	r8, r7, ip, lsl #3
   8388c:	4644      	mov	r4, r8
   8388e:	46e1      	mov	r9, ip
   83890:	68e3      	ldr	r3, [r4, #12]
   83892:	429c      	cmp	r4, r3
   83894:	d107      	bne.n	838a6 <_malloc_r+0x14a>
   83896:	e146      	b.n	83b26 <_malloc_r+0x3ca>
   83898:	2a00      	cmp	r2, #0
   8389a:	f280 8157 	bge.w	83b4c <_malloc_r+0x3f0>
   8389e:	68db      	ldr	r3, [r3, #12]
   838a0:	429c      	cmp	r4, r3
   838a2:	f000 8140 	beq.w	83b26 <_malloc_r+0x3ca>
   838a6:	6859      	ldr	r1, [r3, #4]
   838a8:	f021 0103 	bic.w	r1, r1, #3
   838ac:	1b4a      	subs	r2, r1, r5
   838ae:	2a0f      	cmp	r2, #15
   838b0:	ddf2      	ble.n	83898 <_malloc_r+0x13c>
   838b2:	461c      	mov	r4, r3
   838b4:	f854 cf08 	ldr.w	ip, [r4, #8]!
   838b8:	68d9      	ldr	r1, [r3, #12]
   838ba:	f045 0901 	orr.w	r9, r5, #1
   838be:	f042 0801 	orr.w	r8, r2, #1
   838c2:	441d      	add	r5, r3
   838c4:	f8c3 9004 	str.w	r9, [r3, #4]
   838c8:	4630      	mov	r0, r6
   838ca:	f8cc 100c 	str.w	r1, [ip, #12]
   838ce:	f8c1 c008 	str.w	ip, [r1, #8]
   838d2:	617d      	str	r5, [r7, #20]
   838d4:	613d      	str	r5, [r7, #16]
   838d6:	f8c5 e00c 	str.w	lr, [r5, #12]
   838da:	f8c5 e008 	str.w	lr, [r5, #8]
   838de:	f8c5 8004 	str.w	r8, [r5, #4]
   838e2:	50aa      	str	r2, [r5, r2]
   838e4:	f000 fafe 	bl	83ee4 <__malloc_unlock>
   838e8:	e764      	b.n	837b4 <_malloc_r+0x58>
   838ea:	217e      	movs	r1, #126	; 0x7e
   838ec:	f04f 0c3f 	mov.w	ip, #63	; 0x3f
   838f0:	e77c      	b.n	837ec <_malloc_r+0x90>
   838f2:	4422      	add	r2, r4
   838f4:	6850      	ldr	r0, [r2, #4]
   838f6:	68e3      	ldr	r3, [r4, #12]
   838f8:	68a1      	ldr	r1, [r4, #8]
   838fa:	f040 0501 	orr.w	r5, r0, #1
   838fe:	60cb      	str	r3, [r1, #12]
   83900:	4630      	mov	r0, r6
   83902:	6099      	str	r1, [r3, #8]
   83904:	6055      	str	r5, [r2, #4]
   83906:	f000 faed 	bl	83ee4 <__malloc_unlock>
   8390a:	3408      	adds	r4, #8
   8390c:	4620      	mov	r0, r4
   8390e:	b003      	add	sp, #12
   83910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83914:	4421      	add	r1, r4
   83916:	684b      	ldr	r3, [r1, #4]
   83918:	4630      	mov	r0, r6
   8391a:	f043 0301 	orr.w	r3, r3, #1
   8391e:	604b      	str	r3, [r1, #4]
   83920:	f000 fae0 	bl	83ee4 <__malloc_unlock>
   83924:	3408      	adds	r4, #8
   83926:	4620      	mov	r0, r4
   83928:	b003      	add	sp, #12
   8392a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   8392e:	68bc      	ldr	r4, [r7, #8]
   83930:	6863      	ldr	r3, [r4, #4]
   83932:	f023 0903 	bic.w	r9, r3, #3
   83936:	45a9      	cmp	r9, r5
   83938:	d304      	bcc.n	83944 <_malloc_r+0x1e8>
   8393a:	ebc5 0309 	rsb	r3, r5, r9
   8393e:	2b0f      	cmp	r3, #15
   83940:	f300 8091 	bgt.w	83a66 <_malloc_r+0x30a>
   83944:	4b51      	ldr	r3, [pc, #324]	; (83a8c <_malloc_r+0x330>)
   83946:	4a52      	ldr	r2, [pc, #328]	; (83a90 <_malloc_r+0x334>)
   83948:	6819      	ldr	r1, [r3, #0]
   8394a:	6813      	ldr	r3, [r2, #0]
   8394c:	eb05 0a01 	add.w	sl, r5, r1
   83950:	3301      	adds	r3, #1
   83952:	eb04 0b09 	add.w	fp, r4, r9
   83956:	f000 8161 	beq.w	83c1c <_malloc_r+0x4c0>
   8395a:	f50a 5a80 	add.w	sl, sl, #4096	; 0x1000
   8395e:	f10a 0a0f 	add.w	sl, sl, #15
   83962:	f42a 6a7f 	bic.w	sl, sl, #4080	; 0xff0
   83966:	f02a 0a0f 	bic.w	sl, sl, #15
   8396a:	4630      	mov	r0, r6
   8396c:	4651      	mov	r1, sl
   8396e:	9201      	str	r2, [sp, #4]
   83970:	f000 ffcc 	bl	8490c <_sbrk_r>
   83974:	f1b0 3fff 	cmp.w	r0, #4294967295
   83978:	4680      	mov	r8, r0
   8397a:	9a01      	ldr	r2, [sp, #4]
   8397c:	f000 8101 	beq.w	83b82 <_malloc_r+0x426>
   83980:	4583      	cmp	fp, r0
   83982:	f200 80fb 	bhi.w	83b7c <_malloc_r+0x420>
   83986:	f8df c114 	ldr.w	ip, [pc, #276]	; 83a9c <_malloc_r+0x340>
   8398a:	45c3      	cmp	fp, r8
   8398c:	f8dc 3000 	ldr.w	r3, [ip]
   83990:	4453      	add	r3, sl
   83992:	f8cc 3000 	str.w	r3, [ip]
   83996:	f000 814a 	beq.w	83c2e <_malloc_r+0x4d2>
   8399a:	6812      	ldr	r2, [r2, #0]
   8399c:	493c      	ldr	r1, [pc, #240]	; (83a90 <_malloc_r+0x334>)
   8399e:	3201      	adds	r2, #1
   839a0:	bf1b      	ittet	ne
   839a2:	ebcb 0b08 	rsbne	fp, fp, r8
   839a6:	445b      	addne	r3, fp
   839a8:	f8c1 8000 	streq.w	r8, [r1]
   839ac:	f8cc 3000 	strne.w	r3, [ip]
   839b0:	f018 0307 	ands.w	r3, r8, #7
   839b4:	f000 8114 	beq.w	83be0 <_malloc_r+0x484>
   839b8:	f1c3 0208 	rsb	r2, r3, #8
   839bc:	f5c3 5380 	rsb	r3, r3, #4096	; 0x1000
   839c0:	4490      	add	r8, r2
   839c2:	3308      	adds	r3, #8
   839c4:	44c2      	add	sl, r8
   839c6:	f3ca 0a0b 	ubfx	sl, sl, #0, #12
   839ca:	ebca 0a03 	rsb	sl, sl, r3
   839ce:	4651      	mov	r1, sl
   839d0:	4630      	mov	r0, r6
   839d2:	f8cd c004 	str.w	ip, [sp, #4]
   839d6:	f000 ff99 	bl	8490c <_sbrk_r>
   839da:	1c43      	adds	r3, r0, #1
   839dc:	f8dd c004 	ldr.w	ip, [sp, #4]
   839e0:	f000 8135 	beq.w	83c4e <_malloc_r+0x4f2>
   839e4:	ebc8 0200 	rsb	r2, r8, r0
   839e8:	4452      	add	r2, sl
   839ea:	f042 0201 	orr.w	r2, r2, #1
   839ee:	f8dc 3000 	ldr.w	r3, [ip]
   839f2:	42bc      	cmp	r4, r7
   839f4:	4453      	add	r3, sl
   839f6:	f8c7 8008 	str.w	r8, [r7, #8]
   839fa:	f8cc 3000 	str.w	r3, [ip]
   839fe:	f8c8 2004 	str.w	r2, [r8, #4]
   83a02:	f8df a098 	ldr.w	sl, [pc, #152]	; 83a9c <_malloc_r+0x340>
   83a06:	d015      	beq.n	83a34 <_malloc_r+0x2d8>
   83a08:	f1b9 0f0f 	cmp.w	r9, #15
   83a0c:	f240 80eb 	bls.w	83be6 <_malloc_r+0x48a>
   83a10:	6861      	ldr	r1, [r4, #4]
   83a12:	f1a9 020c 	sub.w	r2, r9, #12
   83a16:	f022 0207 	bic.w	r2, r2, #7
   83a1a:	f001 0101 	and.w	r1, r1, #1
   83a1e:	ea42 0e01 	orr.w	lr, r2, r1
   83a22:	2005      	movs	r0, #5
   83a24:	18a1      	adds	r1, r4, r2
   83a26:	2a0f      	cmp	r2, #15
   83a28:	f8c4 e004 	str.w	lr, [r4, #4]
   83a2c:	6048      	str	r0, [r1, #4]
   83a2e:	6088      	str	r0, [r1, #8]
   83a30:	f200 8111 	bhi.w	83c56 <_malloc_r+0x4fa>
   83a34:	4a17      	ldr	r2, [pc, #92]	; (83a94 <_malloc_r+0x338>)
   83a36:	68bc      	ldr	r4, [r7, #8]
   83a38:	6811      	ldr	r1, [r2, #0]
   83a3a:	428b      	cmp	r3, r1
   83a3c:	bf88      	it	hi
   83a3e:	6013      	strhi	r3, [r2, #0]
   83a40:	4a15      	ldr	r2, [pc, #84]	; (83a98 <_malloc_r+0x33c>)
   83a42:	6811      	ldr	r1, [r2, #0]
   83a44:	428b      	cmp	r3, r1
   83a46:	bf88      	it	hi
   83a48:	6013      	strhi	r3, [r2, #0]
   83a4a:	6862      	ldr	r2, [r4, #4]
   83a4c:	f022 0203 	bic.w	r2, r2, #3
   83a50:	4295      	cmp	r5, r2
   83a52:	ebc5 0302 	rsb	r3, r5, r2
   83a56:	d801      	bhi.n	83a5c <_malloc_r+0x300>
   83a58:	2b0f      	cmp	r3, #15
   83a5a:	dc04      	bgt.n	83a66 <_malloc_r+0x30a>
   83a5c:	4630      	mov	r0, r6
   83a5e:	f000 fa41 	bl	83ee4 <__malloc_unlock>
   83a62:	2400      	movs	r4, #0
   83a64:	e6a6      	b.n	837b4 <_malloc_r+0x58>
   83a66:	f045 0201 	orr.w	r2, r5, #1
   83a6a:	f043 0301 	orr.w	r3, r3, #1
   83a6e:	4425      	add	r5, r4
   83a70:	6062      	str	r2, [r4, #4]
   83a72:	4630      	mov	r0, r6
   83a74:	60bd      	str	r5, [r7, #8]
   83a76:	606b      	str	r3, [r5, #4]
   83a78:	f000 fa34 	bl	83ee4 <__malloc_unlock>
   83a7c:	3408      	adds	r4, #8
   83a7e:	4620      	mov	r0, r4
   83a80:	b003      	add	sp, #12
   83a82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   83a86:	bf00      	nop
   83a88:	200705dc 	.word	0x200705dc
   83a8c:	20070aac 	.word	0x20070aac
   83a90:	200709e8 	.word	0x200709e8
   83a94:	20070aa8 	.word	0x20070aa8
   83a98:	20070aa4 	.word	0x20070aa4
   83a9c:	20070ab0 	.word	0x20070ab0
   83aa0:	f1bc 0f14 	cmp.w	ip, #20
   83aa4:	d961      	bls.n	83b6a <_malloc_r+0x40e>
   83aa6:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
   83aaa:	f200 808f 	bhi.w	83bcc <_malloc_r+0x470>
   83aae:	ea4f 3c15 	mov.w	ip, r5, lsr #12
   83ab2:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
   83ab6:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83aba:	e697      	b.n	837ec <_malloc_r+0x90>
   83abc:	0a4b      	lsrs	r3, r1, #9
   83abe:	2b04      	cmp	r3, #4
   83ac0:	d958      	bls.n	83b74 <_malloc_r+0x418>
   83ac2:	2b14      	cmp	r3, #20
   83ac4:	f200 80ad 	bhi.w	83c22 <_malloc_r+0x4c6>
   83ac8:	f103 025b 	add.w	r2, r3, #91	; 0x5b
   83acc:	0050      	lsls	r0, r2, #1
   83ace:	eb07 0080 	add.w	r0, r7, r0, lsl #2
   83ad2:	6883      	ldr	r3, [r0, #8]
   83ad4:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 83c90 <_malloc_r+0x534>
   83ad8:	4283      	cmp	r3, r0
   83ada:	f000 808a 	beq.w	83bf2 <_malloc_r+0x496>
   83ade:	685a      	ldr	r2, [r3, #4]
   83ae0:	f022 0203 	bic.w	r2, r2, #3
   83ae4:	4291      	cmp	r1, r2
   83ae6:	d202      	bcs.n	83aee <_malloc_r+0x392>
   83ae8:	689b      	ldr	r3, [r3, #8]
   83aea:	4298      	cmp	r0, r3
   83aec:	d1f7      	bne.n	83ade <_malloc_r+0x382>
   83aee:	68d9      	ldr	r1, [r3, #12]
   83af0:	687a      	ldr	r2, [r7, #4]
   83af2:	60e1      	str	r1, [r4, #12]
   83af4:	60a3      	str	r3, [r4, #8]
   83af6:	608c      	str	r4, [r1, #8]
   83af8:	60dc      	str	r4, [r3, #12]
   83afa:	e6b6      	b.n	8386a <_malloc_r+0x10e>
   83afc:	f045 0701 	orr.w	r7, r5, #1
   83b00:	f042 0101 	orr.w	r1, r2, #1
   83b04:	4425      	add	r5, r4
   83b06:	6067      	str	r7, [r4, #4]
   83b08:	4630      	mov	r0, r6
   83b0a:	615d      	str	r5, [r3, #20]
   83b0c:	611d      	str	r5, [r3, #16]
   83b0e:	f8c5 e00c 	str.w	lr, [r5, #12]
   83b12:	f8c5 e008 	str.w	lr, [r5, #8]
   83b16:	6069      	str	r1, [r5, #4]
   83b18:	50aa      	str	r2, [r5, r2]
   83b1a:	3408      	adds	r4, #8
   83b1c:	f000 f9e2 	bl	83ee4 <__malloc_unlock>
   83b20:	e648      	b.n	837b4 <_malloc_r+0x58>
   83b22:	685a      	ldr	r2, [r3, #4]
   83b24:	e6a1      	b.n	8386a <_malloc_r+0x10e>
   83b26:	f109 0901 	add.w	r9, r9, #1
   83b2a:	f019 0f03 	tst.w	r9, #3
   83b2e:	f104 0408 	add.w	r4, r4, #8
   83b32:	f47f aead 	bne.w	83890 <_malloc_r+0x134>
   83b36:	e02d      	b.n	83b94 <_malloc_r+0x438>
   83b38:	f104 0308 	add.w	r3, r4, #8
   83b3c:	6964      	ldr	r4, [r4, #20]
   83b3e:	42a3      	cmp	r3, r4
   83b40:	bf08      	it	eq
   83b42:	f10c 0c02 	addeq.w	ip, ip, #2
   83b46:	f43f ae67 	beq.w	83818 <_malloc_r+0xbc>
   83b4a:	e623      	b.n	83794 <_malloc_r+0x38>
   83b4c:	4419      	add	r1, r3
   83b4e:	6848      	ldr	r0, [r1, #4]
   83b50:	461c      	mov	r4, r3
   83b52:	f854 2f08 	ldr.w	r2, [r4, #8]!
   83b56:	68db      	ldr	r3, [r3, #12]
   83b58:	f040 0501 	orr.w	r5, r0, #1
   83b5c:	604d      	str	r5, [r1, #4]
   83b5e:	4630      	mov	r0, r6
   83b60:	60d3      	str	r3, [r2, #12]
   83b62:	609a      	str	r2, [r3, #8]
   83b64:	f000 f9be 	bl	83ee4 <__malloc_unlock>
   83b68:	e624      	b.n	837b4 <_malloc_r+0x58>
   83b6a:	f10c 0c5b 	add.w	ip, ip, #91	; 0x5b
   83b6e:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83b72:	e63b      	b.n	837ec <_malloc_r+0x90>
   83b74:	098a      	lsrs	r2, r1, #6
   83b76:	3238      	adds	r2, #56	; 0x38
   83b78:	0050      	lsls	r0, r2, #1
   83b7a:	e7a8      	b.n	83ace <_malloc_r+0x372>
   83b7c:	42bc      	cmp	r4, r7
   83b7e:	f43f af02 	beq.w	83986 <_malloc_r+0x22a>
   83b82:	68bc      	ldr	r4, [r7, #8]
   83b84:	6862      	ldr	r2, [r4, #4]
   83b86:	f022 0203 	bic.w	r2, r2, #3
   83b8a:	e761      	b.n	83a50 <_malloc_r+0x2f4>
   83b8c:	f8d8 8000 	ldr.w	r8, [r8]
   83b90:	4598      	cmp	r8, r3
   83b92:	d17a      	bne.n	83c8a <_malloc_r+0x52e>
   83b94:	f01c 0f03 	tst.w	ip, #3
   83b98:	f1a8 0308 	sub.w	r3, r8, #8
   83b9c:	f10c 3cff 	add.w	ip, ip, #4294967295
   83ba0:	d1f4      	bne.n	83b8c <_malloc_r+0x430>
   83ba2:	687b      	ldr	r3, [r7, #4]
   83ba4:	ea23 0300 	bic.w	r3, r3, r0
   83ba8:	607b      	str	r3, [r7, #4]
   83baa:	0040      	lsls	r0, r0, #1
   83bac:	4298      	cmp	r0, r3
   83bae:	f63f aebe 	bhi.w	8392e <_malloc_r+0x1d2>
   83bb2:	2800      	cmp	r0, #0
   83bb4:	f43f aebb 	beq.w	8392e <_malloc_r+0x1d2>
   83bb8:	4203      	tst	r3, r0
   83bba:	46cc      	mov	ip, r9
   83bbc:	f47f ae64 	bne.w	83888 <_malloc_r+0x12c>
   83bc0:	0040      	lsls	r0, r0, #1
   83bc2:	4203      	tst	r3, r0
   83bc4:	f10c 0c04 	add.w	ip, ip, #4
   83bc8:	d0fa      	beq.n	83bc0 <_malloc_r+0x464>
   83bca:	e65d      	b.n	83888 <_malloc_r+0x12c>
   83bcc:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
   83bd0:	d819      	bhi.n	83c06 <_malloc_r+0x4aa>
   83bd2:	ea4f 3cd5 	mov.w	ip, r5, lsr #15
   83bd6:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
   83bda:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83bde:	e605      	b.n	837ec <_malloc_r+0x90>
   83be0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
   83be4:	e6ee      	b.n	839c4 <_malloc_r+0x268>
   83be6:	2301      	movs	r3, #1
   83be8:	f8c8 3004 	str.w	r3, [r8, #4]
   83bec:	4644      	mov	r4, r8
   83bee:	2200      	movs	r2, #0
   83bf0:	e72e      	b.n	83a50 <_malloc_r+0x2f4>
   83bf2:	1092      	asrs	r2, r2, #2
   83bf4:	2001      	movs	r0, #1
   83bf6:	4090      	lsls	r0, r2
   83bf8:	f8d8 2004 	ldr.w	r2, [r8, #4]
   83bfc:	4619      	mov	r1, r3
   83bfe:	4302      	orrs	r2, r0
   83c00:	f8c8 2004 	str.w	r2, [r8, #4]
   83c04:	e775      	b.n	83af2 <_malloc_r+0x396>
   83c06:	f240 5354 	movw	r3, #1364	; 0x554
   83c0a:	459c      	cmp	ip, r3
   83c0c:	d81b      	bhi.n	83c46 <_malloc_r+0x4ea>
   83c0e:	ea4f 4c95 	mov.w	ip, r5, lsr #18
   83c12:	f10c 0c7c 	add.w	ip, ip, #124	; 0x7c
   83c16:	ea4f 014c 	mov.w	r1, ip, lsl #1
   83c1a:	e5e7      	b.n	837ec <_malloc_r+0x90>
   83c1c:	f10a 0a10 	add.w	sl, sl, #16
   83c20:	e6a3      	b.n	8396a <_malloc_r+0x20e>
   83c22:	2b54      	cmp	r3, #84	; 0x54
   83c24:	d81f      	bhi.n	83c66 <_malloc_r+0x50a>
   83c26:	0b0a      	lsrs	r2, r1, #12
   83c28:	326e      	adds	r2, #110	; 0x6e
   83c2a:	0050      	lsls	r0, r2, #1
   83c2c:	e74f      	b.n	83ace <_malloc_r+0x372>
   83c2e:	f3cb 010b 	ubfx	r1, fp, #0, #12
   83c32:	2900      	cmp	r1, #0
   83c34:	f47f aeb1 	bne.w	8399a <_malloc_r+0x23e>
   83c38:	eb0a 0109 	add.w	r1, sl, r9
   83c3c:	68ba      	ldr	r2, [r7, #8]
   83c3e:	f041 0101 	orr.w	r1, r1, #1
   83c42:	6051      	str	r1, [r2, #4]
   83c44:	e6f6      	b.n	83a34 <_malloc_r+0x2d8>
   83c46:	21fc      	movs	r1, #252	; 0xfc
   83c48:	f04f 0c7e 	mov.w	ip, #126	; 0x7e
   83c4c:	e5ce      	b.n	837ec <_malloc_r+0x90>
   83c4e:	2201      	movs	r2, #1
   83c50:	f04f 0a00 	mov.w	sl, #0
   83c54:	e6cb      	b.n	839ee <_malloc_r+0x292>
   83c56:	f104 0108 	add.w	r1, r4, #8
   83c5a:	4630      	mov	r0, r6
   83c5c:	f7ff fcae 	bl	835bc <_free_r>
   83c60:	f8da 3000 	ldr.w	r3, [sl]
   83c64:	e6e6      	b.n	83a34 <_malloc_r+0x2d8>
   83c66:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
   83c6a:	d803      	bhi.n	83c74 <_malloc_r+0x518>
   83c6c:	0bca      	lsrs	r2, r1, #15
   83c6e:	3277      	adds	r2, #119	; 0x77
   83c70:	0050      	lsls	r0, r2, #1
   83c72:	e72c      	b.n	83ace <_malloc_r+0x372>
   83c74:	f240 5254 	movw	r2, #1364	; 0x554
   83c78:	4293      	cmp	r3, r2
   83c7a:	d803      	bhi.n	83c84 <_malloc_r+0x528>
   83c7c:	0c8a      	lsrs	r2, r1, #18
   83c7e:	327c      	adds	r2, #124	; 0x7c
   83c80:	0050      	lsls	r0, r2, #1
   83c82:	e724      	b.n	83ace <_malloc_r+0x372>
   83c84:	20fc      	movs	r0, #252	; 0xfc
   83c86:	227e      	movs	r2, #126	; 0x7e
   83c88:	e721      	b.n	83ace <_malloc_r+0x372>
   83c8a:	687b      	ldr	r3, [r7, #4]
   83c8c:	e78d      	b.n	83baa <_malloc_r+0x44e>
   83c8e:	bf00      	nop
   83c90:	200705dc 	.word	0x200705dc

00083c94 <memchr>:
   83c94:	0783      	lsls	r3, r0, #30
   83c96:	b470      	push	{r4, r5, r6}
   83c98:	b2c9      	uxtb	r1, r1
   83c9a:	d040      	beq.n	83d1e <memchr+0x8a>
   83c9c:	1e54      	subs	r4, r2, #1
   83c9e:	b32a      	cbz	r2, 83cec <memchr+0x58>
   83ca0:	7803      	ldrb	r3, [r0, #0]
   83ca2:	428b      	cmp	r3, r1
   83ca4:	d023      	beq.n	83cee <memchr+0x5a>
   83ca6:	1c43      	adds	r3, r0, #1
   83ca8:	e004      	b.n	83cb4 <memchr+0x20>
   83caa:	b1fc      	cbz	r4, 83cec <memchr+0x58>
   83cac:	7805      	ldrb	r5, [r0, #0]
   83cae:	4614      	mov	r4, r2
   83cb0:	428d      	cmp	r5, r1
   83cb2:	d01c      	beq.n	83cee <memchr+0x5a>
   83cb4:	f013 0f03 	tst.w	r3, #3
   83cb8:	4618      	mov	r0, r3
   83cba:	f104 32ff 	add.w	r2, r4, #4294967295
   83cbe:	f103 0301 	add.w	r3, r3, #1
   83cc2:	d1f2      	bne.n	83caa <memchr+0x16>
   83cc4:	2c03      	cmp	r4, #3
   83cc6:	d814      	bhi.n	83cf2 <memchr+0x5e>
   83cc8:	1e65      	subs	r5, r4, #1
   83cca:	b354      	cbz	r4, 83d22 <memchr+0x8e>
   83ccc:	7803      	ldrb	r3, [r0, #0]
   83cce:	428b      	cmp	r3, r1
   83cd0:	d00d      	beq.n	83cee <memchr+0x5a>
   83cd2:	1c42      	adds	r2, r0, #1
   83cd4:	2300      	movs	r3, #0
   83cd6:	e002      	b.n	83cde <memchr+0x4a>
   83cd8:	7804      	ldrb	r4, [r0, #0]
   83cda:	428c      	cmp	r4, r1
   83cdc:	d007      	beq.n	83cee <memchr+0x5a>
   83cde:	42ab      	cmp	r3, r5
   83ce0:	4610      	mov	r0, r2
   83ce2:	f103 0301 	add.w	r3, r3, #1
   83ce6:	f102 0201 	add.w	r2, r2, #1
   83cea:	d1f5      	bne.n	83cd8 <memchr+0x44>
   83cec:	2000      	movs	r0, #0
   83cee:	bc70      	pop	{r4, r5, r6}
   83cf0:	4770      	bx	lr
   83cf2:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
   83cf6:	4603      	mov	r3, r0
   83cf8:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
   83cfc:	681a      	ldr	r2, [r3, #0]
   83cfe:	4618      	mov	r0, r3
   83d00:	4072      	eors	r2, r6
   83d02:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
   83d06:	ea25 0202 	bic.w	r2, r5, r2
   83d0a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
   83d0e:	f103 0304 	add.w	r3, r3, #4
   83d12:	d1d9      	bne.n	83cc8 <memchr+0x34>
   83d14:	3c04      	subs	r4, #4
   83d16:	2c03      	cmp	r4, #3
   83d18:	4618      	mov	r0, r3
   83d1a:	d8ef      	bhi.n	83cfc <memchr+0x68>
   83d1c:	e7d4      	b.n	83cc8 <memchr+0x34>
   83d1e:	4614      	mov	r4, r2
   83d20:	e7d0      	b.n	83cc4 <memchr+0x30>
   83d22:	4620      	mov	r0, r4
   83d24:	e7e3      	b.n	83cee <memchr+0x5a>
   83d26:	bf00      	nop

00083d28 <memcpy>:
   83d28:	4684      	mov	ip, r0
   83d2a:	ea41 0300 	orr.w	r3, r1, r0
   83d2e:	f013 0303 	ands.w	r3, r3, #3
   83d32:	d149      	bne.n	83dc8 <memcpy+0xa0>
   83d34:	3a40      	subs	r2, #64	; 0x40
   83d36:	d323      	bcc.n	83d80 <memcpy+0x58>
   83d38:	680b      	ldr	r3, [r1, #0]
   83d3a:	6003      	str	r3, [r0, #0]
   83d3c:	684b      	ldr	r3, [r1, #4]
   83d3e:	6043      	str	r3, [r0, #4]
   83d40:	688b      	ldr	r3, [r1, #8]
   83d42:	6083      	str	r3, [r0, #8]
   83d44:	68cb      	ldr	r3, [r1, #12]
   83d46:	60c3      	str	r3, [r0, #12]
   83d48:	690b      	ldr	r3, [r1, #16]
   83d4a:	6103      	str	r3, [r0, #16]
   83d4c:	694b      	ldr	r3, [r1, #20]
   83d4e:	6143      	str	r3, [r0, #20]
   83d50:	698b      	ldr	r3, [r1, #24]
   83d52:	6183      	str	r3, [r0, #24]
   83d54:	69cb      	ldr	r3, [r1, #28]
   83d56:	61c3      	str	r3, [r0, #28]
   83d58:	6a0b      	ldr	r3, [r1, #32]
   83d5a:	6203      	str	r3, [r0, #32]
   83d5c:	6a4b      	ldr	r3, [r1, #36]	; 0x24
   83d5e:	6243      	str	r3, [r0, #36]	; 0x24
   83d60:	6a8b      	ldr	r3, [r1, #40]	; 0x28
   83d62:	6283      	str	r3, [r0, #40]	; 0x28
   83d64:	6acb      	ldr	r3, [r1, #44]	; 0x2c
   83d66:	62c3      	str	r3, [r0, #44]	; 0x2c
   83d68:	6b0b      	ldr	r3, [r1, #48]	; 0x30
   83d6a:	6303      	str	r3, [r0, #48]	; 0x30
   83d6c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
   83d6e:	6343      	str	r3, [r0, #52]	; 0x34
   83d70:	6b8b      	ldr	r3, [r1, #56]	; 0x38
   83d72:	6383      	str	r3, [r0, #56]	; 0x38
   83d74:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
   83d76:	63c3      	str	r3, [r0, #60]	; 0x3c
   83d78:	3040      	adds	r0, #64	; 0x40
   83d7a:	3140      	adds	r1, #64	; 0x40
   83d7c:	3a40      	subs	r2, #64	; 0x40
   83d7e:	d2db      	bcs.n	83d38 <memcpy+0x10>
   83d80:	3230      	adds	r2, #48	; 0x30
   83d82:	d30b      	bcc.n	83d9c <memcpy+0x74>
   83d84:	680b      	ldr	r3, [r1, #0]
   83d86:	6003      	str	r3, [r0, #0]
   83d88:	684b      	ldr	r3, [r1, #4]
   83d8a:	6043      	str	r3, [r0, #4]
   83d8c:	688b      	ldr	r3, [r1, #8]
   83d8e:	6083      	str	r3, [r0, #8]
   83d90:	68cb      	ldr	r3, [r1, #12]
   83d92:	60c3      	str	r3, [r0, #12]
   83d94:	3010      	adds	r0, #16
   83d96:	3110      	adds	r1, #16
   83d98:	3a10      	subs	r2, #16
   83d9a:	d2f3      	bcs.n	83d84 <memcpy+0x5c>
   83d9c:	320c      	adds	r2, #12
   83d9e:	d305      	bcc.n	83dac <memcpy+0x84>
   83da0:	f851 3b04 	ldr.w	r3, [r1], #4
   83da4:	f840 3b04 	str.w	r3, [r0], #4
   83da8:	3a04      	subs	r2, #4
   83daa:	d2f9      	bcs.n	83da0 <memcpy+0x78>
   83dac:	3204      	adds	r2, #4
   83dae:	d008      	beq.n	83dc2 <memcpy+0x9a>
   83db0:	07d2      	lsls	r2, r2, #31
   83db2:	bf1c      	itt	ne
   83db4:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83db8:	f800 3b01 	strbne.w	r3, [r0], #1
   83dbc:	d301      	bcc.n	83dc2 <memcpy+0x9a>
   83dbe:	880b      	ldrh	r3, [r1, #0]
   83dc0:	8003      	strh	r3, [r0, #0]
   83dc2:	4660      	mov	r0, ip
   83dc4:	4770      	bx	lr
   83dc6:	bf00      	nop
   83dc8:	2a08      	cmp	r2, #8
   83dca:	d313      	bcc.n	83df4 <memcpy+0xcc>
   83dcc:	078b      	lsls	r3, r1, #30
   83dce:	d0b1      	beq.n	83d34 <memcpy+0xc>
   83dd0:	f010 0303 	ands.w	r3, r0, #3
   83dd4:	d0ae      	beq.n	83d34 <memcpy+0xc>
   83dd6:	f1c3 0304 	rsb	r3, r3, #4
   83dda:	1ad2      	subs	r2, r2, r3
   83ddc:	07db      	lsls	r3, r3, #31
   83dde:	bf1c      	itt	ne
   83de0:	f811 3b01 	ldrbne.w	r3, [r1], #1
   83de4:	f800 3b01 	strbne.w	r3, [r0], #1
   83de8:	d3a4      	bcc.n	83d34 <memcpy+0xc>
   83dea:	f831 3b02 	ldrh.w	r3, [r1], #2
   83dee:	f820 3b02 	strh.w	r3, [r0], #2
   83df2:	e79f      	b.n	83d34 <memcpy+0xc>
   83df4:	3a04      	subs	r2, #4
   83df6:	d3d9      	bcc.n	83dac <memcpy+0x84>
   83df8:	3a01      	subs	r2, #1
   83dfa:	f811 3b01 	ldrb.w	r3, [r1], #1
   83dfe:	f800 3b01 	strb.w	r3, [r0], #1
   83e02:	d2f9      	bcs.n	83df8 <memcpy+0xd0>
   83e04:	780b      	ldrb	r3, [r1, #0]
   83e06:	7003      	strb	r3, [r0, #0]
   83e08:	784b      	ldrb	r3, [r1, #1]
   83e0a:	7043      	strb	r3, [r0, #1]
   83e0c:	788b      	ldrb	r3, [r1, #2]
   83e0e:	7083      	strb	r3, [r0, #2]
   83e10:	4660      	mov	r0, ip
   83e12:	4770      	bx	lr

00083e14 <memmove>:
   83e14:	4288      	cmp	r0, r1
   83e16:	b4f0      	push	{r4, r5, r6, r7}
   83e18:	d910      	bls.n	83e3c <memmove+0x28>
   83e1a:	188c      	adds	r4, r1, r2
   83e1c:	42a0      	cmp	r0, r4
   83e1e:	d20d      	bcs.n	83e3c <memmove+0x28>
   83e20:	1885      	adds	r5, r0, r2
   83e22:	1e53      	subs	r3, r2, #1
   83e24:	b142      	cbz	r2, 83e38 <memmove+0x24>
   83e26:	4621      	mov	r1, r4
   83e28:	462a      	mov	r2, r5
   83e2a:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
   83e2e:	3b01      	subs	r3, #1
   83e30:	f802 4d01 	strb.w	r4, [r2, #-1]!
   83e34:	1c5c      	adds	r4, r3, #1
   83e36:	d1f8      	bne.n	83e2a <memmove+0x16>
   83e38:	bcf0      	pop	{r4, r5, r6, r7}
   83e3a:	4770      	bx	lr
   83e3c:	2a0f      	cmp	r2, #15
   83e3e:	d944      	bls.n	83eca <memmove+0xb6>
   83e40:	ea40 0301 	orr.w	r3, r0, r1
   83e44:	079b      	lsls	r3, r3, #30
   83e46:	d144      	bne.n	83ed2 <memmove+0xbe>
   83e48:	f1a2 0710 	sub.w	r7, r2, #16
   83e4c:	093f      	lsrs	r7, r7, #4
   83e4e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
   83e52:	3610      	adds	r6, #16
   83e54:	460c      	mov	r4, r1
   83e56:	4603      	mov	r3, r0
   83e58:	6825      	ldr	r5, [r4, #0]
   83e5a:	3310      	adds	r3, #16
   83e5c:	f843 5c10 	str.w	r5, [r3, #-16]
   83e60:	6865      	ldr	r5, [r4, #4]
   83e62:	3410      	adds	r4, #16
   83e64:	f843 5c0c 	str.w	r5, [r3, #-12]
   83e68:	f854 5c08 	ldr.w	r5, [r4, #-8]
   83e6c:	f843 5c08 	str.w	r5, [r3, #-8]
   83e70:	f854 5c04 	ldr.w	r5, [r4, #-4]
   83e74:	f843 5c04 	str.w	r5, [r3, #-4]
   83e78:	42b3      	cmp	r3, r6
   83e7a:	d1ed      	bne.n	83e58 <memmove+0x44>
   83e7c:	1c7b      	adds	r3, r7, #1
   83e7e:	f002 0c0f 	and.w	ip, r2, #15
   83e82:	011b      	lsls	r3, r3, #4
   83e84:	f1bc 0f03 	cmp.w	ip, #3
   83e88:	4419      	add	r1, r3
   83e8a:	4403      	add	r3, r0
   83e8c:	d923      	bls.n	83ed6 <memmove+0xc2>
   83e8e:	460e      	mov	r6, r1
   83e90:	461d      	mov	r5, r3
   83e92:	4664      	mov	r4, ip
   83e94:	f856 7b04 	ldr.w	r7, [r6], #4
   83e98:	3c04      	subs	r4, #4
   83e9a:	2c03      	cmp	r4, #3
   83e9c:	f845 7b04 	str.w	r7, [r5], #4
   83ea0:	d8f8      	bhi.n	83e94 <memmove+0x80>
   83ea2:	f1ac 0404 	sub.w	r4, ip, #4
   83ea6:	f024 0403 	bic.w	r4, r4, #3
   83eaa:	3404      	adds	r4, #4
   83eac:	f002 0203 	and.w	r2, r2, #3
   83eb0:	4423      	add	r3, r4
   83eb2:	4421      	add	r1, r4
   83eb4:	2a00      	cmp	r2, #0
   83eb6:	d0bf      	beq.n	83e38 <memmove+0x24>
   83eb8:	441a      	add	r2, r3
   83eba:	f811 4b01 	ldrb.w	r4, [r1], #1
   83ebe:	f803 4b01 	strb.w	r4, [r3], #1
   83ec2:	4293      	cmp	r3, r2
   83ec4:	d1f9      	bne.n	83eba <memmove+0xa6>
   83ec6:	bcf0      	pop	{r4, r5, r6, r7}
   83ec8:	4770      	bx	lr
   83eca:	4603      	mov	r3, r0
   83ecc:	2a00      	cmp	r2, #0
   83ece:	d1f3      	bne.n	83eb8 <memmove+0xa4>
   83ed0:	e7b2      	b.n	83e38 <memmove+0x24>
   83ed2:	4603      	mov	r3, r0
   83ed4:	e7f0      	b.n	83eb8 <memmove+0xa4>
   83ed6:	4662      	mov	r2, ip
   83ed8:	2a00      	cmp	r2, #0
   83eda:	d1ed      	bne.n	83eb8 <memmove+0xa4>
   83edc:	e7ac      	b.n	83e38 <memmove+0x24>
   83ede:	bf00      	nop

00083ee0 <__malloc_lock>:
   83ee0:	4770      	bx	lr
   83ee2:	bf00      	nop

00083ee4 <__malloc_unlock>:
   83ee4:	4770      	bx	lr
   83ee6:	bf00      	nop

00083ee8 <_Balloc>:
   83ee8:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
   83eea:	b570      	push	{r4, r5, r6, lr}
   83eec:	4605      	mov	r5, r0
   83eee:	460c      	mov	r4, r1
   83ef0:	b14a      	cbz	r2, 83f06 <_Balloc+0x1e>
   83ef2:	f852 0024 	ldr.w	r0, [r2, r4, lsl #2]
   83ef6:	b180      	cbz	r0, 83f1a <_Balloc+0x32>
   83ef8:	6801      	ldr	r1, [r0, #0]
   83efa:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
   83efe:	2200      	movs	r2, #0
   83f00:	6102      	str	r2, [r0, #16]
   83f02:	60c2      	str	r2, [r0, #12]
   83f04:	bd70      	pop	{r4, r5, r6, pc}
   83f06:	2221      	movs	r2, #33	; 0x21
   83f08:	2104      	movs	r1, #4
   83f0a:	f000 fde5 	bl	84ad8 <_calloc_r>
   83f0e:	64e8      	str	r0, [r5, #76]	; 0x4c
   83f10:	4602      	mov	r2, r0
   83f12:	2800      	cmp	r0, #0
   83f14:	d1ed      	bne.n	83ef2 <_Balloc+0xa>
   83f16:	2000      	movs	r0, #0
   83f18:	bd70      	pop	{r4, r5, r6, pc}
   83f1a:	2101      	movs	r1, #1
   83f1c:	fa01 f604 	lsl.w	r6, r1, r4
   83f20:	1d72      	adds	r2, r6, #5
   83f22:	4628      	mov	r0, r5
   83f24:	0092      	lsls	r2, r2, #2
   83f26:	f000 fdd7 	bl	84ad8 <_calloc_r>
   83f2a:	2800      	cmp	r0, #0
   83f2c:	d0f3      	beq.n	83f16 <_Balloc+0x2e>
   83f2e:	6044      	str	r4, [r0, #4]
   83f30:	6086      	str	r6, [r0, #8]
   83f32:	e7e4      	b.n	83efe <_Balloc+0x16>

00083f34 <_Bfree>:
   83f34:	b131      	cbz	r1, 83f44 <_Bfree+0x10>
   83f36:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
   83f38:	684a      	ldr	r2, [r1, #4]
   83f3a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
   83f3e:	6008      	str	r0, [r1, #0]
   83f40:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
   83f44:	4770      	bx	lr
   83f46:	bf00      	nop

00083f48 <__multadd>:
   83f48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   83f4c:	690f      	ldr	r7, [r1, #16]
   83f4e:	b083      	sub	sp, #12
   83f50:	4688      	mov	r8, r1
   83f52:	4681      	mov	r9, r0
   83f54:	f101 0514 	add.w	r5, r1, #20
   83f58:	2400      	movs	r4, #0
   83f5a:	682e      	ldr	r6, [r5, #0]
   83f5c:	3401      	adds	r4, #1
   83f5e:	b2b1      	uxth	r1, r6
   83f60:	0c36      	lsrs	r6, r6, #16
   83f62:	fb02 3301 	mla	r3, r2, r1, r3
   83f66:	fb02 f606 	mul.w	r6, r2, r6
   83f6a:	b299      	uxth	r1, r3
   83f6c:	eb06 4313 	add.w	r3, r6, r3, lsr #16
   83f70:	eb01 4103 	add.w	r1, r1, r3, lsl #16
   83f74:	42a7      	cmp	r7, r4
   83f76:	f845 1b04 	str.w	r1, [r5], #4
   83f7a:	ea4f 4313 	mov.w	r3, r3, lsr #16
   83f7e:	dcec      	bgt.n	83f5a <__multadd+0x12>
   83f80:	b14b      	cbz	r3, 83f96 <__multadd+0x4e>
   83f82:	f8d8 2008 	ldr.w	r2, [r8, #8]
   83f86:	4297      	cmp	r7, r2
   83f88:	da09      	bge.n	83f9e <__multadd+0x56>
   83f8a:	eb08 0287 	add.w	r2, r8, r7, lsl #2
   83f8e:	3701      	adds	r7, #1
   83f90:	6153      	str	r3, [r2, #20]
   83f92:	f8c8 7010 	str.w	r7, [r8, #16]
   83f96:	4640      	mov	r0, r8
   83f98:	b003      	add	sp, #12
   83f9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   83f9e:	f8d8 1004 	ldr.w	r1, [r8, #4]
   83fa2:	4648      	mov	r0, r9
   83fa4:	3101      	adds	r1, #1
   83fa6:	9301      	str	r3, [sp, #4]
   83fa8:	f7ff ff9e 	bl	83ee8 <_Balloc>
   83fac:	f8d8 2010 	ldr.w	r2, [r8, #16]
   83fb0:	f108 010c 	add.w	r1, r8, #12
   83fb4:	3202      	adds	r2, #2
   83fb6:	4604      	mov	r4, r0
   83fb8:	0092      	lsls	r2, r2, #2
   83fba:	300c      	adds	r0, #12
   83fbc:	f7ff feb4 	bl	83d28 <memcpy>
   83fc0:	f8d9 204c 	ldr.w	r2, [r9, #76]	; 0x4c
   83fc4:	f8d8 1004 	ldr.w	r1, [r8, #4]
   83fc8:	9b01      	ldr	r3, [sp, #4]
   83fca:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
   83fce:	f8c8 0000 	str.w	r0, [r8]
   83fd2:	f842 8021 	str.w	r8, [r2, r1, lsl #2]
   83fd6:	46a0      	mov	r8, r4
   83fd8:	e7d7      	b.n	83f8a <__multadd+0x42>
   83fda:	bf00      	nop

00083fdc <__hi0bits>:
   83fdc:	0c03      	lsrs	r3, r0, #16
   83fde:	041b      	lsls	r3, r3, #16
   83fe0:	b9b3      	cbnz	r3, 84010 <__hi0bits+0x34>
   83fe2:	0400      	lsls	r0, r0, #16
   83fe4:	2310      	movs	r3, #16
   83fe6:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
   83fea:	bf04      	itt	eq
   83fec:	0200      	lsleq	r0, r0, #8
   83fee:	3308      	addeq	r3, #8
   83ff0:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
   83ff4:	bf04      	itt	eq
   83ff6:	0100      	lsleq	r0, r0, #4
   83ff8:	3304      	addeq	r3, #4
   83ffa:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
   83ffe:	bf04      	itt	eq
   84000:	0080      	lsleq	r0, r0, #2
   84002:	3302      	addeq	r3, #2
   84004:	2800      	cmp	r0, #0
   84006:	db07      	blt.n	84018 <__hi0bits+0x3c>
   84008:	0042      	lsls	r2, r0, #1
   8400a:	d403      	bmi.n	84014 <__hi0bits+0x38>
   8400c:	2020      	movs	r0, #32
   8400e:	4770      	bx	lr
   84010:	2300      	movs	r3, #0
   84012:	e7e8      	b.n	83fe6 <__hi0bits+0xa>
   84014:	1c58      	adds	r0, r3, #1
   84016:	4770      	bx	lr
   84018:	4618      	mov	r0, r3
   8401a:	4770      	bx	lr

0008401c <__lo0bits>:
   8401c:	6803      	ldr	r3, [r0, #0]
   8401e:	f013 0207 	ands.w	r2, r3, #7
   84022:	d007      	beq.n	84034 <__lo0bits+0x18>
   84024:	07d9      	lsls	r1, r3, #31
   84026:	d420      	bmi.n	8406a <__lo0bits+0x4e>
   84028:	079a      	lsls	r2, r3, #30
   8402a:	d420      	bmi.n	8406e <__lo0bits+0x52>
   8402c:	089b      	lsrs	r3, r3, #2
   8402e:	6003      	str	r3, [r0, #0]
   84030:	2002      	movs	r0, #2
   84032:	4770      	bx	lr
   84034:	b299      	uxth	r1, r3
   84036:	b909      	cbnz	r1, 8403c <__lo0bits+0x20>
   84038:	0c1b      	lsrs	r3, r3, #16
   8403a:	2210      	movs	r2, #16
   8403c:	f013 0fff 	tst.w	r3, #255	; 0xff
   84040:	bf04      	itt	eq
   84042:	0a1b      	lsreq	r3, r3, #8
   84044:	3208      	addeq	r2, #8
   84046:	0719      	lsls	r1, r3, #28
   84048:	bf04      	itt	eq
   8404a:	091b      	lsreq	r3, r3, #4
   8404c:	3204      	addeq	r2, #4
   8404e:	0799      	lsls	r1, r3, #30
   84050:	bf04      	itt	eq
   84052:	089b      	lsreq	r3, r3, #2
   84054:	3202      	addeq	r2, #2
   84056:	07d9      	lsls	r1, r3, #31
   84058:	d404      	bmi.n	84064 <__lo0bits+0x48>
   8405a:	085b      	lsrs	r3, r3, #1
   8405c:	d101      	bne.n	84062 <__lo0bits+0x46>
   8405e:	2020      	movs	r0, #32
   84060:	4770      	bx	lr
   84062:	3201      	adds	r2, #1
   84064:	6003      	str	r3, [r0, #0]
   84066:	4610      	mov	r0, r2
   84068:	4770      	bx	lr
   8406a:	2000      	movs	r0, #0
   8406c:	4770      	bx	lr
   8406e:	085b      	lsrs	r3, r3, #1
   84070:	6003      	str	r3, [r0, #0]
   84072:	2001      	movs	r0, #1
   84074:	4770      	bx	lr
   84076:	bf00      	nop

00084078 <__i2b>:
   84078:	b510      	push	{r4, lr}
   8407a:	460c      	mov	r4, r1
   8407c:	2101      	movs	r1, #1
   8407e:	f7ff ff33 	bl	83ee8 <_Balloc>
   84082:	2201      	movs	r2, #1
   84084:	6144      	str	r4, [r0, #20]
   84086:	6102      	str	r2, [r0, #16]
   84088:	bd10      	pop	{r4, pc}
   8408a:	bf00      	nop

0008408c <__multiply>:
   8408c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84090:	690d      	ldr	r5, [r1, #16]
   84092:	f8d2 9010 	ldr.w	r9, [r2, #16]
   84096:	b085      	sub	sp, #20
   84098:	454d      	cmp	r5, r9
   8409a:	460c      	mov	r4, r1
   8409c:	4692      	mov	sl, r2
   8409e:	da04      	bge.n	840aa <__multiply+0x1e>
   840a0:	462a      	mov	r2, r5
   840a2:	4654      	mov	r4, sl
   840a4:	464d      	mov	r5, r9
   840a6:	468a      	mov	sl, r1
   840a8:	4691      	mov	r9, r2
   840aa:	68a3      	ldr	r3, [r4, #8]
   840ac:	eb05 0709 	add.w	r7, r5, r9
   840b0:	6861      	ldr	r1, [r4, #4]
   840b2:	429f      	cmp	r7, r3
   840b4:	bfc8      	it	gt
   840b6:	3101      	addgt	r1, #1
   840b8:	f7ff ff16 	bl	83ee8 <_Balloc>
   840bc:	f100 0614 	add.w	r6, r0, #20
   840c0:	eb06 0887 	add.w	r8, r6, r7, lsl #2
   840c4:	4546      	cmp	r6, r8
   840c6:	9001      	str	r0, [sp, #4]
   840c8:	d205      	bcs.n	840d6 <__multiply+0x4a>
   840ca:	4633      	mov	r3, r6
   840cc:	2000      	movs	r0, #0
   840ce:	f843 0b04 	str.w	r0, [r3], #4
   840d2:	4598      	cmp	r8, r3
   840d4:	d8fb      	bhi.n	840ce <__multiply+0x42>
   840d6:	f10a 0c14 	add.w	ip, sl, #20
   840da:	eb0c 0989 	add.w	r9, ip, r9, lsl #2
   840de:	3414      	adds	r4, #20
   840e0:	45cc      	cmp	ip, r9
   840e2:	9400      	str	r4, [sp, #0]
   840e4:	eb04 0585 	add.w	r5, r4, r5, lsl #2
   840e8:	d25b      	bcs.n	841a2 <__multiply+0x116>
   840ea:	f8cd 8008 	str.w	r8, [sp, #8]
   840ee:	9703      	str	r7, [sp, #12]
   840f0:	46c8      	mov	r8, r9
   840f2:	f85c 3b04 	ldr.w	r3, [ip], #4
   840f6:	b29c      	uxth	r4, r3
   840f8:	b324      	cbz	r4, 84144 <__multiply+0xb8>
   840fa:	9a00      	ldr	r2, [sp, #0]
   840fc:	4633      	mov	r3, r6
   840fe:	f04f 0900 	mov.w	r9, #0
   84102:	e000      	b.n	84106 <__multiply+0x7a>
   84104:	460b      	mov	r3, r1
   84106:	f852 7b04 	ldr.w	r7, [r2], #4
   8410a:	6819      	ldr	r1, [r3, #0]
   8410c:	fa1f fb87 	uxth.w	fp, r7
   84110:	fa1f fa81 	uxth.w	sl, r1
   84114:	0c38      	lsrs	r0, r7, #16
   84116:	0c09      	lsrs	r1, r1, #16
   84118:	fb04 aa0b 	mla	sl, r4, fp, sl
   8411c:	fb04 1000 	mla	r0, r4, r0, r1
   84120:	44d1      	add	r9, sl
   84122:	eb00 4019 	add.w	r0, r0, r9, lsr #16
   84126:	fa1f f989 	uxth.w	r9, r9
   8412a:	ea49 4700 	orr.w	r7, r9, r0, lsl #16
   8412e:	4619      	mov	r1, r3
   84130:	4295      	cmp	r5, r2
   84132:	ea4f 4910 	mov.w	r9, r0, lsr #16
   84136:	f841 7b04 	str.w	r7, [r1], #4
   8413a:	d8e3      	bhi.n	84104 <__multiply+0x78>
   8413c:	f8c3 9004 	str.w	r9, [r3, #4]
   84140:	f85c 3c04 	ldr.w	r3, [ip, #-4]
   84144:	ea5f 4913 	movs.w	r9, r3, lsr #16
   84148:	d024      	beq.n	84194 <__multiply+0x108>
   8414a:	f8d6 a000 	ldr.w	sl, [r6]
   8414e:	9b00      	ldr	r3, [sp, #0]
   84150:	4650      	mov	r0, sl
   84152:	4631      	mov	r1, r6
   84154:	f04f 0b00 	mov.w	fp, #0
   84158:	e000      	b.n	8415c <__multiply+0xd0>
   8415a:	4611      	mov	r1, r2
   8415c:	881a      	ldrh	r2, [r3, #0]
   8415e:	0c00      	lsrs	r0, r0, #16
   84160:	fb09 0002 	mla	r0, r9, r2, r0
   84164:	fa1f fa8a 	uxth.w	sl, sl
   84168:	4483      	add	fp, r0
   8416a:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
   8416e:	460a      	mov	r2, r1
   84170:	f842 0b04 	str.w	r0, [r2], #4
   84174:	f853 7b04 	ldr.w	r7, [r3], #4
   84178:	6848      	ldr	r0, [r1, #4]
   8417a:	ea4f 4a17 	mov.w	sl, r7, lsr #16
   8417e:	b284      	uxth	r4, r0
   84180:	fb09 4a0a 	mla	sl, r9, sl, r4
   84184:	429d      	cmp	r5, r3
   84186:	eb0a 4a1b 	add.w	sl, sl, fp, lsr #16
   8418a:	ea4f 4b1a 	mov.w	fp, sl, lsr #16
   8418e:	d8e4      	bhi.n	8415a <__multiply+0xce>
   84190:	f8c1 a004 	str.w	sl, [r1, #4]
   84194:	45e0      	cmp	r8, ip
   84196:	f106 0604 	add.w	r6, r6, #4
   8419a:	d8aa      	bhi.n	840f2 <__multiply+0x66>
   8419c:	f8dd 8008 	ldr.w	r8, [sp, #8]
   841a0:	9f03      	ldr	r7, [sp, #12]
   841a2:	2f00      	cmp	r7, #0
   841a4:	dd0a      	ble.n	841bc <__multiply+0x130>
   841a6:	f858 3c04 	ldr.w	r3, [r8, #-4]
   841aa:	f1a8 0804 	sub.w	r8, r8, #4
   841ae:	b11b      	cbz	r3, 841b8 <__multiply+0x12c>
   841b0:	e004      	b.n	841bc <__multiply+0x130>
   841b2:	f858 3d04 	ldr.w	r3, [r8, #-4]!
   841b6:	b90b      	cbnz	r3, 841bc <__multiply+0x130>
   841b8:	3f01      	subs	r7, #1
   841ba:	d1fa      	bne.n	841b2 <__multiply+0x126>
   841bc:	9b01      	ldr	r3, [sp, #4]
   841be:	4618      	mov	r0, r3
   841c0:	611f      	str	r7, [r3, #16]
   841c2:	b005      	add	sp, #20
   841c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

000841c8 <__pow5mult>:
   841c8:	f012 0303 	ands.w	r3, r2, #3
   841cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   841d0:	4614      	mov	r4, r2
   841d2:	4607      	mov	r7, r0
   841d4:	460e      	mov	r6, r1
   841d6:	d12c      	bne.n	84232 <__pow5mult+0x6a>
   841d8:	10a4      	asrs	r4, r4, #2
   841da:	d01c      	beq.n	84216 <__pow5mult+0x4e>
   841dc:	6cbd      	ldr	r5, [r7, #72]	; 0x48
   841de:	2d00      	cmp	r5, #0
   841e0:	d030      	beq.n	84244 <__pow5mult+0x7c>
   841e2:	f04f 0800 	mov.w	r8, #0
   841e6:	e004      	b.n	841f2 <__pow5mult+0x2a>
   841e8:	1064      	asrs	r4, r4, #1
   841ea:	d014      	beq.n	84216 <__pow5mult+0x4e>
   841ec:	6828      	ldr	r0, [r5, #0]
   841ee:	b1a8      	cbz	r0, 8421c <__pow5mult+0x54>
   841f0:	4605      	mov	r5, r0
   841f2:	07e3      	lsls	r3, r4, #31
   841f4:	d5f8      	bpl.n	841e8 <__pow5mult+0x20>
   841f6:	4638      	mov	r0, r7
   841f8:	4631      	mov	r1, r6
   841fa:	462a      	mov	r2, r5
   841fc:	f7ff ff46 	bl	8408c <__multiply>
   84200:	b1ae      	cbz	r6, 8422e <__pow5mult+0x66>
   84202:	6872      	ldr	r2, [r6, #4]
   84204:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
   84206:	1064      	asrs	r4, r4, #1
   84208:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   8420c:	6031      	str	r1, [r6, #0]
   8420e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
   84212:	4606      	mov	r6, r0
   84214:	d1ea      	bne.n	841ec <__pow5mult+0x24>
   84216:	4630      	mov	r0, r6
   84218:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   8421c:	4638      	mov	r0, r7
   8421e:	4629      	mov	r1, r5
   84220:	462a      	mov	r2, r5
   84222:	f7ff ff33 	bl	8408c <__multiply>
   84226:	6028      	str	r0, [r5, #0]
   84228:	f8c0 8000 	str.w	r8, [r0]
   8422c:	e7e0      	b.n	841f0 <__pow5mult+0x28>
   8422e:	4606      	mov	r6, r0
   84230:	e7da      	b.n	841e8 <__pow5mult+0x20>
   84232:	4a0b      	ldr	r2, [pc, #44]	; (84260 <__pow5mult+0x98>)
   84234:	3b01      	subs	r3, #1
   84236:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
   8423a:	2300      	movs	r3, #0
   8423c:	f7ff fe84 	bl	83f48 <__multadd>
   84240:	4606      	mov	r6, r0
   84242:	e7c9      	b.n	841d8 <__pow5mult+0x10>
   84244:	2101      	movs	r1, #1
   84246:	4638      	mov	r0, r7
   84248:	f7ff fe4e 	bl	83ee8 <_Balloc>
   8424c:	f240 2171 	movw	r1, #625	; 0x271
   84250:	2201      	movs	r2, #1
   84252:	2300      	movs	r3, #0
   84254:	6141      	str	r1, [r0, #20]
   84256:	6102      	str	r2, [r0, #16]
   84258:	4605      	mov	r5, r0
   8425a:	64b8      	str	r0, [r7, #72]	; 0x48
   8425c:	6003      	str	r3, [r0, #0]
   8425e:	e7c0      	b.n	841e2 <__pow5mult+0x1a>
   84260:	00085b98 	.word	0x00085b98

00084264 <__lshift>:
   84264:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84268:	690b      	ldr	r3, [r1, #16]
   8426a:	ea4f 1a62 	mov.w	sl, r2, asr #5
   8426e:	eb0a 0903 	add.w	r9, sl, r3
   84272:	688b      	ldr	r3, [r1, #8]
   84274:	f109 0601 	add.w	r6, r9, #1
   84278:	429e      	cmp	r6, r3
   8427a:	460f      	mov	r7, r1
   8427c:	4693      	mov	fp, r2
   8427e:	4680      	mov	r8, r0
   84280:	6849      	ldr	r1, [r1, #4]
   84282:	dd04      	ble.n	8428e <__lshift+0x2a>
   84284:	005b      	lsls	r3, r3, #1
   84286:	429e      	cmp	r6, r3
   84288:	f101 0101 	add.w	r1, r1, #1
   8428c:	dcfa      	bgt.n	84284 <__lshift+0x20>
   8428e:	4640      	mov	r0, r8
   84290:	f7ff fe2a 	bl	83ee8 <_Balloc>
   84294:	f1ba 0f00 	cmp.w	sl, #0
   84298:	f100 0414 	add.w	r4, r0, #20
   8429c:	dd09      	ble.n	842b2 <__lshift+0x4e>
   8429e:	2300      	movs	r3, #0
   842a0:	461a      	mov	r2, r3
   842a2:	4625      	mov	r5, r4
   842a4:	3301      	adds	r3, #1
   842a6:	4553      	cmp	r3, sl
   842a8:	f845 2b04 	str.w	r2, [r5], #4
   842ac:	d1fa      	bne.n	842a4 <__lshift+0x40>
   842ae:	eb04 0483 	add.w	r4, r4, r3, lsl #2
   842b2:	693a      	ldr	r2, [r7, #16]
   842b4:	f107 0314 	add.w	r3, r7, #20
   842b8:	f01b 0b1f 	ands.w	fp, fp, #31
   842bc:	eb03 0c82 	add.w	ip, r3, r2, lsl #2
   842c0:	d021      	beq.n	84306 <__lshift+0xa2>
   842c2:	f1cb 0a20 	rsb	sl, fp, #32
   842c6:	2200      	movs	r2, #0
   842c8:	e000      	b.n	842cc <__lshift+0x68>
   842ca:	462c      	mov	r4, r5
   842cc:	6819      	ldr	r1, [r3, #0]
   842ce:	4625      	mov	r5, r4
   842d0:	fa01 f10b 	lsl.w	r1, r1, fp
   842d4:	430a      	orrs	r2, r1
   842d6:	f845 2b04 	str.w	r2, [r5], #4
   842da:	f853 2b04 	ldr.w	r2, [r3], #4
   842de:	4563      	cmp	r3, ip
   842e0:	fa22 f20a 	lsr.w	r2, r2, sl
   842e4:	d3f1      	bcc.n	842ca <__lshift+0x66>
   842e6:	6062      	str	r2, [r4, #4]
   842e8:	b10a      	cbz	r2, 842ee <__lshift+0x8a>
   842ea:	f109 0602 	add.w	r6, r9, #2
   842ee:	f8d8 304c 	ldr.w	r3, [r8, #76]	; 0x4c
   842f2:	687a      	ldr	r2, [r7, #4]
   842f4:	3e01      	subs	r6, #1
   842f6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
   842fa:	6106      	str	r6, [r0, #16]
   842fc:	6039      	str	r1, [r7, #0]
   842fe:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
   84302:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84306:	f853 2b04 	ldr.w	r2, [r3], #4
   8430a:	459c      	cmp	ip, r3
   8430c:	f844 2b04 	str.w	r2, [r4], #4
   84310:	d9ed      	bls.n	842ee <__lshift+0x8a>
   84312:	f853 2b04 	ldr.w	r2, [r3], #4
   84316:	459c      	cmp	ip, r3
   84318:	f844 2b04 	str.w	r2, [r4], #4
   8431c:	d8f3      	bhi.n	84306 <__lshift+0xa2>
   8431e:	e7e6      	b.n	842ee <__lshift+0x8a>

00084320 <__mcmp>:
   84320:	6902      	ldr	r2, [r0, #16]
   84322:	690b      	ldr	r3, [r1, #16]
   84324:	b410      	push	{r4}
   84326:	1ad2      	subs	r2, r2, r3
   84328:	d115      	bne.n	84356 <__mcmp+0x36>
   8432a:	009b      	lsls	r3, r3, #2
   8432c:	3014      	adds	r0, #20
   8432e:	3114      	adds	r1, #20
   84330:	4419      	add	r1, r3
   84332:	4403      	add	r3, r0
   84334:	e001      	b.n	8433a <__mcmp+0x1a>
   84336:	4298      	cmp	r0, r3
   84338:	d211      	bcs.n	8435e <__mcmp+0x3e>
   8433a:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   8433e:	f851 4d04 	ldr.w	r4, [r1, #-4]!
   84342:	42a2      	cmp	r2, r4
   84344:	d0f7      	beq.n	84336 <__mcmp+0x16>
   84346:	4294      	cmp	r4, r2
   84348:	bf94      	ite	ls
   8434a:	2001      	movls	r0, #1
   8434c:	f04f 30ff 	movhi.w	r0, #4294967295
   84350:	f85d 4b04 	ldr.w	r4, [sp], #4
   84354:	4770      	bx	lr
   84356:	4610      	mov	r0, r2
   84358:	f85d 4b04 	ldr.w	r4, [sp], #4
   8435c:	4770      	bx	lr
   8435e:	2000      	movs	r0, #0
   84360:	f85d 4b04 	ldr.w	r4, [sp], #4
   84364:	4770      	bx	lr
   84366:	bf00      	nop

00084368 <__mdiff>:
   84368:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   8436c:	460d      	mov	r5, r1
   8436e:	4604      	mov	r4, r0
   84370:	4611      	mov	r1, r2
   84372:	4628      	mov	r0, r5
   84374:	4616      	mov	r6, r2
   84376:	f7ff ffd3 	bl	84320 <__mcmp>
   8437a:	1e07      	subs	r7, r0, #0
   8437c:	d056      	beq.n	8442c <__mdiff+0xc4>
   8437e:	db4f      	blt.n	84420 <__mdiff+0xb8>
   84380:	f04f 0900 	mov.w	r9, #0
   84384:	6869      	ldr	r1, [r5, #4]
   84386:	4620      	mov	r0, r4
   84388:	f7ff fdae 	bl	83ee8 <_Balloc>
   8438c:	692f      	ldr	r7, [r5, #16]
   8438e:	6932      	ldr	r2, [r6, #16]
   84390:	3514      	adds	r5, #20
   84392:	3614      	adds	r6, #20
   84394:	f8c0 900c 	str.w	r9, [r0, #12]
   84398:	f100 0314 	add.w	r3, r0, #20
   8439c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
   843a0:	eb06 0882 	add.w	r8, r6, r2, lsl #2
   843a4:	2100      	movs	r1, #0
   843a6:	f855 4b04 	ldr.w	r4, [r5], #4
   843aa:	f856 2b04 	ldr.w	r2, [r6], #4
   843ae:	fa1f fa84 	uxth.w	sl, r4
   843b2:	448a      	add	sl, r1
   843b4:	fa1f f982 	uxth.w	r9, r2
   843b8:	0c11      	lsrs	r1, r2, #16
   843ba:	ebc1 4114 	rsb	r1, r1, r4, lsr #16
   843be:	ebc9 020a 	rsb	r2, r9, sl
   843c2:	eb01 4122 	add.w	r1, r1, r2, asr #16
   843c6:	b292      	uxth	r2, r2
   843c8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   843cc:	45b0      	cmp	r8, r6
   843ce:	f843 2b04 	str.w	r2, [r3], #4
   843d2:	ea4f 4121 	mov.w	r1, r1, asr #16
   843d6:	462c      	mov	r4, r5
   843d8:	d8e5      	bhi.n	843a6 <__mdiff+0x3e>
   843da:	45ac      	cmp	ip, r5
   843dc:	4698      	mov	r8, r3
   843de:	d915      	bls.n	8440c <__mdiff+0xa4>
   843e0:	f854 6b04 	ldr.w	r6, [r4], #4
   843e4:	b2b2      	uxth	r2, r6
   843e6:	4411      	add	r1, r2
   843e8:	0c36      	lsrs	r6, r6, #16
   843ea:	eb06 4621 	add.w	r6, r6, r1, asr #16
   843ee:	b289      	uxth	r1, r1
   843f0:	ea41 4206 	orr.w	r2, r1, r6, lsl #16
   843f4:	45a4      	cmp	ip, r4
   843f6:	f843 2b04 	str.w	r2, [r3], #4
   843fa:	ea4f 4126 	mov.w	r1, r6, asr #16
   843fe:	d8ef      	bhi.n	843e0 <__mdiff+0x78>
   84400:	43eb      	mvns	r3, r5
   84402:	4463      	add	r3, ip
   84404:	f023 0303 	bic.w	r3, r3, #3
   84408:	3304      	adds	r3, #4
   8440a:	4443      	add	r3, r8
   8440c:	3b04      	subs	r3, #4
   8440e:	b922      	cbnz	r2, 8441a <__mdiff+0xb2>
   84410:	f853 2d04 	ldr.w	r2, [r3, #-4]!
   84414:	3f01      	subs	r7, #1
   84416:	2a00      	cmp	r2, #0
   84418:	d0fa      	beq.n	84410 <__mdiff+0xa8>
   8441a:	6107      	str	r7, [r0, #16]
   8441c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   84420:	462b      	mov	r3, r5
   84422:	f04f 0901 	mov.w	r9, #1
   84426:	4635      	mov	r5, r6
   84428:	461e      	mov	r6, r3
   8442a:	e7ab      	b.n	84384 <__mdiff+0x1c>
   8442c:	4620      	mov	r0, r4
   8442e:	4639      	mov	r1, r7
   84430:	f7ff fd5a 	bl	83ee8 <_Balloc>
   84434:	2301      	movs	r3, #1
   84436:	6147      	str	r7, [r0, #20]
   84438:	6103      	str	r3, [r0, #16]
   8443a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   8443e:	bf00      	nop

00084440 <__d2b>:
   84440:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   84444:	2101      	movs	r1, #1
   84446:	b083      	sub	sp, #12
   84448:	461d      	mov	r5, r3
   8444a:	f3c3 560a 	ubfx	r6, r3, #20, #11
   8444e:	4614      	mov	r4, r2
   84450:	9f0a      	ldr	r7, [sp, #40]	; 0x28
   84452:	f7ff fd49 	bl	83ee8 <_Balloc>
   84456:	f3c5 0313 	ubfx	r3, r5, #0, #20
   8445a:	4680      	mov	r8, r0
   8445c:	b10e      	cbz	r6, 84462 <__d2b+0x22>
   8445e:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84462:	9301      	str	r3, [sp, #4]
   84464:	b324      	cbz	r4, 844b0 <__d2b+0x70>
   84466:	a802      	add	r0, sp, #8
   84468:	f840 4d08 	str.w	r4, [r0, #-8]!
   8446c:	4668      	mov	r0, sp
   8446e:	f7ff fdd5 	bl	8401c <__lo0bits>
   84472:	2800      	cmp	r0, #0
   84474:	d135      	bne.n	844e2 <__d2b+0xa2>
   84476:	e89d 000c 	ldmia.w	sp, {r2, r3}
   8447a:	f8c8 2014 	str.w	r2, [r8, #20]
   8447e:	2b00      	cmp	r3, #0
   84480:	bf0c      	ite	eq
   84482:	2401      	moveq	r4, #1
   84484:	2402      	movne	r4, #2
   84486:	f8c8 3018 	str.w	r3, [r8, #24]
   8448a:	f8c8 4010 	str.w	r4, [r8, #16]
   8448e:	b9de      	cbnz	r6, 844c8 <__d2b+0x88>
   84490:	eb08 0384 	add.w	r3, r8, r4, lsl #2
   84494:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
   84498:	6038      	str	r0, [r7, #0]
   8449a:	6918      	ldr	r0, [r3, #16]
   8449c:	f7ff fd9e 	bl	83fdc <__hi0bits>
   844a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   844a2:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
   844a6:	6018      	str	r0, [r3, #0]
   844a8:	4640      	mov	r0, r8
   844aa:	b003      	add	sp, #12
   844ac:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   844b0:	a801      	add	r0, sp, #4
   844b2:	f7ff fdb3 	bl	8401c <__lo0bits>
   844b6:	9b01      	ldr	r3, [sp, #4]
   844b8:	2401      	movs	r4, #1
   844ba:	3020      	adds	r0, #32
   844bc:	f8c8 3014 	str.w	r3, [r8, #20]
   844c0:	f8c8 4010 	str.w	r4, [r8, #16]
   844c4:	2e00      	cmp	r6, #0
   844c6:	d0e3      	beq.n	84490 <__d2b+0x50>
   844c8:	f2a6 4933 	subw	r9, r6, #1075	; 0x433
   844cc:	eb09 0300 	add.w	r3, r9, r0
   844d0:	603b      	str	r3, [r7, #0]
   844d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
   844d4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
   844d8:	6018      	str	r0, [r3, #0]
   844da:	4640      	mov	r0, r8
   844dc:	b003      	add	sp, #12
   844de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   844e2:	9b01      	ldr	r3, [sp, #4]
   844e4:	f1c0 0120 	rsb	r1, r0, #32
   844e8:	fa03 f101 	lsl.w	r1, r3, r1
   844ec:	40c3      	lsrs	r3, r0
   844ee:	9a00      	ldr	r2, [sp, #0]
   844f0:	9301      	str	r3, [sp, #4]
   844f2:	430a      	orrs	r2, r1
   844f4:	f8c8 2014 	str.w	r2, [r8, #20]
   844f8:	e7c1      	b.n	8447e <__d2b+0x3e>
   844fa:	bf00      	nop

000844fc <_realloc_r>:
   844fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84500:	460c      	mov	r4, r1
   84502:	b083      	sub	sp, #12
   84504:	4690      	mov	r8, r2
   84506:	4681      	mov	r9, r0
   84508:	2900      	cmp	r1, #0
   8450a:	f000 80ba 	beq.w	84682 <_realloc_r+0x186>
   8450e:	f7ff fce7 	bl	83ee0 <__malloc_lock>
   84512:	f108 060b 	add.w	r6, r8, #11
   84516:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8451a:	2e16      	cmp	r6, #22
   8451c:	f023 0503 	bic.w	r5, r3, #3
   84520:	f1a4 0708 	sub.w	r7, r4, #8
   84524:	d84b      	bhi.n	845be <_realloc_r+0xc2>
   84526:	2110      	movs	r1, #16
   84528:	460e      	mov	r6, r1
   8452a:	45b0      	cmp	r8, r6
   8452c:	d84c      	bhi.n	845c8 <_realloc_r+0xcc>
   8452e:	428d      	cmp	r5, r1
   84530:	da51      	bge.n	845d6 <_realloc_r+0xda>
   84532:	f8df b384 	ldr.w	fp, [pc, #900]	; 848b8 <_realloc_r+0x3bc>
   84536:	1978      	adds	r0, r7, r5
   84538:	f8db e008 	ldr.w	lr, [fp, #8]
   8453c:	4586      	cmp	lr, r0
   8453e:	f000 80a6 	beq.w	8468e <_realloc_r+0x192>
   84542:	6842      	ldr	r2, [r0, #4]
   84544:	f022 0c01 	bic.w	ip, r2, #1
   84548:	4484      	add	ip, r0
   8454a:	f8dc c004 	ldr.w	ip, [ip, #4]
   8454e:	f01c 0f01 	tst.w	ip, #1
   84552:	d054      	beq.n	845fe <_realloc_r+0x102>
   84554:	2200      	movs	r2, #0
   84556:	4610      	mov	r0, r2
   84558:	07db      	lsls	r3, r3, #31
   8455a:	d46f      	bmi.n	8463c <_realloc_r+0x140>
   8455c:	f854 3c08 	ldr.w	r3, [r4, #-8]
   84560:	ebc3 0a07 	rsb	sl, r3, r7
   84564:	f8da 3004 	ldr.w	r3, [sl, #4]
   84568:	f023 0303 	bic.w	r3, r3, #3
   8456c:	442b      	add	r3, r5
   8456e:	2800      	cmp	r0, #0
   84570:	d062      	beq.n	84638 <_realloc_r+0x13c>
   84572:	4570      	cmp	r0, lr
   84574:	f000 80e9 	beq.w	8474a <_realloc_r+0x24e>
   84578:	eb02 0e03 	add.w	lr, r2, r3
   8457c:	458e      	cmp	lr, r1
   8457e:	db5b      	blt.n	84638 <_realloc_r+0x13c>
   84580:	68c3      	ldr	r3, [r0, #12]
   84582:	6882      	ldr	r2, [r0, #8]
   84584:	46d0      	mov	r8, sl
   84586:	60d3      	str	r3, [r2, #12]
   84588:	609a      	str	r2, [r3, #8]
   8458a:	f858 1f08 	ldr.w	r1, [r8, #8]!
   8458e:	f8da 300c 	ldr.w	r3, [sl, #12]
   84592:	1f2a      	subs	r2, r5, #4
   84594:	2a24      	cmp	r2, #36	; 0x24
   84596:	60cb      	str	r3, [r1, #12]
   84598:	6099      	str	r1, [r3, #8]
   8459a:	f200 8123 	bhi.w	847e4 <_realloc_r+0x2e8>
   8459e:	2a13      	cmp	r2, #19
   845a0:	f240 80b0 	bls.w	84704 <_realloc_r+0x208>
   845a4:	6823      	ldr	r3, [r4, #0]
   845a6:	2a1b      	cmp	r2, #27
   845a8:	f8ca 3008 	str.w	r3, [sl, #8]
   845ac:	6863      	ldr	r3, [r4, #4]
   845ae:	f8ca 300c 	str.w	r3, [sl, #12]
   845b2:	f200 812b 	bhi.w	8480c <_realloc_r+0x310>
   845b6:	3408      	adds	r4, #8
   845b8:	f10a 0310 	add.w	r3, sl, #16
   845bc:	e0a3      	b.n	84706 <_realloc_r+0x20a>
   845be:	f026 0607 	bic.w	r6, r6, #7
   845c2:	2e00      	cmp	r6, #0
   845c4:	4631      	mov	r1, r6
   845c6:	dab0      	bge.n	8452a <_realloc_r+0x2e>
   845c8:	230c      	movs	r3, #12
   845ca:	2000      	movs	r0, #0
   845cc:	f8c9 3000 	str.w	r3, [r9]
   845d0:	b003      	add	sp, #12
   845d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845d6:	46a0      	mov	r8, r4
   845d8:	1baa      	subs	r2, r5, r6
   845da:	2a0f      	cmp	r2, #15
   845dc:	f003 0301 	and.w	r3, r3, #1
   845e0:	d81a      	bhi.n	84618 <_realloc_r+0x11c>
   845e2:	432b      	orrs	r3, r5
   845e4:	607b      	str	r3, [r7, #4]
   845e6:	443d      	add	r5, r7
   845e8:	686b      	ldr	r3, [r5, #4]
   845ea:	f043 0301 	orr.w	r3, r3, #1
   845ee:	606b      	str	r3, [r5, #4]
   845f0:	4648      	mov	r0, r9
   845f2:	f7ff fc77 	bl	83ee4 <__malloc_unlock>
   845f6:	4640      	mov	r0, r8
   845f8:	b003      	add	sp, #12
   845fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   845fe:	f022 0203 	bic.w	r2, r2, #3
   84602:	eb02 0c05 	add.w	ip, r2, r5
   84606:	458c      	cmp	ip, r1
   84608:	dba6      	blt.n	84558 <_realloc_r+0x5c>
   8460a:	68c2      	ldr	r2, [r0, #12]
   8460c:	6881      	ldr	r1, [r0, #8]
   8460e:	46a0      	mov	r8, r4
   84610:	60ca      	str	r2, [r1, #12]
   84612:	4665      	mov	r5, ip
   84614:	6091      	str	r1, [r2, #8]
   84616:	e7df      	b.n	845d8 <_realloc_r+0xdc>
   84618:	19b9      	adds	r1, r7, r6
   8461a:	4333      	orrs	r3, r6
   8461c:	f042 0001 	orr.w	r0, r2, #1
   84620:	607b      	str	r3, [r7, #4]
   84622:	440a      	add	r2, r1
   84624:	6048      	str	r0, [r1, #4]
   84626:	6853      	ldr	r3, [r2, #4]
   84628:	3108      	adds	r1, #8
   8462a:	f043 0301 	orr.w	r3, r3, #1
   8462e:	6053      	str	r3, [r2, #4]
   84630:	4648      	mov	r0, r9
   84632:	f7fe ffc3 	bl	835bc <_free_r>
   84636:	e7db      	b.n	845f0 <_realloc_r+0xf4>
   84638:	428b      	cmp	r3, r1
   8463a:	da33      	bge.n	846a4 <_realloc_r+0x1a8>
   8463c:	4641      	mov	r1, r8
   8463e:	4648      	mov	r0, r9
   84640:	f7ff f88c 	bl	8375c <_malloc_r>
   84644:	4680      	mov	r8, r0
   84646:	2800      	cmp	r0, #0
   84648:	d0d2      	beq.n	845f0 <_realloc_r+0xf4>
   8464a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8464e:	f1a0 0108 	sub.w	r1, r0, #8
   84652:	f023 0201 	bic.w	r2, r3, #1
   84656:	443a      	add	r2, r7
   84658:	4291      	cmp	r1, r2
   8465a:	f000 80bc 	beq.w	847d6 <_realloc_r+0x2da>
   8465e:	1f2a      	subs	r2, r5, #4
   84660:	2a24      	cmp	r2, #36	; 0x24
   84662:	d86e      	bhi.n	84742 <_realloc_r+0x246>
   84664:	2a13      	cmp	r2, #19
   84666:	d842      	bhi.n	846ee <_realloc_r+0x1f2>
   84668:	4603      	mov	r3, r0
   8466a:	4622      	mov	r2, r4
   8466c:	6811      	ldr	r1, [r2, #0]
   8466e:	6019      	str	r1, [r3, #0]
   84670:	6851      	ldr	r1, [r2, #4]
   84672:	6059      	str	r1, [r3, #4]
   84674:	6892      	ldr	r2, [r2, #8]
   84676:	609a      	str	r2, [r3, #8]
   84678:	4621      	mov	r1, r4
   8467a:	4648      	mov	r0, r9
   8467c:	f7fe ff9e 	bl	835bc <_free_r>
   84680:	e7b6      	b.n	845f0 <_realloc_r+0xf4>
   84682:	4611      	mov	r1, r2
   84684:	b003      	add	sp, #12
   84686:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8468a:	f7ff b867 	b.w	8375c <_malloc_r>
   8468e:	f8de 2004 	ldr.w	r2, [lr, #4]
   84692:	f106 0c10 	add.w	ip, r6, #16
   84696:	f022 0203 	bic.w	r2, r2, #3
   8469a:	1950      	adds	r0, r2, r5
   8469c:	4560      	cmp	r0, ip
   8469e:	da3d      	bge.n	8471c <_realloc_r+0x220>
   846a0:	4670      	mov	r0, lr
   846a2:	e759      	b.n	84558 <_realloc_r+0x5c>
   846a4:	46d0      	mov	r8, sl
   846a6:	f858 0f08 	ldr.w	r0, [r8, #8]!
   846aa:	f8da 100c 	ldr.w	r1, [sl, #12]
   846ae:	1f2a      	subs	r2, r5, #4
   846b0:	2a24      	cmp	r2, #36	; 0x24
   846b2:	60c1      	str	r1, [r0, #12]
   846b4:	6088      	str	r0, [r1, #8]
   846b6:	f200 80a0 	bhi.w	847fa <_realloc_r+0x2fe>
   846ba:	2a13      	cmp	r2, #19
   846bc:	f240 809b 	bls.w	847f6 <_realloc_r+0x2fa>
   846c0:	6821      	ldr	r1, [r4, #0]
   846c2:	2a1b      	cmp	r2, #27
   846c4:	f8ca 1008 	str.w	r1, [sl, #8]
   846c8:	6861      	ldr	r1, [r4, #4]
   846ca:	f8ca 100c 	str.w	r1, [sl, #12]
   846ce:	f200 80b2 	bhi.w	84836 <_realloc_r+0x33a>
   846d2:	3408      	adds	r4, #8
   846d4:	f10a 0210 	add.w	r2, sl, #16
   846d8:	6821      	ldr	r1, [r4, #0]
   846da:	461d      	mov	r5, r3
   846dc:	6011      	str	r1, [r2, #0]
   846de:	6861      	ldr	r1, [r4, #4]
   846e0:	4657      	mov	r7, sl
   846e2:	6051      	str	r1, [r2, #4]
   846e4:	68a3      	ldr	r3, [r4, #8]
   846e6:	6093      	str	r3, [r2, #8]
   846e8:	f8da 3004 	ldr.w	r3, [sl, #4]
   846ec:	e774      	b.n	845d8 <_realloc_r+0xdc>
   846ee:	6823      	ldr	r3, [r4, #0]
   846f0:	2a1b      	cmp	r2, #27
   846f2:	6003      	str	r3, [r0, #0]
   846f4:	6863      	ldr	r3, [r4, #4]
   846f6:	6043      	str	r3, [r0, #4]
   846f8:	d862      	bhi.n	847c0 <_realloc_r+0x2c4>
   846fa:	f100 0308 	add.w	r3, r0, #8
   846fe:	f104 0208 	add.w	r2, r4, #8
   84702:	e7b3      	b.n	8466c <_realloc_r+0x170>
   84704:	4643      	mov	r3, r8
   84706:	6822      	ldr	r2, [r4, #0]
   84708:	4675      	mov	r5, lr
   8470a:	601a      	str	r2, [r3, #0]
   8470c:	6862      	ldr	r2, [r4, #4]
   8470e:	4657      	mov	r7, sl
   84710:	605a      	str	r2, [r3, #4]
   84712:	68a2      	ldr	r2, [r4, #8]
   84714:	609a      	str	r2, [r3, #8]
   84716:	f8da 3004 	ldr.w	r3, [sl, #4]
   8471a:	e75d      	b.n	845d8 <_realloc_r+0xdc>
   8471c:	1b83      	subs	r3, r0, r6
   8471e:	4437      	add	r7, r6
   84720:	f043 0301 	orr.w	r3, r3, #1
   84724:	f8cb 7008 	str.w	r7, [fp, #8]
   84728:	607b      	str	r3, [r7, #4]
   8472a:	f854 3c04 	ldr.w	r3, [r4, #-4]
   8472e:	4648      	mov	r0, r9
   84730:	f003 0301 	and.w	r3, r3, #1
   84734:	431e      	orrs	r6, r3
   84736:	f844 6c04 	str.w	r6, [r4, #-4]
   8473a:	f7ff fbd3 	bl	83ee4 <__malloc_unlock>
   8473e:	4620      	mov	r0, r4
   84740:	e75a      	b.n	845f8 <_realloc_r+0xfc>
   84742:	4621      	mov	r1, r4
   84744:	f7ff fb66 	bl	83e14 <memmove>
   84748:	e796      	b.n	84678 <_realloc_r+0x17c>
   8474a:	eb02 0c03 	add.w	ip, r2, r3
   8474e:	f106 0210 	add.w	r2, r6, #16
   84752:	4594      	cmp	ip, r2
   84754:	f6ff af70 	blt.w	84638 <_realloc_r+0x13c>
   84758:	4657      	mov	r7, sl
   8475a:	f857 1f08 	ldr.w	r1, [r7, #8]!
   8475e:	f8da 300c 	ldr.w	r3, [sl, #12]
   84762:	1f2a      	subs	r2, r5, #4
   84764:	2a24      	cmp	r2, #36	; 0x24
   84766:	60cb      	str	r3, [r1, #12]
   84768:	6099      	str	r1, [r3, #8]
   8476a:	f200 8086 	bhi.w	8487a <_realloc_r+0x37e>
   8476e:	2a13      	cmp	r2, #19
   84770:	d977      	bls.n	84862 <_realloc_r+0x366>
   84772:	6823      	ldr	r3, [r4, #0]
   84774:	2a1b      	cmp	r2, #27
   84776:	f8ca 3008 	str.w	r3, [sl, #8]
   8477a:	6863      	ldr	r3, [r4, #4]
   8477c:	f8ca 300c 	str.w	r3, [sl, #12]
   84780:	f200 8084 	bhi.w	8488c <_realloc_r+0x390>
   84784:	3408      	adds	r4, #8
   84786:	f10a 0310 	add.w	r3, sl, #16
   8478a:	6822      	ldr	r2, [r4, #0]
   8478c:	601a      	str	r2, [r3, #0]
   8478e:	6862      	ldr	r2, [r4, #4]
   84790:	605a      	str	r2, [r3, #4]
   84792:	68a2      	ldr	r2, [r4, #8]
   84794:	609a      	str	r2, [r3, #8]
   84796:	ebc6 020c 	rsb	r2, r6, ip
   8479a:	eb0a 0306 	add.w	r3, sl, r6
   8479e:	f042 0201 	orr.w	r2, r2, #1
   847a2:	f8cb 3008 	str.w	r3, [fp, #8]
   847a6:	605a      	str	r2, [r3, #4]
   847a8:	f8da 3004 	ldr.w	r3, [sl, #4]
   847ac:	4648      	mov	r0, r9
   847ae:	f003 0301 	and.w	r3, r3, #1
   847b2:	431e      	orrs	r6, r3
   847b4:	f8ca 6004 	str.w	r6, [sl, #4]
   847b8:	f7ff fb94 	bl	83ee4 <__malloc_unlock>
   847bc:	4638      	mov	r0, r7
   847be:	e71b      	b.n	845f8 <_realloc_r+0xfc>
   847c0:	68a3      	ldr	r3, [r4, #8]
   847c2:	2a24      	cmp	r2, #36	; 0x24
   847c4:	6083      	str	r3, [r0, #8]
   847c6:	68e3      	ldr	r3, [r4, #12]
   847c8:	60c3      	str	r3, [r0, #12]
   847ca:	d02b      	beq.n	84824 <_realloc_r+0x328>
   847cc:	f100 0310 	add.w	r3, r0, #16
   847d0:	f104 0210 	add.w	r2, r4, #16
   847d4:	e74a      	b.n	8466c <_realloc_r+0x170>
   847d6:	f850 2c04 	ldr.w	r2, [r0, #-4]
   847da:	46a0      	mov	r8, r4
   847dc:	f022 0203 	bic.w	r2, r2, #3
   847e0:	4415      	add	r5, r2
   847e2:	e6f9      	b.n	845d8 <_realloc_r+0xdc>
   847e4:	4621      	mov	r1, r4
   847e6:	4640      	mov	r0, r8
   847e8:	4675      	mov	r5, lr
   847ea:	4657      	mov	r7, sl
   847ec:	f7ff fb12 	bl	83e14 <memmove>
   847f0:	f8da 3004 	ldr.w	r3, [sl, #4]
   847f4:	e6f0      	b.n	845d8 <_realloc_r+0xdc>
   847f6:	4642      	mov	r2, r8
   847f8:	e76e      	b.n	846d8 <_realloc_r+0x1dc>
   847fa:	4621      	mov	r1, r4
   847fc:	4640      	mov	r0, r8
   847fe:	461d      	mov	r5, r3
   84800:	4657      	mov	r7, sl
   84802:	f7ff fb07 	bl	83e14 <memmove>
   84806:	f8da 3004 	ldr.w	r3, [sl, #4]
   8480a:	e6e5      	b.n	845d8 <_realloc_r+0xdc>
   8480c:	68a3      	ldr	r3, [r4, #8]
   8480e:	2a24      	cmp	r2, #36	; 0x24
   84810:	f8ca 3010 	str.w	r3, [sl, #16]
   84814:	68e3      	ldr	r3, [r4, #12]
   84816:	f8ca 3014 	str.w	r3, [sl, #20]
   8481a:	d018      	beq.n	8484e <_realloc_r+0x352>
   8481c:	3410      	adds	r4, #16
   8481e:	f10a 0318 	add.w	r3, sl, #24
   84822:	e770      	b.n	84706 <_realloc_r+0x20a>
   84824:	6922      	ldr	r2, [r4, #16]
   84826:	f100 0318 	add.w	r3, r0, #24
   8482a:	6102      	str	r2, [r0, #16]
   8482c:	6961      	ldr	r1, [r4, #20]
   8482e:	f104 0218 	add.w	r2, r4, #24
   84832:	6141      	str	r1, [r0, #20]
   84834:	e71a      	b.n	8466c <_realloc_r+0x170>
   84836:	68a1      	ldr	r1, [r4, #8]
   84838:	2a24      	cmp	r2, #36	; 0x24
   8483a:	f8ca 1010 	str.w	r1, [sl, #16]
   8483e:	68e1      	ldr	r1, [r4, #12]
   84840:	f8ca 1014 	str.w	r1, [sl, #20]
   84844:	d00f      	beq.n	84866 <_realloc_r+0x36a>
   84846:	3410      	adds	r4, #16
   84848:	f10a 0218 	add.w	r2, sl, #24
   8484c:	e744      	b.n	846d8 <_realloc_r+0x1dc>
   8484e:	6922      	ldr	r2, [r4, #16]
   84850:	f10a 0320 	add.w	r3, sl, #32
   84854:	f8ca 2018 	str.w	r2, [sl, #24]
   84858:	6962      	ldr	r2, [r4, #20]
   8485a:	3418      	adds	r4, #24
   8485c:	f8ca 201c 	str.w	r2, [sl, #28]
   84860:	e751      	b.n	84706 <_realloc_r+0x20a>
   84862:	463b      	mov	r3, r7
   84864:	e791      	b.n	8478a <_realloc_r+0x28e>
   84866:	6921      	ldr	r1, [r4, #16]
   84868:	f10a 0220 	add.w	r2, sl, #32
   8486c:	f8ca 1018 	str.w	r1, [sl, #24]
   84870:	6961      	ldr	r1, [r4, #20]
   84872:	3418      	adds	r4, #24
   84874:	f8ca 101c 	str.w	r1, [sl, #28]
   84878:	e72e      	b.n	846d8 <_realloc_r+0x1dc>
   8487a:	4621      	mov	r1, r4
   8487c:	4638      	mov	r0, r7
   8487e:	f8cd c004 	str.w	ip, [sp, #4]
   84882:	f7ff fac7 	bl	83e14 <memmove>
   84886:	f8dd c004 	ldr.w	ip, [sp, #4]
   8488a:	e784      	b.n	84796 <_realloc_r+0x29a>
   8488c:	68a3      	ldr	r3, [r4, #8]
   8488e:	2a24      	cmp	r2, #36	; 0x24
   84890:	f8ca 3010 	str.w	r3, [sl, #16]
   84894:	68e3      	ldr	r3, [r4, #12]
   84896:	f8ca 3014 	str.w	r3, [sl, #20]
   8489a:	d003      	beq.n	848a4 <_realloc_r+0x3a8>
   8489c:	3410      	adds	r4, #16
   8489e:	f10a 0318 	add.w	r3, sl, #24
   848a2:	e772      	b.n	8478a <_realloc_r+0x28e>
   848a4:	6922      	ldr	r2, [r4, #16]
   848a6:	f10a 0320 	add.w	r3, sl, #32
   848aa:	f8ca 2018 	str.w	r2, [sl, #24]
   848ae:	6962      	ldr	r2, [r4, #20]
   848b0:	3418      	adds	r4, #24
   848b2:	f8ca 201c 	str.w	r2, [sl, #28]
   848b6:	e768      	b.n	8478a <_realloc_r+0x28e>
   848b8:	200705dc 	.word	0x200705dc

000848bc <__fpclassifyd>:
   848bc:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
   848c0:	b410      	push	{r4}
   848c2:	d008      	beq.n	848d6 <__fpclassifyd+0x1a>
   848c4:	4a0f      	ldr	r2, [pc, #60]	; (84904 <__fpclassifyd+0x48>)
   848c6:	f5a3 1480 	sub.w	r4, r3, #1048576	; 0x100000
   848ca:	4294      	cmp	r4, r2
   848cc:	d80a      	bhi.n	848e4 <__fpclassifyd+0x28>
   848ce:	2004      	movs	r0, #4
   848d0:	f85d 4b04 	ldr.w	r4, [sp], #4
   848d4:	4770      	bx	lr
   848d6:	2800      	cmp	r0, #0
   848d8:	bf0c      	ite	eq
   848da:	2002      	moveq	r0, #2
   848dc:	2003      	movne	r0, #3
   848de:	f85d 4b04 	ldr.w	r4, [sp], #4
   848e2:	4770      	bx	lr
   848e4:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
   848e8:	d201      	bcs.n	848ee <__fpclassifyd+0x32>
   848ea:	2003      	movs	r0, #3
   848ec:	e7f7      	b.n	848de <__fpclassifyd+0x22>
   848ee:	4a06      	ldr	r2, [pc, #24]	; (84908 <__fpclassifyd+0x4c>)
   848f0:	4293      	cmp	r3, r2
   848f2:	d001      	beq.n	848f8 <__fpclassifyd+0x3c>
   848f4:	2000      	movs	r0, #0
   848f6:	e7f2      	b.n	848de <__fpclassifyd+0x22>
   848f8:	f1d0 0001 	rsbs	r0, r0, #1
   848fc:	bf38      	it	cc
   848fe:	2000      	movcc	r0, #0
   84900:	e7ed      	b.n	848de <__fpclassifyd+0x22>
   84902:	bf00      	nop
   84904:	7fdfffff 	.word	0x7fdfffff
   84908:	7ff00000 	.word	0x7ff00000

0008490c <_sbrk_r>:
   8490c:	b538      	push	{r3, r4, r5, lr}
   8490e:	4c07      	ldr	r4, [pc, #28]	; (8492c <_sbrk_r+0x20>)
   84910:	2300      	movs	r3, #0
   84912:	4605      	mov	r5, r0
   84914:	4608      	mov	r0, r1
   84916:	6023      	str	r3, [r4, #0]
   84918:	f7fc fab2 	bl	80e80 <_sbrk>
   8491c:	1c43      	adds	r3, r0, #1
   8491e:	d000      	beq.n	84922 <_sbrk_r+0x16>
   84920:	bd38      	pop	{r3, r4, r5, pc}
   84922:	6823      	ldr	r3, [r4, #0]
   84924:	2b00      	cmp	r3, #0
   84926:	d0fb      	beq.n	84920 <_sbrk_r+0x14>
   84928:	602b      	str	r3, [r5, #0]
   8492a:	bd38      	pop	{r3, r4, r5, pc}
   8492c:	20070ad8 	.word	0x20070ad8

00084930 <__ssprint_r>:
   84930:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   84934:	6894      	ldr	r4, [r2, #8]
   84936:	b083      	sub	sp, #12
   84938:	4692      	mov	sl, r2
   8493a:	4680      	mov	r8, r0
   8493c:	460d      	mov	r5, r1
   8493e:	6816      	ldr	r6, [r2, #0]
   84940:	2c00      	cmp	r4, #0
   84942:	d06f      	beq.n	84a24 <__ssprint_r+0xf4>
   84944:	f04f 0b00 	mov.w	fp, #0
   84948:	6808      	ldr	r0, [r1, #0]
   8494a:	688b      	ldr	r3, [r1, #8]
   8494c:	465c      	mov	r4, fp
   8494e:	2c00      	cmp	r4, #0
   84950:	d043      	beq.n	849da <__ssprint_r+0xaa>
   84952:	429c      	cmp	r4, r3
   84954:	461f      	mov	r7, r3
   84956:	d345      	bcc.n	849e4 <__ssprint_r+0xb4>
   84958:	89ab      	ldrh	r3, [r5, #12]
   8495a:	f413 6f90 	tst.w	r3, #1152	; 0x480
   8495e:	d044      	beq.n	849ea <__ssprint_r+0xba>
   84960:	696f      	ldr	r7, [r5, #20]
   84962:	6929      	ldr	r1, [r5, #16]
   84964:	eb07 0747 	add.w	r7, r7, r7, lsl #1
   84968:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
   8496c:	ebc1 0900 	rsb	r9, r1, r0
   84970:	1c62      	adds	r2, r4, #1
   84972:	107f      	asrs	r7, r7, #1
   84974:	444a      	add	r2, r9
   84976:	4297      	cmp	r7, r2
   84978:	bf34      	ite	cc
   8497a:	4617      	movcc	r7, r2
   8497c:	463a      	movcs	r2, r7
   8497e:	055b      	lsls	r3, r3, #21
   84980:	d535      	bpl.n	849ee <__ssprint_r+0xbe>
   84982:	4611      	mov	r1, r2
   84984:	4640      	mov	r0, r8
   84986:	f7fe fee9 	bl	8375c <_malloc_r>
   8498a:	2800      	cmp	r0, #0
   8498c:	d039      	beq.n	84a02 <__ssprint_r+0xd2>
   8498e:	6929      	ldr	r1, [r5, #16]
   84990:	464a      	mov	r2, r9
   84992:	9001      	str	r0, [sp, #4]
   84994:	f7ff f9c8 	bl	83d28 <memcpy>
   84998:	89aa      	ldrh	r2, [r5, #12]
   8499a:	9b01      	ldr	r3, [sp, #4]
   8499c:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
   849a0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
   849a4:	81aa      	strh	r2, [r5, #12]
   849a6:	ebc9 0207 	rsb	r2, r9, r7
   849aa:	eb03 0009 	add.w	r0, r3, r9
   849ae:	616f      	str	r7, [r5, #20]
   849b0:	612b      	str	r3, [r5, #16]
   849b2:	6028      	str	r0, [r5, #0]
   849b4:	60aa      	str	r2, [r5, #8]
   849b6:	4627      	mov	r7, r4
   849b8:	46a1      	mov	r9, r4
   849ba:	464a      	mov	r2, r9
   849bc:	4659      	mov	r1, fp
   849be:	f7ff fa29 	bl	83e14 <memmove>
   849c2:	f8da 2008 	ldr.w	r2, [sl, #8]
   849c6:	68ab      	ldr	r3, [r5, #8]
   849c8:	6828      	ldr	r0, [r5, #0]
   849ca:	1bdb      	subs	r3, r3, r7
   849cc:	4448      	add	r0, r9
   849ce:	1b14      	subs	r4, r2, r4
   849d0:	60ab      	str	r3, [r5, #8]
   849d2:	6028      	str	r0, [r5, #0]
   849d4:	f8ca 4008 	str.w	r4, [sl, #8]
   849d8:	b324      	cbz	r4, 84a24 <__ssprint_r+0xf4>
   849da:	f8d6 b000 	ldr.w	fp, [r6]
   849de:	6874      	ldr	r4, [r6, #4]
   849e0:	3608      	adds	r6, #8
   849e2:	e7b4      	b.n	8494e <__ssprint_r+0x1e>
   849e4:	4627      	mov	r7, r4
   849e6:	46a1      	mov	r9, r4
   849e8:	e7e7      	b.n	849ba <__ssprint_r+0x8a>
   849ea:	46b9      	mov	r9, r7
   849ec:	e7e5      	b.n	849ba <__ssprint_r+0x8a>
   849ee:	4640      	mov	r0, r8
   849f0:	f7ff fd84 	bl	844fc <_realloc_r>
   849f4:	4603      	mov	r3, r0
   849f6:	2800      	cmp	r0, #0
   849f8:	d1d5      	bne.n	849a6 <__ssprint_r+0x76>
   849fa:	4640      	mov	r0, r8
   849fc:	6929      	ldr	r1, [r5, #16]
   849fe:	f7fe fddd 	bl	835bc <_free_r>
   84a02:	89aa      	ldrh	r2, [r5, #12]
   84a04:	230c      	movs	r3, #12
   84a06:	f8c8 3000 	str.w	r3, [r8]
   84a0a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
   84a0e:	2300      	movs	r3, #0
   84a10:	f04f 30ff 	mov.w	r0, #4294967295
   84a14:	81aa      	strh	r2, [r5, #12]
   84a16:	f8ca 3008 	str.w	r3, [sl, #8]
   84a1a:	f8ca 3004 	str.w	r3, [sl, #4]
   84a1e:	b003      	add	sp, #12
   84a20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   84a24:	4620      	mov	r0, r4
   84a26:	f8ca 4004 	str.w	r4, [sl, #4]
   84a2a:	b003      	add	sp, #12
   84a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00084a30 <__register_exitproc>:
   84a30:	b5f0      	push	{r4, r5, r6, r7, lr}
   84a32:	4c27      	ldr	r4, [pc, #156]	; (84ad0 <__register_exitproc+0xa0>)
   84a34:	b085      	sub	sp, #20
   84a36:	6826      	ldr	r6, [r4, #0]
   84a38:	4607      	mov	r7, r0
   84a3a:	f8d6 4148 	ldr.w	r4, [r6, #328]	; 0x148
   84a3e:	2c00      	cmp	r4, #0
   84a40:	d040      	beq.n	84ac4 <__register_exitproc+0x94>
   84a42:	6865      	ldr	r5, [r4, #4]
   84a44:	2d1f      	cmp	r5, #31
   84a46:	dd1e      	ble.n	84a86 <__register_exitproc+0x56>
   84a48:	4822      	ldr	r0, [pc, #136]	; (84ad4 <__register_exitproc+0xa4>)
   84a4a:	b918      	cbnz	r0, 84a54 <__register_exitproc+0x24>
   84a4c:	f04f 30ff 	mov.w	r0, #4294967295
   84a50:	b005      	add	sp, #20
   84a52:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84a54:	f44f 70c8 	mov.w	r0, #400	; 0x190
   84a58:	9103      	str	r1, [sp, #12]
   84a5a:	9202      	str	r2, [sp, #8]
   84a5c:	9301      	str	r3, [sp, #4]
   84a5e:	f3af 8000 	nop.w
   84a62:	9903      	ldr	r1, [sp, #12]
   84a64:	4604      	mov	r4, r0
   84a66:	9a02      	ldr	r2, [sp, #8]
   84a68:	9b01      	ldr	r3, [sp, #4]
   84a6a:	2800      	cmp	r0, #0
   84a6c:	d0ee      	beq.n	84a4c <__register_exitproc+0x1c>
   84a6e:	f8d6 5148 	ldr.w	r5, [r6, #328]	; 0x148
   84a72:	2000      	movs	r0, #0
   84a74:	6025      	str	r5, [r4, #0]
   84a76:	6060      	str	r0, [r4, #4]
   84a78:	4605      	mov	r5, r0
   84a7a:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84a7e:	f8c4 0188 	str.w	r0, [r4, #392]	; 0x188
   84a82:	f8c4 018c 	str.w	r0, [r4, #396]	; 0x18c
   84a86:	b93f      	cbnz	r7, 84a98 <__register_exitproc+0x68>
   84a88:	1c6b      	adds	r3, r5, #1
   84a8a:	2000      	movs	r0, #0
   84a8c:	3502      	adds	r5, #2
   84a8e:	6063      	str	r3, [r4, #4]
   84a90:	f844 1025 	str.w	r1, [r4, r5, lsl #2]
   84a94:	b005      	add	sp, #20
   84a96:	bdf0      	pop	{r4, r5, r6, r7, pc}
   84a98:	2601      	movs	r6, #1
   84a9a:	40ae      	lsls	r6, r5
   84a9c:	eb04 0085 	add.w	r0, r4, r5, lsl #2
   84aa0:	f8c0 2088 	str.w	r2, [r0, #136]	; 0x88
   84aa4:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
   84aa8:	2f02      	cmp	r7, #2
   84aaa:	ea42 0206 	orr.w	r2, r2, r6
   84aae:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
   84ab2:	f8c0 3108 	str.w	r3, [r0, #264]	; 0x108
   84ab6:	d1e7      	bne.n	84a88 <__register_exitproc+0x58>
   84ab8:	f8d4 318c 	ldr.w	r3, [r4, #396]	; 0x18c
   84abc:	431e      	orrs	r6, r3
   84abe:	f8c4 618c 	str.w	r6, [r4, #396]	; 0x18c
   84ac2:	e7e1      	b.n	84a88 <__register_exitproc+0x58>
   84ac4:	f506 74a6 	add.w	r4, r6, #332	; 0x14c
   84ac8:	f8c6 4148 	str.w	r4, [r6, #328]	; 0x148
   84acc:	e7b9      	b.n	84a42 <__register_exitproc+0x12>
   84ace:	bf00      	nop
   84ad0:	00085a20 	.word	0x00085a20
   84ad4:	00000000 	.word	0x00000000

00084ad8 <_calloc_r>:
   84ad8:	b510      	push	{r4, lr}
   84ada:	fb02 f101 	mul.w	r1, r2, r1
   84ade:	f7fe fe3d 	bl	8375c <_malloc_r>
   84ae2:	4604      	mov	r4, r0
   84ae4:	b168      	cbz	r0, 84b02 <_calloc_r+0x2a>
   84ae6:	f850 2c04 	ldr.w	r2, [r0, #-4]
   84aea:	f022 0203 	bic.w	r2, r2, #3
   84aee:	3a04      	subs	r2, #4
   84af0:	2a24      	cmp	r2, #36	; 0x24
   84af2:	d818      	bhi.n	84b26 <_calloc_r+0x4e>
   84af4:	2a13      	cmp	r2, #19
   84af6:	d806      	bhi.n	84b06 <_calloc_r+0x2e>
   84af8:	4603      	mov	r3, r0
   84afa:	2200      	movs	r2, #0
   84afc:	601a      	str	r2, [r3, #0]
   84afe:	605a      	str	r2, [r3, #4]
   84b00:	609a      	str	r2, [r3, #8]
   84b02:	4620      	mov	r0, r4
   84b04:	bd10      	pop	{r4, pc}
   84b06:	2300      	movs	r3, #0
   84b08:	2a1b      	cmp	r2, #27
   84b0a:	6003      	str	r3, [r0, #0]
   84b0c:	6043      	str	r3, [r0, #4]
   84b0e:	d90f      	bls.n	84b30 <_calloc_r+0x58>
   84b10:	2a24      	cmp	r2, #36	; 0x24
   84b12:	6083      	str	r3, [r0, #8]
   84b14:	60c3      	str	r3, [r0, #12]
   84b16:	bf05      	ittet	eq
   84b18:	6103      	streq	r3, [r0, #16]
   84b1a:	6143      	streq	r3, [r0, #20]
   84b1c:	f100 0310 	addne.w	r3, r0, #16
   84b20:	f100 0318 	addeq.w	r3, r0, #24
   84b24:	e7e9      	b.n	84afa <_calloc_r+0x22>
   84b26:	2100      	movs	r1, #0
   84b28:	f7fc fa0a 	bl	80f40 <memset>
   84b2c:	4620      	mov	r0, r4
   84b2e:	bd10      	pop	{r4, pc}
   84b30:	f100 0308 	add.w	r3, r0, #8
   84b34:	e7e1      	b.n	84afa <_calloc_r+0x22>
   84b36:	bf00      	nop

00084b38 <__aeabi_drsub>:
   84b38:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
   84b3c:	e002      	b.n	84b44 <__adddf3>
   84b3e:	bf00      	nop

00084b40 <__aeabi_dsub>:
   84b40:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00084b44 <__adddf3>:
   84b44:	b530      	push	{r4, r5, lr}
   84b46:	ea4f 0441 	mov.w	r4, r1, lsl #1
   84b4a:	ea4f 0543 	mov.w	r5, r3, lsl #1
   84b4e:	ea94 0f05 	teq	r4, r5
   84b52:	bf08      	it	eq
   84b54:	ea90 0f02 	teqeq	r0, r2
   84b58:	bf1f      	itttt	ne
   84b5a:	ea54 0c00 	orrsne.w	ip, r4, r0
   84b5e:	ea55 0c02 	orrsne.w	ip, r5, r2
   84b62:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
   84b66:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84b6a:	f000 80e2 	beq.w	84d32 <__adddf3+0x1ee>
   84b6e:	ea4f 5454 	mov.w	r4, r4, lsr #21
   84b72:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
   84b76:	bfb8      	it	lt
   84b78:	426d      	neglt	r5, r5
   84b7a:	dd0c      	ble.n	84b96 <__adddf3+0x52>
   84b7c:	442c      	add	r4, r5
   84b7e:	ea80 0202 	eor.w	r2, r0, r2
   84b82:	ea81 0303 	eor.w	r3, r1, r3
   84b86:	ea82 0000 	eor.w	r0, r2, r0
   84b8a:	ea83 0101 	eor.w	r1, r3, r1
   84b8e:	ea80 0202 	eor.w	r2, r0, r2
   84b92:	ea81 0303 	eor.w	r3, r1, r3
   84b96:	2d36      	cmp	r5, #54	; 0x36
   84b98:	bf88      	it	hi
   84b9a:	bd30      	pophi	{r4, r5, pc}
   84b9c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   84ba0:	ea4f 3101 	mov.w	r1, r1, lsl #12
   84ba4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
   84ba8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
   84bac:	d002      	beq.n	84bb4 <__adddf3+0x70>
   84bae:	4240      	negs	r0, r0
   84bb0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84bb4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
   84bb8:	ea4f 3303 	mov.w	r3, r3, lsl #12
   84bbc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
   84bc0:	d002      	beq.n	84bc8 <__adddf3+0x84>
   84bc2:	4252      	negs	r2, r2
   84bc4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   84bc8:	ea94 0f05 	teq	r4, r5
   84bcc:	f000 80a7 	beq.w	84d1e <__adddf3+0x1da>
   84bd0:	f1a4 0401 	sub.w	r4, r4, #1
   84bd4:	f1d5 0e20 	rsbs	lr, r5, #32
   84bd8:	db0d      	blt.n	84bf6 <__adddf3+0xb2>
   84bda:	fa02 fc0e 	lsl.w	ip, r2, lr
   84bde:	fa22 f205 	lsr.w	r2, r2, r5
   84be2:	1880      	adds	r0, r0, r2
   84be4:	f141 0100 	adc.w	r1, r1, #0
   84be8:	fa03 f20e 	lsl.w	r2, r3, lr
   84bec:	1880      	adds	r0, r0, r2
   84bee:	fa43 f305 	asr.w	r3, r3, r5
   84bf2:	4159      	adcs	r1, r3
   84bf4:	e00e      	b.n	84c14 <__adddf3+0xd0>
   84bf6:	f1a5 0520 	sub.w	r5, r5, #32
   84bfa:	f10e 0e20 	add.w	lr, lr, #32
   84bfe:	2a01      	cmp	r2, #1
   84c00:	fa03 fc0e 	lsl.w	ip, r3, lr
   84c04:	bf28      	it	cs
   84c06:	f04c 0c02 	orrcs.w	ip, ip, #2
   84c0a:	fa43 f305 	asr.w	r3, r3, r5
   84c0e:	18c0      	adds	r0, r0, r3
   84c10:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
   84c14:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84c18:	d507      	bpl.n	84c2a <__adddf3+0xe6>
   84c1a:	f04f 0e00 	mov.w	lr, #0
   84c1e:	f1dc 0c00 	rsbs	ip, ip, #0
   84c22:	eb7e 0000 	sbcs.w	r0, lr, r0
   84c26:	eb6e 0101 	sbc.w	r1, lr, r1
   84c2a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
   84c2e:	d31b      	bcc.n	84c68 <__adddf3+0x124>
   84c30:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
   84c34:	d30c      	bcc.n	84c50 <__adddf3+0x10c>
   84c36:	0849      	lsrs	r1, r1, #1
   84c38:	ea5f 0030 	movs.w	r0, r0, rrx
   84c3c:	ea4f 0c3c 	mov.w	ip, ip, rrx
   84c40:	f104 0401 	add.w	r4, r4, #1
   84c44:	ea4f 5244 	mov.w	r2, r4, lsl #21
   84c48:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
   84c4c:	f080 809a 	bcs.w	84d84 <__adddf3+0x240>
   84c50:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
   84c54:	bf08      	it	eq
   84c56:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   84c5a:	f150 0000 	adcs.w	r0, r0, #0
   84c5e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84c62:	ea41 0105 	orr.w	r1, r1, r5
   84c66:	bd30      	pop	{r4, r5, pc}
   84c68:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
   84c6c:	4140      	adcs	r0, r0
   84c6e:	eb41 0101 	adc.w	r1, r1, r1
   84c72:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   84c76:	f1a4 0401 	sub.w	r4, r4, #1
   84c7a:	d1e9      	bne.n	84c50 <__adddf3+0x10c>
   84c7c:	f091 0f00 	teq	r1, #0
   84c80:	bf04      	itt	eq
   84c82:	4601      	moveq	r1, r0
   84c84:	2000      	moveq	r0, #0
   84c86:	fab1 f381 	clz	r3, r1
   84c8a:	bf08      	it	eq
   84c8c:	3320      	addeq	r3, #32
   84c8e:	f1a3 030b 	sub.w	r3, r3, #11
   84c92:	f1b3 0220 	subs.w	r2, r3, #32
   84c96:	da0c      	bge.n	84cb2 <__adddf3+0x16e>
   84c98:	320c      	adds	r2, #12
   84c9a:	dd08      	ble.n	84cae <__adddf3+0x16a>
   84c9c:	f102 0c14 	add.w	ip, r2, #20
   84ca0:	f1c2 020c 	rsb	r2, r2, #12
   84ca4:	fa01 f00c 	lsl.w	r0, r1, ip
   84ca8:	fa21 f102 	lsr.w	r1, r1, r2
   84cac:	e00c      	b.n	84cc8 <__adddf3+0x184>
   84cae:	f102 0214 	add.w	r2, r2, #20
   84cb2:	bfd8      	it	le
   84cb4:	f1c2 0c20 	rsble	ip, r2, #32
   84cb8:	fa01 f102 	lsl.w	r1, r1, r2
   84cbc:	fa20 fc0c 	lsr.w	ip, r0, ip
   84cc0:	bfdc      	itt	le
   84cc2:	ea41 010c 	orrle.w	r1, r1, ip
   84cc6:	4090      	lslle	r0, r2
   84cc8:	1ae4      	subs	r4, r4, r3
   84cca:	bfa2      	ittt	ge
   84ccc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
   84cd0:	4329      	orrge	r1, r5
   84cd2:	bd30      	popge	{r4, r5, pc}
   84cd4:	ea6f 0404 	mvn.w	r4, r4
   84cd8:	3c1f      	subs	r4, #31
   84cda:	da1c      	bge.n	84d16 <__adddf3+0x1d2>
   84cdc:	340c      	adds	r4, #12
   84cde:	dc0e      	bgt.n	84cfe <__adddf3+0x1ba>
   84ce0:	f104 0414 	add.w	r4, r4, #20
   84ce4:	f1c4 0220 	rsb	r2, r4, #32
   84ce8:	fa20 f004 	lsr.w	r0, r0, r4
   84cec:	fa01 f302 	lsl.w	r3, r1, r2
   84cf0:	ea40 0003 	orr.w	r0, r0, r3
   84cf4:	fa21 f304 	lsr.w	r3, r1, r4
   84cf8:	ea45 0103 	orr.w	r1, r5, r3
   84cfc:	bd30      	pop	{r4, r5, pc}
   84cfe:	f1c4 040c 	rsb	r4, r4, #12
   84d02:	f1c4 0220 	rsb	r2, r4, #32
   84d06:	fa20 f002 	lsr.w	r0, r0, r2
   84d0a:	fa01 f304 	lsl.w	r3, r1, r4
   84d0e:	ea40 0003 	orr.w	r0, r0, r3
   84d12:	4629      	mov	r1, r5
   84d14:	bd30      	pop	{r4, r5, pc}
   84d16:	fa21 f004 	lsr.w	r0, r1, r4
   84d1a:	4629      	mov	r1, r5
   84d1c:	bd30      	pop	{r4, r5, pc}
   84d1e:	f094 0f00 	teq	r4, #0
   84d22:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
   84d26:	bf06      	itte	eq
   84d28:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
   84d2c:	3401      	addeq	r4, #1
   84d2e:	3d01      	subne	r5, #1
   84d30:	e74e      	b.n	84bd0 <__adddf3+0x8c>
   84d32:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84d36:	bf18      	it	ne
   84d38:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
   84d3c:	d029      	beq.n	84d92 <__adddf3+0x24e>
   84d3e:	ea94 0f05 	teq	r4, r5
   84d42:	bf08      	it	eq
   84d44:	ea90 0f02 	teqeq	r0, r2
   84d48:	d005      	beq.n	84d56 <__adddf3+0x212>
   84d4a:	ea54 0c00 	orrs.w	ip, r4, r0
   84d4e:	bf04      	itt	eq
   84d50:	4619      	moveq	r1, r3
   84d52:	4610      	moveq	r0, r2
   84d54:	bd30      	pop	{r4, r5, pc}
   84d56:	ea91 0f03 	teq	r1, r3
   84d5a:	bf1e      	ittt	ne
   84d5c:	2100      	movne	r1, #0
   84d5e:	2000      	movne	r0, #0
   84d60:	bd30      	popne	{r4, r5, pc}
   84d62:	ea5f 5c54 	movs.w	ip, r4, lsr #21
   84d66:	d105      	bne.n	84d74 <__adddf3+0x230>
   84d68:	0040      	lsls	r0, r0, #1
   84d6a:	4149      	adcs	r1, r1
   84d6c:	bf28      	it	cs
   84d6e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
   84d72:	bd30      	pop	{r4, r5, pc}
   84d74:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
   84d78:	bf3c      	itt	cc
   84d7a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
   84d7e:	bd30      	popcc	{r4, r5, pc}
   84d80:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84d84:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
   84d88:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   84d8c:	f04f 0000 	mov.w	r0, #0
   84d90:	bd30      	pop	{r4, r5, pc}
   84d92:	ea7f 5c64 	mvns.w	ip, r4, asr #21
   84d96:	bf1a      	itte	ne
   84d98:	4619      	movne	r1, r3
   84d9a:	4610      	movne	r0, r2
   84d9c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
   84da0:	bf1c      	itt	ne
   84da2:	460b      	movne	r3, r1
   84da4:	4602      	movne	r2, r0
   84da6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   84daa:	bf06      	itte	eq
   84dac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
   84db0:	ea91 0f03 	teqeq	r1, r3
   84db4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
   84db8:	bd30      	pop	{r4, r5, pc}
   84dba:	bf00      	nop

00084dbc <__aeabi_ui2d>:
   84dbc:	f090 0f00 	teq	r0, #0
   84dc0:	bf04      	itt	eq
   84dc2:	2100      	moveq	r1, #0
   84dc4:	4770      	bxeq	lr
   84dc6:	b530      	push	{r4, r5, lr}
   84dc8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84dcc:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84dd0:	f04f 0500 	mov.w	r5, #0
   84dd4:	f04f 0100 	mov.w	r1, #0
   84dd8:	e750      	b.n	84c7c <__adddf3+0x138>
   84dda:	bf00      	nop

00084ddc <__aeabi_i2d>:
   84ddc:	f090 0f00 	teq	r0, #0
   84de0:	bf04      	itt	eq
   84de2:	2100      	moveq	r1, #0
   84de4:	4770      	bxeq	lr
   84de6:	b530      	push	{r4, r5, lr}
   84de8:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84dec:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84df0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
   84df4:	bf48      	it	mi
   84df6:	4240      	negmi	r0, r0
   84df8:	f04f 0100 	mov.w	r1, #0
   84dfc:	e73e      	b.n	84c7c <__adddf3+0x138>
   84dfe:	bf00      	nop

00084e00 <__aeabi_f2d>:
   84e00:	0042      	lsls	r2, r0, #1
   84e02:	ea4f 01e2 	mov.w	r1, r2, asr #3
   84e06:	ea4f 0131 	mov.w	r1, r1, rrx
   84e0a:	ea4f 7002 	mov.w	r0, r2, lsl #28
   84e0e:	bf1f      	itttt	ne
   84e10:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
   84e14:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84e18:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
   84e1c:	4770      	bxne	lr
   84e1e:	f092 0f00 	teq	r2, #0
   84e22:	bf14      	ite	ne
   84e24:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
   84e28:	4770      	bxeq	lr
   84e2a:	b530      	push	{r4, r5, lr}
   84e2c:	f44f 7460 	mov.w	r4, #896	; 0x380
   84e30:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
   84e34:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84e38:	e720      	b.n	84c7c <__adddf3+0x138>
   84e3a:	bf00      	nop

00084e3c <__aeabi_ul2d>:
   84e3c:	ea50 0201 	orrs.w	r2, r0, r1
   84e40:	bf08      	it	eq
   84e42:	4770      	bxeq	lr
   84e44:	b530      	push	{r4, r5, lr}
   84e46:	f04f 0500 	mov.w	r5, #0
   84e4a:	e00a      	b.n	84e62 <__aeabi_l2d+0x16>

00084e4c <__aeabi_l2d>:
   84e4c:	ea50 0201 	orrs.w	r2, r0, r1
   84e50:	bf08      	it	eq
   84e52:	4770      	bxeq	lr
   84e54:	b530      	push	{r4, r5, lr}
   84e56:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
   84e5a:	d502      	bpl.n	84e62 <__aeabi_l2d+0x16>
   84e5c:	4240      	negs	r0, r0
   84e5e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   84e62:	f44f 6480 	mov.w	r4, #1024	; 0x400
   84e66:	f104 0432 	add.w	r4, r4, #50	; 0x32
   84e6a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
   84e6e:	f43f aedc 	beq.w	84c2a <__adddf3+0xe6>
   84e72:	f04f 0203 	mov.w	r2, #3
   84e76:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84e7a:	bf18      	it	ne
   84e7c:	3203      	addne	r2, #3
   84e7e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
   84e82:	bf18      	it	ne
   84e84:	3203      	addne	r2, #3
   84e86:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
   84e8a:	f1c2 0320 	rsb	r3, r2, #32
   84e8e:	fa00 fc03 	lsl.w	ip, r0, r3
   84e92:	fa20 f002 	lsr.w	r0, r0, r2
   84e96:	fa01 fe03 	lsl.w	lr, r1, r3
   84e9a:	ea40 000e 	orr.w	r0, r0, lr
   84e9e:	fa21 f102 	lsr.w	r1, r1, r2
   84ea2:	4414      	add	r4, r2
   84ea4:	e6c1      	b.n	84c2a <__adddf3+0xe6>
   84ea6:	bf00      	nop

00084ea8 <__aeabi_dmul>:
   84ea8:	b570      	push	{r4, r5, r6, lr}
   84eaa:	f04f 0cff 	mov.w	ip, #255	; 0xff
   84eae:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   84eb2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   84eb6:	bf1d      	ittte	ne
   84eb8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   84ebc:	ea94 0f0c 	teqne	r4, ip
   84ec0:	ea95 0f0c 	teqne	r5, ip
   84ec4:	f000 f8de 	bleq	85084 <__aeabi_dmul+0x1dc>
   84ec8:	442c      	add	r4, r5
   84eca:	ea81 0603 	eor.w	r6, r1, r3
   84ece:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
   84ed2:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
   84ed6:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
   84eda:	bf18      	it	ne
   84edc:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
   84ee0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84ee4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
   84ee8:	d038      	beq.n	84f5c <__aeabi_dmul+0xb4>
   84eea:	fba0 ce02 	umull	ip, lr, r0, r2
   84eee:	f04f 0500 	mov.w	r5, #0
   84ef2:	fbe1 e502 	umlal	lr, r5, r1, r2
   84ef6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
   84efa:	fbe0 e503 	umlal	lr, r5, r0, r3
   84efe:	f04f 0600 	mov.w	r6, #0
   84f02:	fbe1 5603 	umlal	r5, r6, r1, r3
   84f06:	f09c 0f00 	teq	ip, #0
   84f0a:	bf18      	it	ne
   84f0c:	f04e 0e01 	orrne.w	lr, lr, #1
   84f10:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
   84f14:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
   84f18:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
   84f1c:	d204      	bcs.n	84f28 <__aeabi_dmul+0x80>
   84f1e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
   84f22:	416d      	adcs	r5, r5
   84f24:	eb46 0606 	adc.w	r6, r6, r6
   84f28:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
   84f2c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
   84f30:	ea4f 20c5 	mov.w	r0, r5, lsl #11
   84f34:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
   84f38:	ea4f 2ece 	mov.w	lr, lr, lsl #11
   84f3c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   84f40:	bf88      	it	hi
   84f42:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   84f46:	d81e      	bhi.n	84f86 <__aeabi_dmul+0xde>
   84f48:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
   84f4c:	bf08      	it	eq
   84f4e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
   84f52:	f150 0000 	adcs.w	r0, r0, #0
   84f56:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   84f5a:	bd70      	pop	{r4, r5, r6, pc}
   84f5c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
   84f60:	ea46 0101 	orr.w	r1, r6, r1
   84f64:	ea40 0002 	orr.w	r0, r0, r2
   84f68:	ea81 0103 	eor.w	r1, r1, r3
   84f6c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
   84f70:	bfc2      	ittt	gt
   84f72:	ebd4 050c 	rsbsgt	r5, r4, ip
   84f76:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   84f7a:	bd70      	popgt	{r4, r5, r6, pc}
   84f7c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   84f80:	f04f 0e00 	mov.w	lr, #0
   84f84:	3c01      	subs	r4, #1
   84f86:	f300 80ab 	bgt.w	850e0 <__aeabi_dmul+0x238>
   84f8a:	f114 0f36 	cmn.w	r4, #54	; 0x36
   84f8e:	bfde      	ittt	le
   84f90:	2000      	movle	r0, #0
   84f92:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
   84f96:	bd70      	pople	{r4, r5, r6, pc}
   84f98:	f1c4 0400 	rsb	r4, r4, #0
   84f9c:	3c20      	subs	r4, #32
   84f9e:	da35      	bge.n	8500c <__aeabi_dmul+0x164>
   84fa0:	340c      	adds	r4, #12
   84fa2:	dc1b      	bgt.n	84fdc <__aeabi_dmul+0x134>
   84fa4:	f104 0414 	add.w	r4, r4, #20
   84fa8:	f1c4 0520 	rsb	r5, r4, #32
   84fac:	fa00 f305 	lsl.w	r3, r0, r5
   84fb0:	fa20 f004 	lsr.w	r0, r0, r4
   84fb4:	fa01 f205 	lsl.w	r2, r1, r5
   84fb8:	ea40 0002 	orr.w	r0, r0, r2
   84fbc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
   84fc0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
   84fc4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84fc8:	fa21 f604 	lsr.w	r6, r1, r4
   84fcc:	eb42 0106 	adc.w	r1, r2, r6
   84fd0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   84fd4:	bf08      	it	eq
   84fd6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   84fda:	bd70      	pop	{r4, r5, r6, pc}
   84fdc:	f1c4 040c 	rsb	r4, r4, #12
   84fe0:	f1c4 0520 	rsb	r5, r4, #32
   84fe4:	fa00 f304 	lsl.w	r3, r0, r4
   84fe8:	fa20 f005 	lsr.w	r0, r0, r5
   84fec:	fa01 f204 	lsl.w	r2, r1, r4
   84ff0:	ea40 0002 	orr.w	r0, r0, r2
   84ff4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   84ff8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
   84ffc:	f141 0100 	adc.w	r1, r1, #0
   85000:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   85004:	bf08      	it	eq
   85006:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   8500a:	bd70      	pop	{r4, r5, r6, pc}
   8500c:	f1c4 0520 	rsb	r5, r4, #32
   85010:	fa00 f205 	lsl.w	r2, r0, r5
   85014:	ea4e 0e02 	orr.w	lr, lr, r2
   85018:	fa20 f304 	lsr.w	r3, r0, r4
   8501c:	fa01 f205 	lsl.w	r2, r1, r5
   85020:	ea43 0302 	orr.w	r3, r3, r2
   85024:	fa21 f004 	lsr.w	r0, r1, r4
   85028:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   8502c:	fa21 f204 	lsr.w	r2, r1, r4
   85030:	ea20 0002 	bic.w	r0, r0, r2
   85034:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
   85038:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
   8503c:	bf08      	it	eq
   8503e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
   85042:	bd70      	pop	{r4, r5, r6, pc}
   85044:	f094 0f00 	teq	r4, #0
   85048:	d10f      	bne.n	8506a <__aeabi_dmul+0x1c2>
   8504a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
   8504e:	0040      	lsls	r0, r0, #1
   85050:	eb41 0101 	adc.w	r1, r1, r1
   85054:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85058:	bf08      	it	eq
   8505a:	3c01      	subeq	r4, #1
   8505c:	d0f7      	beq.n	8504e <__aeabi_dmul+0x1a6>
   8505e:	ea41 0106 	orr.w	r1, r1, r6
   85062:	f095 0f00 	teq	r5, #0
   85066:	bf18      	it	ne
   85068:	4770      	bxne	lr
   8506a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
   8506e:	0052      	lsls	r2, r2, #1
   85070:	eb43 0303 	adc.w	r3, r3, r3
   85074:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
   85078:	bf08      	it	eq
   8507a:	3d01      	subeq	r5, #1
   8507c:	d0f7      	beq.n	8506e <__aeabi_dmul+0x1c6>
   8507e:	ea43 0306 	orr.w	r3, r3, r6
   85082:	4770      	bx	lr
   85084:	ea94 0f0c 	teq	r4, ip
   85088:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8508c:	bf18      	it	ne
   8508e:	ea95 0f0c 	teqne	r5, ip
   85092:	d00c      	beq.n	850ae <__aeabi_dmul+0x206>
   85094:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   85098:	bf18      	it	ne
   8509a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   8509e:	d1d1      	bne.n	85044 <__aeabi_dmul+0x19c>
   850a0:	ea81 0103 	eor.w	r1, r1, r3
   850a4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   850a8:	f04f 0000 	mov.w	r0, #0
   850ac:	bd70      	pop	{r4, r5, r6, pc}
   850ae:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   850b2:	bf06      	itte	eq
   850b4:	4610      	moveq	r0, r2
   850b6:	4619      	moveq	r1, r3
   850b8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   850bc:	d019      	beq.n	850f2 <__aeabi_dmul+0x24a>
   850be:	ea94 0f0c 	teq	r4, ip
   850c2:	d102      	bne.n	850ca <__aeabi_dmul+0x222>
   850c4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
   850c8:	d113      	bne.n	850f2 <__aeabi_dmul+0x24a>
   850ca:	ea95 0f0c 	teq	r5, ip
   850ce:	d105      	bne.n	850dc <__aeabi_dmul+0x234>
   850d0:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
   850d4:	bf1c      	itt	ne
   850d6:	4610      	movne	r0, r2
   850d8:	4619      	movne	r1, r3
   850da:	d10a      	bne.n	850f2 <__aeabi_dmul+0x24a>
   850dc:	ea81 0103 	eor.w	r1, r1, r3
   850e0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
   850e4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   850e8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
   850ec:	f04f 0000 	mov.w	r0, #0
   850f0:	bd70      	pop	{r4, r5, r6, pc}
   850f2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
   850f6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
   850fa:	bd70      	pop	{r4, r5, r6, pc}

000850fc <__aeabi_ddiv>:
   850fc:	b570      	push	{r4, r5, r6, lr}
   850fe:	f04f 0cff 	mov.w	ip, #255	; 0xff
   85102:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
   85106:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
   8510a:	bf1d      	ittte	ne
   8510c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
   85110:	ea94 0f0c 	teqne	r4, ip
   85114:	ea95 0f0c 	teqne	r5, ip
   85118:	f000 f8a7 	bleq	8526a <__aeabi_ddiv+0x16e>
   8511c:	eba4 0405 	sub.w	r4, r4, r5
   85120:	ea81 0e03 	eor.w	lr, r1, r3
   85124:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   85128:	ea4f 3101 	mov.w	r1, r1, lsl #12
   8512c:	f000 8088 	beq.w	85240 <__aeabi_ddiv+0x144>
   85130:	ea4f 3303 	mov.w	r3, r3, lsl #12
   85134:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
   85138:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
   8513c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
   85140:	ea4f 2202 	mov.w	r2, r2, lsl #8
   85144:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
   85148:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
   8514c:	ea4f 2600 	mov.w	r6, r0, lsl #8
   85150:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
   85154:	429d      	cmp	r5, r3
   85156:	bf08      	it	eq
   85158:	4296      	cmpeq	r6, r2
   8515a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
   8515e:	f504 7440 	add.w	r4, r4, #768	; 0x300
   85162:	d202      	bcs.n	8516a <__aeabi_ddiv+0x6e>
   85164:	085b      	lsrs	r3, r3, #1
   85166:	ea4f 0232 	mov.w	r2, r2, rrx
   8516a:	1ab6      	subs	r6, r6, r2
   8516c:	eb65 0503 	sbc.w	r5, r5, r3
   85170:	085b      	lsrs	r3, r3, #1
   85172:	ea4f 0232 	mov.w	r2, r2, rrx
   85176:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
   8517a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
   8517e:	ebb6 0e02 	subs.w	lr, r6, r2
   85182:	eb75 0e03 	sbcs.w	lr, r5, r3
   85186:	bf22      	ittt	cs
   85188:	1ab6      	subcs	r6, r6, r2
   8518a:	4675      	movcs	r5, lr
   8518c:	ea40 000c 	orrcs.w	r0, r0, ip
   85190:	085b      	lsrs	r3, r3, #1
   85192:	ea4f 0232 	mov.w	r2, r2, rrx
   85196:	ebb6 0e02 	subs.w	lr, r6, r2
   8519a:	eb75 0e03 	sbcs.w	lr, r5, r3
   8519e:	bf22      	ittt	cs
   851a0:	1ab6      	subcs	r6, r6, r2
   851a2:	4675      	movcs	r5, lr
   851a4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
   851a8:	085b      	lsrs	r3, r3, #1
   851aa:	ea4f 0232 	mov.w	r2, r2, rrx
   851ae:	ebb6 0e02 	subs.w	lr, r6, r2
   851b2:	eb75 0e03 	sbcs.w	lr, r5, r3
   851b6:	bf22      	ittt	cs
   851b8:	1ab6      	subcs	r6, r6, r2
   851ba:	4675      	movcs	r5, lr
   851bc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
   851c0:	085b      	lsrs	r3, r3, #1
   851c2:	ea4f 0232 	mov.w	r2, r2, rrx
   851c6:	ebb6 0e02 	subs.w	lr, r6, r2
   851ca:	eb75 0e03 	sbcs.w	lr, r5, r3
   851ce:	bf22      	ittt	cs
   851d0:	1ab6      	subcs	r6, r6, r2
   851d2:	4675      	movcs	r5, lr
   851d4:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
   851d8:	ea55 0e06 	orrs.w	lr, r5, r6
   851dc:	d018      	beq.n	85210 <__aeabi_ddiv+0x114>
   851de:	ea4f 1505 	mov.w	r5, r5, lsl #4
   851e2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
   851e6:	ea4f 1606 	mov.w	r6, r6, lsl #4
   851ea:	ea4f 03c3 	mov.w	r3, r3, lsl #3
   851ee:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
   851f2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
   851f6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
   851fa:	d1c0      	bne.n	8517e <__aeabi_ddiv+0x82>
   851fc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85200:	d10b      	bne.n	8521a <__aeabi_ddiv+0x11e>
   85202:	ea41 0100 	orr.w	r1, r1, r0
   85206:	f04f 0000 	mov.w	r0, #0
   8520a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
   8520e:	e7b6      	b.n	8517e <__aeabi_ddiv+0x82>
   85210:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
   85214:	bf04      	itt	eq
   85216:	4301      	orreq	r1, r0
   85218:	2000      	moveq	r0, #0
   8521a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
   8521e:	bf88      	it	hi
   85220:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
   85224:	f63f aeaf 	bhi.w	84f86 <__aeabi_dmul+0xde>
   85228:	ebb5 0c03 	subs.w	ip, r5, r3
   8522c:	bf04      	itt	eq
   8522e:	ebb6 0c02 	subseq.w	ip, r6, r2
   85232:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
   85236:	f150 0000 	adcs.w	r0, r0, #0
   8523a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
   8523e:	bd70      	pop	{r4, r5, r6, pc}
   85240:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
   85244:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
   85248:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
   8524c:	bfc2      	ittt	gt
   8524e:	ebd4 050c 	rsbsgt	r5, r4, ip
   85252:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
   85256:	bd70      	popgt	{r4, r5, r6, pc}
   85258:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
   8525c:	f04f 0e00 	mov.w	lr, #0
   85260:	3c01      	subs	r4, #1
   85262:	e690      	b.n	84f86 <__aeabi_dmul+0xde>
   85264:	ea45 0e06 	orr.w	lr, r5, r6
   85268:	e68d      	b.n	84f86 <__aeabi_dmul+0xde>
   8526a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
   8526e:	ea94 0f0c 	teq	r4, ip
   85272:	bf08      	it	eq
   85274:	ea95 0f0c 	teqeq	r5, ip
   85278:	f43f af3b 	beq.w	850f2 <__aeabi_dmul+0x24a>
   8527c:	ea94 0f0c 	teq	r4, ip
   85280:	d10a      	bne.n	85298 <__aeabi_ddiv+0x19c>
   85282:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
   85286:	f47f af34 	bne.w	850f2 <__aeabi_dmul+0x24a>
   8528a:	ea95 0f0c 	teq	r5, ip
   8528e:	f47f af25 	bne.w	850dc <__aeabi_dmul+0x234>
   85292:	4610      	mov	r0, r2
   85294:	4619      	mov	r1, r3
   85296:	e72c      	b.n	850f2 <__aeabi_dmul+0x24a>
   85298:	ea95 0f0c 	teq	r5, ip
   8529c:	d106      	bne.n	852ac <__aeabi_ddiv+0x1b0>
   8529e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
   852a2:	f43f aefd 	beq.w	850a0 <__aeabi_dmul+0x1f8>
   852a6:	4610      	mov	r0, r2
   852a8:	4619      	mov	r1, r3
   852aa:	e722      	b.n	850f2 <__aeabi_dmul+0x24a>
   852ac:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
   852b0:	bf18      	it	ne
   852b2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
   852b6:	f47f aec5 	bne.w	85044 <__aeabi_dmul+0x19c>
   852ba:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
   852be:	f47f af0d 	bne.w	850dc <__aeabi_dmul+0x234>
   852c2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
   852c6:	f47f aeeb 	bne.w	850a0 <__aeabi_dmul+0x1f8>
   852ca:	e712      	b.n	850f2 <__aeabi_dmul+0x24a>

000852cc <__gedf2>:
   852cc:	f04f 3cff 	mov.w	ip, #4294967295
   852d0:	e006      	b.n	852e0 <__cmpdf2+0x4>
   852d2:	bf00      	nop

000852d4 <__ledf2>:
   852d4:	f04f 0c01 	mov.w	ip, #1
   852d8:	e002      	b.n	852e0 <__cmpdf2+0x4>
   852da:	bf00      	nop

000852dc <__cmpdf2>:
   852dc:	f04f 0c01 	mov.w	ip, #1
   852e0:	f84d cd04 	str.w	ip, [sp, #-4]!
   852e4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   852e8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   852ec:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   852f0:	bf18      	it	ne
   852f2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
   852f6:	d01b      	beq.n	85330 <__cmpdf2+0x54>
   852f8:	b001      	add	sp, #4
   852fa:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
   852fe:	bf0c      	ite	eq
   85300:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
   85304:	ea91 0f03 	teqne	r1, r3
   85308:	bf02      	ittt	eq
   8530a:	ea90 0f02 	teqeq	r0, r2
   8530e:	2000      	moveq	r0, #0
   85310:	4770      	bxeq	lr
   85312:	f110 0f00 	cmn.w	r0, #0
   85316:	ea91 0f03 	teq	r1, r3
   8531a:	bf58      	it	pl
   8531c:	4299      	cmppl	r1, r3
   8531e:	bf08      	it	eq
   85320:	4290      	cmpeq	r0, r2
   85322:	bf2c      	ite	cs
   85324:	17d8      	asrcs	r0, r3, #31
   85326:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
   8532a:	f040 0001 	orr.w	r0, r0, #1
   8532e:	4770      	bx	lr
   85330:	ea4f 0c41 	mov.w	ip, r1, lsl #1
   85334:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85338:	d102      	bne.n	85340 <__cmpdf2+0x64>
   8533a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
   8533e:	d107      	bne.n	85350 <__cmpdf2+0x74>
   85340:	ea4f 0c43 	mov.w	ip, r3, lsl #1
   85344:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
   85348:	d1d6      	bne.n	852f8 <__cmpdf2+0x1c>
   8534a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
   8534e:	d0d3      	beq.n	852f8 <__cmpdf2+0x1c>
   85350:	f85d 0b04 	ldr.w	r0, [sp], #4
   85354:	4770      	bx	lr
   85356:	bf00      	nop

00085358 <__aeabi_cdrcmple>:
   85358:	4684      	mov	ip, r0
   8535a:	4610      	mov	r0, r2
   8535c:	4662      	mov	r2, ip
   8535e:	468c      	mov	ip, r1
   85360:	4619      	mov	r1, r3
   85362:	4663      	mov	r3, ip
   85364:	e000      	b.n	85368 <__aeabi_cdcmpeq>
   85366:	bf00      	nop

00085368 <__aeabi_cdcmpeq>:
   85368:	b501      	push	{r0, lr}
   8536a:	f7ff ffb7 	bl	852dc <__cmpdf2>
   8536e:	2800      	cmp	r0, #0
   85370:	bf48      	it	mi
   85372:	f110 0f00 	cmnmi.w	r0, #0
   85376:	bd01      	pop	{r0, pc}

00085378 <__aeabi_dcmpeq>:
   85378:	f84d ed08 	str.w	lr, [sp, #-8]!
   8537c:	f7ff fff4 	bl	85368 <__aeabi_cdcmpeq>
   85380:	bf0c      	ite	eq
   85382:	2001      	moveq	r0, #1
   85384:	2000      	movne	r0, #0
   85386:	f85d fb08 	ldr.w	pc, [sp], #8
   8538a:	bf00      	nop

0008538c <__aeabi_dcmplt>:
   8538c:	f84d ed08 	str.w	lr, [sp, #-8]!
   85390:	f7ff ffea 	bl	85368 <__aeabi_cdcmpeq>
   85394:	bf34      	ite	cc
   85396:	2001      	movcc	r0, #1
   85398:	2000      	movcs	r0, #0
   8539a:	f85d fb08 	ldr.w	pc, [sp], #8
   8539e:	bf00      	nop

000853a0 <__aeabi_dcmple>:
   853a0:	f84d ed08 	str.w	lr, [sp, #-8]!
   853a4:	f7ff ffe0 	bl	85368 <__aeabi_cdcmpeq>
   853a8:	bf94      	ite	ls
   853aa:	2001      	movls	r0, #1
   853ac:	2000      	movhi	r0, #0
   853ae:	f85d fb08 	ldr.w	pc, [sp], #8
   853b2:	bf00      	nop

000853b4 <__aeabi_dcmpge>:
   853b4:	f84d ed08 	str.w	lr, [sp, #-8]!
   853b8:	f7ff ffce 	bl	85358 <__aeabi_cdrcmple>
   853bc:	bf94      	ite	ls
   853be:	2001      	movls	r0, #1
   853c0:	2000      	movhi	r0, #0
   853c2:	f85d fb08 	ldr.w	pc, [sp], #8
   853c6:	bf00      	nop

000853c8 <__aeabi_dcmpgt>:
   853c8:	f84d ed08 	str.w	lr, [sp, #-8]!
   853cc:	f7ff ffc4 	bl	85358 <__aeabi_cdrcmple>
   853d0:	bf34      	ite	cc
   853d2:	2001      	movcc	r0, #1
   853d4:	2000      	movcs	r0, #0
   853d6:	f85d fb08 	ldr.w	pc, [sp], #8
   853da:	bf00      	nop

000853dc <__aeabi_d2iz>:
   853dc:	ea4f 0241 	mov.w	r2, r1, lsl #1
   853e0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
   853e4:	d215      	bcs.n	85412 <__aeabi_d2iz+0x36>
   853e6:	d511      	bpl.n	8540c <__aeabi_d2iz+0x30>
   853e8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
   853ec:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
   853f0:	d912      	bls.n	85418 <__aeabi_d2iz+0x3c>
   853f2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
   853f6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
   853fa:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
   853fe:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
   85402:	fa23 f002 	lsr.w	r0, r3, r2
   85406:	bf18      	it	ne
   85408:	4240      	negne	r0, r0
   8540a:	4770      	bx	lr
   8540c:	f04f 0000 	mov.w	r0, #0
   85410:	4770      	bx	lr
   85412:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
   85416:	d105      	bne.n	85424 <__aeabi_d2iz+0x48>
   85418:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
   8541c:	bf08      	it	eq
   8541e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
   85422:	4770      	bx	lr
   85424:	f04f 0000 	mov.w	r0, #0
   85428:	4770      	bx	lr
   8542a:	bf00      	nop

0008542c <__aeabi_uldivmod>:
   8542c:	b94b      	cbnz	r3, 85442 <__aeabi_uldivmod+0x16>
   8542e:	b942      	cbnz	r2, 85442 <__aeabi_uldivmod+0x16>
   85430:	2900      	cmp	r1, #0
   85432:	bf08      	it	eq
   85434:	2800      	cmpeq	r0, #0
   85436:	d002      	beq.n	8543e <__aeabi_uldivmod+0x12>
   85438:	f04f 31ff 	mov.w	r1, #4294967295
   8543c:	4608      	mov	r0, r1
   8543e:	f000 b83b 	b.w	854b8 <__aeabi_idiv0>
   85442:	b082      	sub	sp, #8
   85444:	46ec      	mov	ip, sp
   85446:	e92d 5000 	stmdb	sp!, {ip, lr}
   8544a:	f000 f81d 	bl	85488 <__gnu_uldivmod_helper>
   8544e:	f8dd e004 	ldr.w	lr, [sp, #4]
   85452:	b002      	add	sp, #8
   85454:	bc0c      	pop	{r2, r3}
   85456:	4770      	bx	lr

00085458 <__gnu_ldivmod_helper>:
   85458:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   8545c:	9e08      	ldr	r6, [sp, #32]
   8545e:	4614      	mov	r4, r2
   85460:	461d      	mov	r5, r3
   85462:	4680      	mov	r8, r0
   85464:	4689      	mov	r9, r1
   85466:	f000 f829 	bl	854bc <__divdi3>
   8546a:	fb04 f301 	mul.w	r3, r4, r1
   8546e:	fba4 ab00 	umull	sl, fp, r4, r0
   85472:	fb00 3205 	mla	r2, r0, r5, r3
   85476:	4493      	add	fp, r2
   85478:	ebb8 080a 	subs.w	r8, r8, sl
   8547c:	eb69 090b 	sbc.w	r9, r9, fp
   85480:	e9c6 8900 	strd	r8, r9, [r6]
   85484:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

00085488 <__gnu_uldivmod_helper>:
   85488:	e92d 4f70 	stmdb	sp!, {r4, r5, r6, r8, r9, sl, fp, lr}
   8548c:	9e08      	ldr	r6, [sp, #32]
   8548e:	4614      	mov	r4, r2
   85490:	461d      	mov	r5, r3
   85492:	4680      	mov	r8, r0
   85494:	4689      	mov	r9, r1
   85496:	f000 f961 	bl	8575c <__udivdi3>
   8549a:	fb00 f505 	mul.w	r5, r0, r5
   8549e:	fba0 ab04 	umull	sl, fp, r0, r4
   854a2:	fb04 5401 	mla	r4, r4, r1, r5
   854a6:	44a3      	add	fp, r4
   854a8:	ebb8 080a 	subs.w	r8, r8, sl
   854ac:	eb69 090b 	sbc.w	r9, r9, fp
   854b0:	e9c6 8900 	strd	r8, r9, [r6]
   854b4:	e8bd 8f70 	ldmia.w	sp!, {r4, r5, r6, r8, r9, sl, fp, pc}

000854b8 <__aeabi_idiv0>:
   854b8:	4770      	bx	lr
   854ba:	bf00      	nop

000854bc <__divdi3>:
   854bc:	2900      	cmp	r1, #0
   854be:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   854c2:	f2c0 80a1 	blt.w	85608 <__divdi3+0x14c>
   854c6:	2400      	movs	r4, #0
   854c8:	2b00      	cmp	r3, #0
   854ca:	f2c0 8098 	blt.w	855fe <__divdi3+0x142>
   854ce:	4615      	mov	r5, r2
   854d0:	4606      	mov	r6, r0
   854d2:	460f      	mov	r7, r1
   854d4:	2b00      	cmp	r3, #0
   854d6:	d13f      	bne.n	85558 <__divdi3+0x9c>
   854d8:	428a      	cmp	r2, r1
   854da:	d958      	bls.n	8558e <__divdi3+0xd2>
   854dc:	fab2 f382 	clz	r3, r2
   854e0:	b14b      	cbz	r3, 854f6 <__divdi3+0x3a>
   854e2:	f1c3 0220 	rsb	r2, r3, #32
   854e6:	fa01 f703 	lsl.w	r7, r1, r3
   854ea:	fa20 f202 	lsr.w	r2, r0, r2
   854ee:	409d      	lsls	r5, r3
   854f0:	fa00 f603 	lsl.w	r6, r0, r3
   854f4:	4317      	orrs	r7, r2
   854f6:	0c29      	lsrs	r1, r5, #16
   854f8:	fbb7 f2f1 	udiv	r2, r7, r1
   854fc:	fb01 7712 	mls	r7, r1, r2, r7
   85500:	b2a8      	uxth	r0, r5
   85502:	fb00 f302 	mul.w	r3, r0, r2
   85506:	ea4f 4c16 	mov.w	ip, r6, lsr #16
   8550a:	ea4c 4707 	orr.w	r7, ip, r7, lsl #16
   8550e:	42bb      	cmp	r3, r7
   85510:	d909      	bls.n	85526 <__divdi3+0x6a>
   85512:	197f      	adds	r7, r7, r5
   85514:	f102 3cff 	add.w	ip, r2, #4294967295
   85518:	f080 8105 	bcs.w	85726 <__divdi3+0x26a>
   8551c:	42bb      	cmp	r3, r7
   8551e:	f240 8102 	bls.w	85726 <__divdi3+0x26a>
   85522:	3a02      	subs	r2, #2
   85524:	442f      	add	r7, r5
   85526:	1aff      	subs	r7, r7, r3
   85528:	fbb7 f3f1 	udiv	r3, r7, r1
   8552c:	fb01 7113 	mls	r1, r1, r3, r7
   85530:	fb00 f003 	mul.w	r0, r0, r3
   85534:	b2b6      	uxth	r6, r6
   85536:	ea46 4101 	orr.w	r1, r6, r1, lsl #16
   8553a:	4288      	cmp	r0, r1
   8553c:	d908      	bls.n	85550 <__divdi3+0x94>
   8553e:	1949      	adds	r1, r1, r5
   85540:	f103 37ff 	add.w	r7, r3, #4294967295
   85544:	f080 80f1 	bcs.w	8572a <__divdi3+0x26e>
   85548:	4288      	cmp	r0, r1
   8554a:	f240 80ee 	bls.w	8572a <__divdi3+0x26e>
   8554e:	3b02      	subs	r3, #2
   85550:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   85554:	2300      	movs	r3, #0
   85556:	e003      	b.n	85560 <__divdi3+0xa4>
   85558:	428b      	cmp	r3, r1
   8555a:	d90a      	bls.n	85572 <__divdi3+0xb6>
   8555c:	2300      	movs	r3, #0
   8555e:	461a      	mov	r2, r3
   85560:	4610      	mov	r0, r2
   85562:	4619      	mov	r1, r3
   85564:	b114      	cbz	r4, 8556c <__divdi3+0xb0>
   85566:	4240      	negs	r0, r0
   85568:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8556c:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85570:	4770      	bx	lr
   85572:	fab3 f883 	clz	r8, r3
   85576:	f1b8 0f00 	cmp.w	r8, #0
   8557a:	f040 8088 	bne.w	8568e <__divdi3+0x1d2>
   8557e:	428b      	cmp	r3, r1
   85580:	d302      	bcc.n	85588 <__divdi3+0xcc>
   85582:	4282      	cmp	r2, r0
   85584:	f200 80e2 	bhi.w	8574c <__divdi3+0x290>
   85588:	2300      	movs	r3, #0
   8558a:	2201      	movs	r2, #1
   8558c:	e7e8      	b.n	85560 <__divdi3+0xa4>
   8558e:	b912      	cbnz	r2, 85596 <__divdi3+0xda>
   85590:	2301      	movs	r3, #1
   85592:	fbb3 f5f2 	udiv	r5, r3, r2
   85596:	fab5 f285 	clz	r2, r5
   8559a:	2a00      	cmp	r2, #0
   8559c:	d13a      	bne.n	85614 <__divdi3+0x158>
   8559e:	1b7f      	subs	r7, r7, r5
   855a0:	0c28      	lsrs	r0, r5, #16
   855a2:	fa1f fc85 	uxth.w	ip, r5
   855a6:	2301      	movs	r3, #1
   855a8:	fbb7 f1f0 	udiv	r1, r7, r0
   855ac:	fb00 7711 	mls	r7, r0, r1, r7
   855b0:	fb0c f201 	mul.w	r2, ip, r1
   855b4:	ea4f 4816 	mov.w	r8, r6, lsr #16
   855b8:	ea48 4707 	orr.w	r7, r8, r7, lsl #16
   855bc:	42ba      	cmp	r2, r7
   855be:	d907      	bls.n	855d0 <__divdi3+0x114>
   855c0:	197f      	adds	r7, r7, r5
   855c2:	f101 38ff 	add.w	r8, r1, #4294967295
   855c6:	d202      	bcs.n	855ce <__divdi3+0x112>
   855c8:	42ba      	cmp	r2, r7
   855ca:	f200 80c4 	bhi.w	85756 <__divdi3+0x29a>
   855ce:	4641      	mov	r1, r8
   855d0:	1abf      	subs	r7, r7, r2
   855d2:	fbb7 f2f0 	udiv	r2, r7, r0
   855d6:	fb00 7012 	mls	r0, r0, r2, r7
   855da:	fb0c fc02 	mul.w	ip, ip, r2
   855de:	b2b6      	uxth	r6, r6
   855e0:	ea46 4000 	orr.w	r0, r6, r0, lsl #16
   855e4:	4584      	cmp	ip, r0
   855e6:	d907      	bls.n	855f8 <__divdi3+0x13c>
   855e8:	1940      	adds	r0, r0, r5
   855ea:	f102 37ff 	add.w	r7, r2, #4294967295
   855ee:	d202      	bcs.n	855f6 <__divdi3+0x13a>
   855f0:	4584      	cmp	ip, r0
   855f2:	f200 80ae 	bhi.w	85752 <__divdi3+0x296>
   855f6:	463a      	mov	r2, r7
   855f8:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
   855fc:	e7b0      	b.n	85560 <__divdi3+0xa4>
   855fe:	43e4      	mvns	r4, r4
   85600:	4252      	negs	r2, r2
   85602:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
   85606:	e762      	b.n	854ce <__divdi3+0x12>
   85608:	4240      	negs	r0, r0
   8560a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
   8560e:	f04f 34ff 	mov.w	r4, #4294967295
   85612:	e759      	b.n	854c8 <__divdi3+0xc>
   85614:	4095      	lsls	r5, r2
   85616:	f1c2 0920 	rsb	r9, r2, #32
   8561a:	fa27 f109 	lsr.w	r1, r7, r9
   8561e:	fa26 f909 	lsr.w	r9, r6, r9
   85622:	4097      	lsls	r7, r2
   85624:	0c28      	lsrs	r0, r5, #16
   85626:	fbb1 f8f0 	udiv	r8, r1, r0
   8562a:	fb00 1118 	mls	r1, r0, r8, r1
   8562e:	fa1f fc85 	uxth.w	ip, r5
   85632:	fb0c f308 	mul.w	r3, ip, r8
   85636:	ea49 0907 	orr.w	r9, r9, r7
   8563a:	ea4f 4719 	mov.w	r7, r9, lsr #16
   8563e:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
   85642:	428b      	cmp	r3, r1
   85644:	fa06 f602 	lsl.w	r6, r6, r2
   85648:	d908      	bls.n	8565c <__divdi3+0x1a0>
   8564a:	1949      	adds	r1, r1, r5
   8564c:	f108 32ff 	add.w	r2, r8, #4294967295
   85650:	d27a      	bcs.n	85748 <__divdi3+0x28c>
   85652:	428b      	cmp	r3, r1
   85654:	d978      	bls.n	85748 <__divdi3+0x28c>
   85656:	f1a8 0802 	sub.w	r8, r8, #2
   8565a:	4429      	add	r1, r5
   8565c:	1ac9      	subs	r1, r1, r3
   8565e:	fbb1 f3f0 	udiv	r3, r1, r0
   85662:	fb00 1713 	mls	r7, r0, r3, r1
   85666:	fb0c f203 	mul.w	r2, ip, r3
   8566a:	fa1f f989 	uxth.w	r9, r9
   8566e:	ea49 4707 	orr.w	r7, r9, r7, lsl #16
   85672:	42ba      	cmp	r2, r7
   85674:	d907      	bls.n	85686 <__divdi3+0x1ca>
   85676:	197f      	adds	r7, r7, r5
   85678:	f103 31ff 	add.w	r1, r3, #4294967295
   8567c:	d260      	bcs.n	85740 <__divdi3+0x284>
   8567e:	42ba      	cmp	r2, r7
   85680:	d95e      	bls.n	85740 <__divdi3+0x284>
   85682:	3b02      	subs	r3, #2
   85684:	442f      	add	r7, r5
   85686:	1abf      	subs	r7, r7, r2
   85688:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   8568c:	e78c      	b.n	855a8 <__divdi3+0xec>
   8568e:	f1c8 0220 	rsb	r2, r8, #32
   85692:	fa25 f102 	lsr.w	r1, r5, r2
   85696:	fa03 fc08 	lsl.w	ip, r3, r8
   8569a:	fa27 f302 	lsr.w	r3, r7, r2
   8569e:	fa20 f202 	lsr.w	r2, r0, r2
   856a2:	fa07 f708 	lsl.w	r7, r7, r8
   856a6:	ea41 0c0c 	orr.w	ip, r1, ip
   856aa:	ea4f 491c 	mov.w	r9, ip, lsr #16
   856ae:	fbb3 f1f9 	udiv	r1, r3, r9
   856b2:	fb09 3311 	mls	r3, r9, r1, r3
   856b6:	fa1f fa8c 	uxth.w	sl, ip
   856ba:	fb0a fb01 	mul.w	fp, sl, r1
   856be:	4317      	orrs	r7, r2
   856c0:	0c3a      	lsrs	r2, r7, #16
   856c2:	ea42 4303 	orr.w	r3, r2, r3, lsl #16
   856c6:	459b      	cmp	fp, r3
   856c8:	fa05 f008 	lsl.w	r0, r5, r8
   856cc:	d908      	bls.n	856e0 <__divdi3+0x224>
   856ce:	eb13 030c 	adds.w	r3, r3, ip
   856d2:	f101 32ff 	add.w	r2, r1, #4294967295
   856d6:	d235      	bcs.n	85744 <__divdi3+0x288>
   856d8:	459b      	cmp	fp, r3
   856da:	d933      	bls.n	85744 <__divdi3+0x288>
   856dc:	3902      	subs	r1, #2
   856de:	4463      	add	r3, ip
   856e0:	ebcb 0303 	rsb	r3, fp, r3
   856e4:	fbb3 f2f9 	udiv	r2, r3, r9
   856e8:	fb09 3312 	mls	r3, r9, r2, r3
   856ec:	fb0a fa02 	mul.w	sl, sl, r2
   856f0:	b2bf      	uxth	r7, r7
   856f2:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
   856f6:	45ba      	cmp	sl, r7
   856f8:	d908      	bls.n	8570c <__divdi3+0x250>
   856fa:	eb17 070c 	adds.w	r7, r7, ip
   856fe:	f102 33ff 	add.w	r3, r2, #4294967295
   85702:	d21b      	bcs.n	8573c <__divdi3+0x280>
   85704:	45ba      	cmp	sl, r7
   85706:	d919      	bls.n	8573c <__divdi3+0x280>
   85708:	3a02      	subs	r2, #2
   8570a:	4467      	add	r7, ip
   8570c:	ea42 4501 	orr.w	r5, r2, r1, lsl #16
   85710:	fba5 0100 	umull	r0, r1, r5, r0
   85714:	ebca 0707 	rsb	r7, sl, r7
   85718:	428f      	cmp	r7, r1
   8571a:	f04f 0300 	mov.w	r3, #0
   8571e:	d30a      	bcc.n	85736 <__divdi3+0x27a>
   85720:	d005      	beq.n	8572e <__divdi3+0x272>
   85722:	462a      	mov	r2, r5
   85724:	e71c      	b.n	85560 <__divdi3+0xa4>
   85726:	4662      	mov	r2, ip
   85728:	e6fd      	b.n	85526 <__divdi3+0x6a>
   8572a:	463b      	mov	r3, r7
   8572c:	e710      	b.n	85550 <__divdi3+0x94>
   8572e:	fa06 f608 	lsl.w	r6, r6, r8
   85732:	4286      	cmp	r6, r0
   85734:	d2f5      	bcs.n	85722 <__divdi3+0x266>
   85736:	1e6a      	subs	r2, r5, #1
   85738:	2300      	movs	r3, #0
   8573a:	e711      	b.n	85560 <__divdi3+0xa4>
   8573c:	461a      	mov	r2, r3
   8573e:	e7e5      	b.n	8570c <__divdi3+0x250>
   85740:	460b      	mov	r3, r1
   85742:	e7a0      	b.n	85686 <__divdi3+0x1ca>
   85744:	4611      	mov	r1, r2
   85746:	e7cb      	b.n	856e0 <__divdi3+0x224>
   85748:	4690      	mov	r8, r2
   8574a:	e787      	b.n	8565c <__divdi3+0x1a0>
   8574c:	4643      	mov	r3, r8
   8574e:	4642      	mov	r2, r8
   85750:	e706      	b.n	85560 <__divdi3+0xa4>
   85752:	3a02      	subs	r2, #2
   85754:	e750      	b.n	855f8 <__divdi3+0x13c>
   85756:	3902      	subs	r1, #2
   85758:	442f      	add	r7, r5
   8575a:	e739      	b.n	855d0 <__divdi3+0x114>

0008575c <__udivdi3>:
   8575c:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   85760:	4614      	mov	r4, r2
   85762:	4605      	mov	r5, r0
   85764:	460e      	mov	r6, r1
   85766:	2b00      	cmp	r3, #0
   85768:	d143      	bne.n	857f2 <__udivdi3+0x96>
   8576a:	428a      	cmp	r2, r1
   8576c:	d953      	bls.n	85816 <__udivdi3+0xba>
   8576e:	fab2 f782 	clz	r7, r2
   85772:	b157      	cbz	r7, 8578a <__udivdi3+0x2e>
   85774:	f1c7 0620 	rsb	r6, r7, #32
   85778:	fa20 f606 	lsr.w	r6, r0, r6
   8577c:	fa01 f307 	lsl.w	r3, r1, r7
   85780:	fa02 f407 	lsl.w	r4, r2, r7
   85784:	fa00 f507 	lsl.w	r5, r0, r7
   85788:	431e      	orrs	r6, r3
   8578a:	0c21      	lsrs	r1, r4, #16
   8578c:	fbb6 f2f1 	udiv	r2, r6, r1
   85790:	fb01 6612 	mls	r6, r1, r2, r6
   85794:	b2a0      	uxth	r0, r4
   85796:	fb00 f302 	mul.w	r3, r0, r2
   8579a:	0c2f      	lsrs	r7, r5, #16
   8579c:	ea47 4606 	orr.w	r6, r7, r6, lsl #16
   857a0:	42b3      	cmp	r3, r6
   857a2:	d909      	bls.n	857b8 <__udivdi3+0x5c>
   857a4:	1936      	adds	r6, r6, r4
   857a6:	f102 37ff 	add.w	r7, r2, #4294967295
   857aa:	f080 80fd 	bcs.w	859a8 <__udivdi3+0x24c>
   857ae:	42b3      	cmp	r3, r6
   857b0:	f240 80fa 	bls.w	859a8 <__udivdi3+0x24c>
   857b4:	3a02      	subs	r2, #2
   857b6:	4426      	add	r6, r4
   857b8:	1af6      	subs	r6, r6, r3
   857ba:	fbb6 f3f1 	udiv	r3, r6, r1
   857be:	fb01 6113 	mls	r1, r1, r3, r6
   857c2:	fb00 f003 	mul.w	r0, r0, r3
   857c6:	b2ad      	uxth	r5, r5
   857c8:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
   857cc:	4288      	cmp	r0, r1
   857ce:	d908      	bls.n	857e2 <__udivdi3+0x86>
   857d0:	1909      	adds	r1, r1, r4
   857d2:	f103 36ff 	add.w	r6, r3, #4294967295
   857d6:	f080 80e9 	bcs.w	859ac <__udivdi3+0x250>
   857da:	4288      	cmp	r0, r1
   857dc:	f240 80e6 	bls.w	859ac <__udivdi3+0x250>
   857e0:	3b02      	subs	r3, #2
   857e2:	ea43 4202 	orr.w	r2, r3, r2, lsl #16
   857e6:	2300      	movs	r3, #0
   857e8:	4610      	mov	r0, r2
   857ea:	4619      	mov	r1, r3
   857ec:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   857f0:	4770      	bx	lr
   857f2:	428b      	cmp	r3, r1
   857f4:	d84c      	bhi.n	85890 <__udivdi3+0x134>
   857f6:	fab3 f683 	clz	r6, r3
   857fa:	2e00      	cmp	r6, #0
   857fc:	d14f      	bne.n	8589e <__udivdi3+0x142>
   857fe:	428b      	cmp	r3, r1
   85800:	d302      	bcc.n	85808 <__udivdi3+0xac>
   85802:	4282      	cmp	r2, r0
   85804:	f200 80dd 	bhi.w	859c2 <__udivdi3+0x266>
   85808:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8580c:	2300      	movs	r3, #0
   8580e:	2201      	movs	r2, #1
   85810:	4610      	mov	r0, r2
   85812:	4619      	mov	r1, r3
   85814:	4770      	bx	lr
   85816:	b912      	cbnz	r2, 8581e <__udivdi3+0xc2>
   85818:	2401      	movs	r4, #1
   8581a:	fbb4 f4f2 	udiv	r4, r4, r2
   8581e:	fab4 f284 	clz	r2, r4
   85822:	2a00      	cmp	r2, #0
   85824:	f040 8082 	bne.w	8592c <__udivdi3+0x1d0>
   85828:	1b09      	subs	r1, r1, r4
   8582a:	0c26      	lsrs	r6, r4, #16
   8582c:	b2a7      	uxth	r7, r4
   8582e:	2301      	movs	r3, #1
   85830:	fbb1 f0f6 	udiv	r0, r1, r6
   85834:	fb06 1110 	mls	r1, r6, r0, r1
   85838:	fb07 f200 	mul.w	r2, r7, r0
   8583c:	ea4f 4c15 	mov.w	ip, r5, lsr #16
   85840:	ea4c 4101 	orr.w	r1, ip, r1, lsl #16
   85844:	428a      	cmp	r2, r1
   85846:	d907      	bls.n	85858 <__udivdi3+0xfc>
   85848:	1909      	adds	r1, r1, r4
   8584a:	f100 3cff 	add.w	ip, r0, #4294967295
   8584e:	d202      	bcs.n	85856 <__udivdi3+0xfa>
   85850:	428a      	cmp	r2, r1
   85852:	f200 80c8 	bhi.w	859e6 <__udivdi3+0x28a>
   85856:	4660      	mov	r0, ip
   85858:	1a89      	subs	r1, r1, r2
   8585a:	fbb1 f2f6 	udiv	r2, r1, r6
   8585e:	fb06 1112 	mls	r1, r6, r2, r1
   85862:	fb07 f702 	mul.w	r7, r7, r2
   85866:	b2ad      	uxth	r5, r5
   85868:	ea45 4501 	orr.w	r5, r5, r1, lsl #16
   8586c:	42af      	cmp	r7, r5
   8586e:	d908      	bls.n	85882 <__udivdi3+0x126>
   85870:	192c      	adds	r4, r5, r4
   85872:	f102 31ff 	add.w	r1, r2, #4294967295
   85876:	f080 809b 	bcs.w	859b0 <__udivdi3+0x254>
   8587a:	42a7      	cmp	r7, r4
   8587c:	f240 8098 	bls.w	859b0 <__udivdi3+0x254>
   85880:	3a02      	subs	r2, #2
   85882:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
   85886:	4610      	mov	r0, r2
   85888:	4619      	mov	r1, r3
   8588a:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8588e:	4770      	bx	lr
   85890:	2300      	movs	r3, #0
   85892:	461a      	mov	r2, r3
   85894:	4610      	mov	r0, r2
   85896:	4619      	mov	r1, r3
   85898:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
   8589c:	4770      	bx	lr
   8589e:	f1c6 0520 	rsb	r5, r6, #32
   858a2:	fa22 f705 	lsr.w	r7, r2, r5
   858a6:	fa03 f406 	lsl.w	r4, r3, r6
   858aa:	fa21 f305 	lsr.w	r3, r1, r5
   858ae:	fa01 fb06 	lsl.w	fp, r1, r6
   858b2:	fa20 f505 	lsr.w	r5, r0, r5
   858b6:	433c      	orrs	r4, r7
   858b8:	ea4f 4814 	mov.w	r8, r4, lsr #16
   858bc:	fbb3 fcf8 	udiv	ip, r3, r8
   858c0:	fb08 331c 	mls	r3, r8, ip, r3
   858c4:	fa1f f984 	uxth.w	r9, r4
   858c8:	fb09 fa0c 	mul.w	sl, r9, ip
   858cc:	ea45 0b0b 	orr.w	fp, r5, fp
   858d0:	ea4f 451b 	mov.w	r5, fp, lsr #16
   858d4:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
   858d8:	459a      	cmp	sl, r3
   858da:	fa02 f206 	lsl.w	r2, r2, r6
   858de:	d904      	bls.n	858ea <__udivdi3+0x18e>
   858e0:	191b      	adds	r3, r3, r4
   858e2:	f10c 35ff 	add.w	r5, ip, #4294967295
   858e6:	d36f      	bcc.n	859c8 <__udivdi3+0x26c>
   858e8:	46ac      	mov	ip, r5
   858ea:	ebca 0303 	rsb	r3, sl, r3
   858ee:	fbb3 f5f8 	udiv	r5, r3, r8
   858f2:	fb08 3315 	mls	r3, r8, r5, r3
   858f6:	fb09 f905 	mul.w	r9, r9, r5
   858fa:	fa1f fb8b 	uxth.w	fp, fp
   858fe:	ea4b 4703 	orr.w	r7, fp, r3, lsl #16
   85902:	45b9      	cmp	r9, r7
   85904:	d904      	bls.n	85910 <__udivdi3+0x1b4>
   85906:	193f      	adds	r7, r7, r4
   85908:	f105 33ff 	add.w	r3, r5, #4294967295
   8590c:	d362      	bcc.n	859d4 <__udivdi3+0x278>
   8590e:	461d      	mov	r5, r3
   85910:	ea45 4c0c 	orr.w	ip, r5, ip, lsl #16
   85914:	fbac 2302 	umull	r2, r3, ip, r2
   85918:	ebc9 0707 	rsb	r7, r9, r7
   8591c:	429f      	cmp	r7, r3
   8591e:	f04f 0500 	mov.w	r5, #0
   85922:	d34a      	bcc.n	859ba <__udivdi3+0x25e>
   85924:	d046      	beq.n	859b4 <__udivdi3+0x258>
   85926:	4662      	mov	r2, ip
   85928:	462b      	mov	r3, r5
   8592a:	e75d      	b.n	857e8 <__udivdi3+0x8c>
   8592c:	4094      	lsls	r4, r2
   8592e:	f1c2 0920 	rsb	r9, r2, #32
   85932:	fa21 fc09 	lsr.w	ip, r1, r9
   85936:	4091      	lsls	r1, r2
   85938:	fa20 f909 	lsr.w	r9, r0, r9
   8593c:	0c26      	lsrs	r6, r4, #16
   8593e:	fbbc f8f6 	udiv	r8, ip, r6
   85942:	fb06 cc18 	mls	ip, r6, r8, ip
   85946:	b2a7      	uxth	r7, r4
   85948:	fb07 f308 	mul.w	r3, r7, r8
   8594c:	ea49 0901 	orr.w	r9, r9, r1
   85950:	ea4f 4119 	mov.w	r1, r9, lsr #16
   85954:	ea41 4c0c 	orr.w	ip, r1, ip, lsl #16
   85958:	4563      	cmp	r3, ip
   8595a:	fa00 f502 	lsl.w	r5, r0, r2
   8595e:	d909      	bls.n	85974 <__udivdi3+0x218>
   85960:	eb1c 0c04 	adds.w	ip, ip, r4
   85964:	f108 32ff 	add.w	r2, r8, #4294967295
   85968:	d23b      	bcs.n	859e2 <__udivdi3+0x286>
   8596a:	4563      	cmp	r3, ip
   8596c:	d939      	bls.n	859e2 <__udivdi3+0x286>
   8596e:	f1a8 0802 	sub.w	r8, r8, #2
   85972:	44a4      	add	ip, r4
   85974:	ebc3 0c0c 	rsb	ip, r3, ip
   85978:	fbbc f3f6 	udiv	r3, ip, r6
   8597c:	fb06 c113 	mls	r1, r6, r3, ip
   85980:	fb07 f203 	mul.w	r2, r7, r3
   85984:	fa1f f989 	uxth.w	r9, r9
   85988:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
   8598c:	428a      	cmp	r2, r1
   8598e:	d907      	bls.n	859a0 <__udivdi3+0x244>
   85990:	1909      	adds	r1, r1, r4
   85992:	f103 30ff 	add.w	r0, r3, #4294967295
   85996:	d222      	bcs.n	859de <__udivdi3+0x282>
   85998:	428a      	cmp	r2, r1
   8599a:	d920      	bls.n	859de <__udivdi3+0x282>
   8599c:	3b02      	subs	r3, #2
   8599e:	4421      	add	r1, r4
   859a0:	1a89      	subs	r1, r1, r2
   859a2:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
   859a6:	e743      	b.n	85830 <__udivdi3+0xd4>
   859a8:	463a      	mov	r2, r7
   859aa:	e705      	b.n	857b8 <__udivdi3+0x5c>
   859ac:	4633      	mov	r3, r6
   859ae:	e718      	b.n	857e2 <__udivdi3+0x86>
   859b0:	460a      	mov	r2, r1
   859b2:	e766      	b.n	85882 <__udivdi3+0x126>
   859b4:	40b0      	lsls	r0, r6
   859b6:	4290      	cmp	r0, r2
   859b8:	d2b5      	bcs.n	85926 <__udivdi3+0x1ca>
   859ba:	f10c 32ff 	add.w	r2, ip, #4294967295
   859be:	2300      	movs	r3, #0
   859c0:	e712      	b.n	857e8 <__udivdi3+0x8c>
   859c2:	4633      	mov	r3, r6
   859c4:	4632      	mov	r2, r6
   859c6:	e70f      	b.n	857e8 <__udivdi3+0x8c>
   859c8:	459a      	cmp	sl, r3
   859ca:	d98d      	bls.n	858e8 <__udivdi3+0x18c>
   859cc:	f1ac 0c02 	sub.w	ip, ip, #2
   859d0:	4423      	add	r3, r4
   859d2:	e78a      	b.n	858ea <__udivdi3+0x18e>
   859d4:	45b9      	cmp	r9, r7
   859d6:	d99a      	bls.n	8590e <__udivdi3+0x1b2>
   859d8:	3d02      	subs	r5, #2
   859da:	4427      	add	r7, r4
   859dc:	e798      	b.n	85910 <__udivdi3+0x1b4>
   859de:	4603      	mov	r3, r0
   859e0:	e7de      	b.n	859a0 <__udivdi3+0x244>
   859e2:	4690      	mov	r8, r2
   859e4:	e7c6      	b.n	85974 <__udivdi3+0x218>
   859e6:	3802      	subs	r0, #2
   859e8:	4421      	add	r1, r4
   859ea:	e735      	b.n	85858 <__udivdi3+0xfc>
   859ec:	00006425 	.word	0x00006425
   859f0:	00000001 	.word	0x00000001
   859f4:	00000002 	.word	0x00000002
   859f8:	00000004 	.word	0x00000004
   859fc:	00000008 	.word	0x00000008
   85a00:	00000010 	.word	0x00000010
   85a04:	00000020 	.word	0x00000020
   85a08:	00000040 	.word	0x00000040
   85a0c:	00000080 	.word	0x00000080
   85a10:	00000100 	.word	0x00000100
   85a14:	00000200 	.word	0x00000200
   85a18:	00000400 	.word	0x00000400
   85a1c:	00000043 	.word	0x00000043

00085a20 <_global_impure_ptr>:
   85a20:	20070178                                x.. 

00085a24 <zeroes.6763>:
   85a24:	30303030 30303030 30303030 30303030     0000000000000000
   85a34:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
   85a44:	33323130 37363534 42413938 46454443     0123456789ABCDEF
   85a54:	00000000 33323130 37363534 62613938     ....0123456789ab
   85a64:	66656463 00000000 6c756e28 0000296c     cdef....(null)..
   85a74:	00000030                                0...

00085a78 <blanks.6762>:
   85a78:	20202020 20202020 20202020 20202020                     
   85a88:	69666e49 7974696e 00000000 004e614e     Infinity....NaN.
   85a98:	49534f50 00000058 0000002e 00000000     POSIX...........

00085aa8 <__mprec_tens>:
   85aa8:	00000000 3ff00000 00000000 40240000     .......?......$@
   85ab8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
   85ac8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
   85ad8:	00000000 412e8480 00000000 416312d0     .......A......cA
   85ae8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
   85af8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
   85b08:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
   85b18:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
   85b28:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
   85b38:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
   85b48:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
   85b58:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
   85b68:	79d99db4 44ea7843                       ...yCx.D

00085b70 <__mprec_bigtens>:
   85b70:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
   85b80:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
   85b90:	7f73bf3c 75154fdd                       <.s..O.u

00085b98 <p05.5269>:
   85b98:	00000005 00000019 0000007d              ........}...

00085ba4 <_init>:
   85ba4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85ba6:	bf00      	nop
   85ba8:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85baa:	bc08      	pop	{r3}
   85bac:	469e      	mov	lr, r3
   85bae:	4770      	bx	lr

00085bb0 <__init_array_start>:
   85bb0:	00082561 	.word	0x00082561

00085bb4 <__frame_dummy_init_array_entry>:
   85bb4:	00080119                                ....

00085bb8 <_fini>:
   85bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
   85bba:	bf00      	nop
   85bbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
   85bbe:	bc08      	pop	{r3}
   85bc0:	469e      	mov	lr, r3
   85bc2:	4770      	bx	lr

00085bc4 <__fini_array_start>:
   85bc4:	000800f5 	.word	0x000800f5

Disassembly of section .relocate:

20070000 <SystemInit>:
__no_inline
RAMFUNC
void SystemInit(void)
{
	/* Set FWS according to SYS_BOARD_MCKR configuration */
	EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
20070000:	f44f 6380 	mov.w	r3, #1024	; 0x400
20070004:	4a20      	ldr	r2, [pc, #128]	; (20070088 <SystemInit+0x88>)
20070006:	6013      	str	r3, [r2, #0]
	EFC1->EEFC_FMR = EEFC_FMR_FWS(4);
20070008:	f502 7200 	add.w	r2, r2, #512	; 0x200
2007000c:	6013      	str	r3, [r2, #0]

	/* Initialize main oscillator */
	if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
2007000e:	4b1f      	ldr	r3, [pc, #124]	; (2007008c <SystemInit+0x8c>)
20070010:	6a1b      	ldr	r3, [r3, #32]
20070012:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
20070016:	d107      	bne.n	20070028 <SystemInit+0x28>
		PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070018:	4a1d      	ldr	r2, [pc, #116]	; (20070090 <SystemInit+0x90>)
2007001a:	4b1c      	ldr	r3, [pc, #112]	; (2007008c <SystemInit+0x8c>)
2007001c:	621a      	str	r2, [r3, #32]
			                     CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN;
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS)) {
2007001e:	461a      	mov	r2, r3
20070020:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070022:	f013 0f01 	tst.w	r3, #1
20070026:	d0fb      	beq.n	20070020 <SystemInit+0x20>
		}
	}

	/* Switch to 3-20MHz Xtal oscillator */
	PMC->CKGR_MOR = SYS_CKGR_MOR_KEY_VALUE | SYS_BOARD_OSCOUNT | 
20070028:	4a1a      	ldr	r2, [pc, #104]	; (20070094 <SystemInit+0x94>)
2007002a:	4b18      	ldr	r3, [pc, #96]	; (2007008c <SystemInit+0x8c>)
2007002c:	621a      	str	r2, [r3, #32]
	                           CKGR_MOR_MOSCRCEN | CKGR_MOR_MOSCXTEN | CKGR_MOR_MOSCSEL;

	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS)) {
2007002e:	461a      	mov	r2, r3
20070030:	6e93      	ldr	r3, [r2, #104]	; 0x68
20070032:	f413 3f80 	tst.w	r3, #65536	; 0x10000
20070036:	d0fb      	beq.n	20070030 <SystemInit+0x30>
	}
 	PMC->PMC_MCKR = (PMC->PMC_MCKR & ~(uint32_t)PMC_MCKR_CSS_Msk) | 
20070038:	4b14      	ldr	r3, [pc, #80]	; (2007008c <SystemInit+0x8c>)
2007003a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
2007003c:	f022 0203 	bic.w	r2, r2, #3
20070040:	f042 0201 	orr.w	r2, r2, #1
20070044:	631a      	str	r2, [r3, #48]	; 0x30
		                     PMC_MCKR_CSS_MAIN_CLK;
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070046:	461a      	mov	r2, r3
20070048:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007004a:	f013 0f08 	tst.w	r3, #8
2007004e:	d0fb      	beq.n	20070048 <SystemInit+0x48>
	}

	/* Initialize PLLA */
	PMC->CKGR_PLLAR = SYS_BOARD_PLLAR;
20070050:	4a11      	ldr	r2, [pc, #68]	; (20070098 <SystemInit+0x98>)
20070052:	4b0e      	ldr	r3, [pc, #56]	; (2007008c <SystemInit+0x8c>)
20070054:	629a      	str	r2, [r3, #40]	; 0x28
	while (!(PMC->PMC_SR & PMC_SR_LOCKA)) {
20070056:	461a      	mov	r2, r3
20070058:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007005a:	f013 0f02 	tst.w	r3, #2
2007005e:	d0fb      	beq.n	20070058 <SystemInit+0x58>
	}

	/* Switch to main clock */
	PMC->PMC_MCKR = (SYS_BOARD_MCKR & ~PMC_MCKR_CSS_Msk) | PMC_MCKR_CSS_MAIN_CLK;
20070060:	2211      	movs	r2, #17
20070062:	4b0a      	ldr	r3, [pc, #40]	; (2007008c <SystemInit+0x8c>)
20070064:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070066:	461a      	mov	r2, r3
20070068:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007006a:	f013 0f08 	tst.w	r3, #8
2007006e:	d0fb      	beq.n	20070068 <SystemInit+0x68>
	}

	/* Switch to PLLA */
	PMC->PMC_MCKR = SYS_BOARD_MCKR;
20070070:	2212      	movs	r2, #18
20070072:	4b06      	ldr	r3, [pc, #24]	; (2007008c <SystemInit+0x8c>)
20070074:	631a      	str	r2, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY)) {
20070076:	461a      	mov	r2, r3
20070078:	6e93      	ldr	r3, [r2, #104]	; 0x68
2007007a:	f013 0f08 	tst.w	r3, #8
2007007e:	d0fb      	beq.n	20070078 <SystemInit+0x78>
	}

	SystemCoreClock = CHIP_FREQ_CPU_MAX;
20070080:	4a06      	ldr	r2, [pc, #24]	; (2007009c <SystemInit+0x9c>)
20070082:	4b07      	ldr	r3, [pc, #28]	; (200700a0 <SystemInit+0xa0>)
20070084:	601a      	str	r2, [r3, #0]
20070086:	4770      	bx	lr
20070088:	400e0a00 	.word	0x400e0a00
2007008c:	400e0600 	.word	0x400e0600
20070090:	00370809 	.word	0x00370809
20070094:	01370809 	.word	0x01370809
20070098:	200d3f01 	.word	0x200d3f01
2007009c:	0501bd00 	.word	0x0501bd00
200700a0:	20070170 	.word	0x20070170

200700a4 <system_init_flash>:
__no_inline
RAMFUNC
void system_init_flash(uint32_t ul_clk)
{
	/* Set FWS for embedded Flash access according to operating frequency */
	if (ul_clk < CHIP_FREQ_FWS_0) {
200700a4:	4b1b      	ldr	r3, [pc, #108]	; (20070114 <system_init_flash+0x70>)
200700a6:	4298      	cmp	r0, r3
200700a8:	d806      	bhi.n	200700b8 <system_init_flash+0x14>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(0);
200700aa:	2300      	movs	r3, #0
200700ac:	4a1a      	ldr	r2, [pc, #104]	; (20070118 <system_init_flash+0x74>)
200700ae:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(0);
200700b0:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700b4:	6013      	str	r3, [r2, #0]
200700b6:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_1) {
200700b8:	4b18      	ldr	r3, [pc, #96]	; (2007011c <system_init_flash+0x78>)
200700ba:	4298      	cmp	r0, r3
200700bc:	d807      	bhi.n	200700ce <system_init_flash+0x2a>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(1);
200700be:	f44f 7380 	mov.w	r3, #256	; 0x100
200700c2:	4a15      	ldr	r2, [pc, #84]	; (20070118 <system_init_flash+0x74>)
200700c4:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(1);
200700c6:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700ca:	6013      	str	r3, [r2, #0]
200700cc:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_2) {
200700ce:	4b14      	ldr	r3, [pc, #80]	; (20070120 <system_init_flash+0x7c>)
200700d0:	4298      	cmp	r0, r3
200700d2:	d807      	bhi.n	200700e4 <system_init_flash+0x40>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(2);
200700d4:	f44f 7300 	mov.w	r3, #512	; 0x200
200700d8:	4a0f      	ldr	r2, [pc, #60]	; (20070118 <system_init_flash+0x74>)
200700da:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(2);
200700dc:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700e0:	6013      	str	r3, [r2, #0]
200700e2:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_3) {
200700e4:	4b0f      	ldr	r3, [pc, #60]	; (20070124 <system_init_flash+0x80>)
200700e6:	4298      	cmp	r0, r3
200700e8:	d807      	bhi.n	200700fa <system_init_flash+0x56>
		EFC0->EEFC_FMR = EEFC_FMR_FWS(3);
200700ea:	f44f 7340 	mov.w	r3, #768	; 0x300
200700ee:	4a0a      	ldr	r2, [pc, #40]	; (20070118 <system_init_flash+0x74>)
200700f0:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(3);
200700f2:	f502 7200 	add.w	r2, r2, #512	; 0x200
200700f6:	6013      	str	r3, [r2, #0]
200700f8:	4770      	bx	lr
	} else if (ul_clk < CHIP_FREQ_FWS_4) {
200700fa:	4b0b      	ldr	r3, [pc, #44]	; (20070128 <system_init_flash+0x84>)
200700fc:	4298      	cmp	r0, r3
		EFC0->EEFC_FMR = EEFC_FMR_FWS(4);
200700fe:	bf94      	ite	ls
20070100:	f44f 6380 	movls.w	r3, #1024	; 0x400
		EFC1->EEFC_FMR = EEFC_FMR_FWS(4);	
	} else {
		EFC0->EEFC_FMR = EEFC_FMR_FWS(5);
20070104:	f44f 63a0 	movhi.w	r3, #1280	; 0x500
20070108:	4a03      	ldr	r2, [pc, #12]	; (20070118 <system_init_flash+0x74>)
2007010a:	6013      	str	r3, [r2, #0]
		EFC1->EEFC_FMR = EEFC_FMR_FWS(5);
2007010c:	f502 7200 	add.w	r2, r2, #512	; 0x200
20070110:	6013      	str	r3, [r2, #0]
20070112:	4770      	bx	lr
20070114:	0121eabf 	.word	0x0121eabf
20070118:	400e0a00 	.word	0x400e0a00
2007011c:	02faf07f 	.word	0x02faf07f
20070120:	03d08fff 	.word	0x03d08fff
20070124:	04c4b3ff 	.word	0x04c4b3ff
20070128:	055d4a7f 	.word	0x055d4a7f

2007012c <pin_table>:
2007012c:	5c390908 5758591d 675d5556 00003b68     ..9\.YXWVU]gh;..
2007013c:	00000000 0e3a0000 6261600f 07696663     ......:..`abcfi.
2007014c:	4342416a 47464544 14134948 50515253     jABCDEFGHI..SRQP
2007015c:	4c4d4e4f 18102e35 04061617 32310203     ONML5.........12
2007016c:	00003433                                34..

20070170 <SystemCoreClock>:
20070170:	003d0900 00000000                       ..=.....

20070178 <impure_data>:
20070178:	00000000 20070464 200704cc 20070534     ....d.. ... 4.. 
	...
200701ac:	00085a1c 00000000 00000000 00000000     .Z..............
	...
20070220:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
20070230:	0005deec 0000000b 00000000 00000000     ................
	...

200705a0 <_impure_ptr>:
200705a0:	20070178                                x.. 

200705a4 <lconv>:
200705a4:	00085aa0 00085a54 00085a54 00085a54     .Z..TZ..TZ..TZ..
200705b4:	00085a54 00085a54 00085a54 00085a54     TZ..TZ..TZ..TZ..
200705c4:	00085a54 00085a54 ffffffff ffffffff     TZ..TZ..........
200705d4:	ffffffff 0000ffff                       ........

200705dc <__malloc_av_>:
	...
200705e4:	200705dc 200705dc 200705e4 200705e4     ... ... ... ... 
200705f4:	200705ec 200705ec 200705f4 200705f4     ... ... ... ... 
20070604:	200705fc 200705fc 20070604 20070604     ... ... ... ... 
20070614:	2007060c 2007060c 20070614 20070614     ... ... ... ... 
20070624:	2007061c 2007061c 20070624 20070624     ... ... $.. $.. 
20070634:	2007062c 2007062c 20070634 20070634     ,.. ,.. 4.. 4.. 
20070644:	2007063c 2007063c 20070644 20070644     <.. <.. D.. D.. 
20070654:	2007064c 2007064c 20070654 20070654     L.. L.. T.. T.. 
20070664:	2007065c 2007065c 20070664 20070664     \.. \.. d.. d.. 
20070674:	2007066c 2007066c 20070674 20070674     l.. l.. t.. t.. 
20070684:	2007067c 2007067c 20070684 20070684     |.. |.. ... ... 
20070694:	2007068c 2007068c 20070694 20070694     ... ... ... ... 
200706a4:	2007069c 2007069c 200706a4 200706a4     ... ... ... ... 
200706b4:	200706ac 200706ac 200706b4 200706b4     ... ... ... ... 
200706c4:	200706bc 200706bc 200706c4 200706c4     ... ... ... ... 
200706d4:	200706cc 200706cc 200706d4 200706d4     ... ... ... ... 
200706e4:	200706dc 200706dc 200706e4 200706e4     ... ... ... ... 
200706f4:	200706ec 200706ec 200706f4 200706f4     ... ... ... ... 
20070704:	200706fc 200706fc 20070704 20070704     ... ... ... ... 
20070714:	2007070c 2007070c 20070714 20070714     ... ... ... ... 
20070724:	2007071c 2007071c 20070724 20070724     ... ... $.. $.. 
20070734:	2007072c 2007072c 20070734 20070734     ,.. ,.. 4.. 4.. 
20070744:	2007073c 2007073c 20070744 20070744     <.. <.. D.. D.. 
20070754:	2007074c 2007074c 20070754 20070754     L.. L.. T.. T.. 
20070764:	2007075c 2007075c 20070764 20070764     \.. \.. d.. d.. 
20070774:	2007076c 2007076c 20070774 20070774     l.. l.. t.. t.. 
20070784:	2007077c 2007077c 20070784 20070784     |.. |.. ... ... 
20070794:	2007078c 2007078c 20070794 20070794     ... ... ... ... 
200707a4:	2007079c 2007079c 200707a4 200707a4     ... ... ... ... 
200707b4:	200707ac 200707ac 200707b4 200707b4     ... ... ... ... 
200707c4:	200707bc 200707bc 200707c4 200707c4     ... ... ... ... 
200707d4:	200707cc 200707cc 200707d4 200707d4     ... ... ... ... 
200707e4:	200707dc 200707dc 200707e4 200707e4     ... ... ... ... 
200707f4:	200707ec 200707ec 200707f4 200707f4     ... ... ... ... 
20070804:	200707fc 200707fc 20070804 20070804     ... ... ... ... 
20070814:	2007080c 2007080c 20070814 20070814     ... ... ... ... 
20070824:	2007081c 2007081c 20070824 20070824     ... ... $.. $.. 
20070834:	2007082c 2007082c 20070834 20070834     ,.. ,.. 4.. 4.. 
20070844:	2007083c 2007083c 20070844 20070844     <.. <.. D.. D.. 
20070854:	2007084c 2007084c 20070854 20070854     L.. L.. T.. T.. 
20070864:	2007085c 2007085c 20070864 20070864     \.. \.. d.. d.. 
20070874:	2007086c 2007086c 20070874 20070874     l.. l.. t.. t.. 
20070884:	2007087c 2007087c 20070884 20070884     |.. |.. ... ... 
20070894:	2007088c 2007088c 20070894 20070894     ... ... ... ... 
200708a4:	2007089c 2007089c 200708a4 200708a4     ... ... ... ... 
200708b4:	200708ac 200708ac 200708b4 200708b4     ... ... ... ... 
200708c4:	200708bc 200708bc 200708c4 200708c4     ... ... ... ... 
200708d4:	200708cc 200708cc 200708d4 200708d4     ... ... ... ... 
200708e4:	200708dc 200708dc 200708e4 200708e4     ... ... ... ... 
200708f4:	200708ec 200708ec 200708f4 200708f4     ... ... ... ... 
20070904:	200708fc 200708fc 20070904 20070904     ... ... ... ... 
20070914:	2007090c 2007090c 20070914 20070914     ... ... ... ... 
20070924:	2007091c 2007091c 20070924 20070924     ... ... $.. $.. 
20070934:	2007092c 2007092c 20070934 20070934     ,.. ,.. 4.. 4.. 
20070944:	2007093c 2007093c 20070944 20070944     <.. <.. D.. D.. 
20070954:	2007094c 2007094c 20070954 20070954     L.. L.. T.. T.. 
20070964:	2007095c 2007095c 20070964 20070964     \.. \.. d.. d.. 
20070974:	2007096c 2007096c 20070974 20070974     l.. l.. t.. t.. 
20070984:	2007097c 2007097c 20070984 20070984     |.. |.. ... ... 
20070994:	2007098c 2007098c 20070994 20070994     ... ... ... ... 
200709a4:	2007099c 2007099c 200709a4 200709a4     ... ... ... ... 
200709b4:	200709ac 200709ac 200709b4 200709b4     ... ... ... ... 
200709c4:	200709bc 200709bc 200709c4 200709c4     ... ... ... ... 
200709d4:	200709cc 200709cc 200709d4 200709d4     ... ... ... ... 

200709e4 <__malloc_trim_threshold>:
200709e4:	00020000                                ....

200709e8 <__malloc_sbrk_base>:
200709e8:	ffffffff                                ....
